; ModuleID = '/home/michelle/Documents/sa-for-wasm/wasabi/lib/wasm/tests/callgraph-eval/data/library_data/blake3/CG_tools_data/aWsm/awsm.bc'
source_filename = "blake3_js_bg.wasm"

@wasmg_internal_0 = global i32 1048576
@globals_len = constant i32 0
@starting_pages = constant i32 17
@max_pages = constant i32 65536
@init_vector_0 = constant <1877 x i8> <i8 47, i8 114, i8 117, i8 115, i8 116, i8 99, i8 47, i8 55, i8 101, i8 97, i8 99, i8 56, i8 56, i8 97, i8 98, i8 98, i8 50, i8 101, i8 53, i8 55, i8 101, i8 55, i8 53, i8 50, i8 102, i8 51, i8 51, i8 48, i8 50, i8 102, i8 48, i8 50, i8 98, i8 101, i8 53, i8 102, i8 51, i8 99, i8 101, i8 51, i8 100, i8 55, i8 97, i8 100, i8 102, i8 98, i8 52, i8 47, i8 108, i8 105, i8 98, i8 114, i8 97, i8 114, i8 121, i8 47, i8 99, i8 111, i8 114, i8 101, i8 47, i8 115, i8 114, i8 99, i8 47, i8 115, i8 108, i8 105, i8 99, i8 101, i8 47, i8 109, i8 111, i8 100, i8 46, i8 114, i8 115, i8 0, i8 0, i8 0, i8 0, i8 0, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 77, i8 10, i8 0, i8 0, i8 13, i8 0, i8 0, i8 0, i8 47, i8 114, i8 117, i8 115, i8 116, i8 99, i8 47, i8 55, i8 101, i8 97, i8 99, i8 56, i8 56, i8 97, i8 98, i8 98, i8 50, i8 101, i8 53, i8 55, i8 101, i8 55, i8 53, i8 50, i8 102, i8 51, i8 51, i8 48, i8 50, i8 102, i8 48, i8 50, i8 98, i8 101, i8 53, i8 102, i8 51, i8 99, i8 101, i8 51, i8 100, i8 55, i8 97, i8 100, i8 102, i8 98, i8 52, i8 47, i8 108, i8 105, i8 98, i8 114, i8 97, i8 114, i8 121, i8 47, i8 99, i8 111, i8 114, i8 101, i8 47, i8 115, i8 114, i8 99, i8 47, i8 115, i8 108, i8 105, i8 99, i8 101, i8 47, i8 109, i8 111, i8 100, i8 46, i8 114, i8 115, i8 97, i8 115, i8 115, i8 101, i8 114, i8 116, i8 105, i8 111, i8 110, i8 32, i8 102, i8 97, i8 105, i8 108, i8 101, i8 100, i8 58, i8 32, i8 109, i8 105, i8 100, i8 32, i8 60, i8 61, i8 32, i8 115, i8 101, i8 108, i8 102, i8 46, i8 108, i8 101, i8 110, i8 40, i8 41, i8 96, i8 0, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 -102, i8 4, i8 0, i8 0, i8 9, i8 0, i8 0, i8 0, i8 99, i8 97, i8 108, i8 108, i8 101, i8 100, i8 32, i8 96, i8 79, i8 112, i8 116, i8 105, i8 111, i8 110, i8 58, i8 58, i8 117, i8 110, i8 119, i8 114, i8 97, i8 112, i8 40, i8 41, i8 96, i8 32, i8 111, i8 110, i8 32, i8 97, i8 32, i8 96, i8 78, i8 111, i8 110, i8 101, i8 96, i8 32, i8 118, i8 97, i8 108, i8 117, i8 101, i8 47, i8 114, i8 111, i8 111, i8 116, i8 47, i8 46, i8 99, i8 97, i8 114, i8 103, i8 111, i8 47, i8 114, i8 101, i8 103, i8 105, i8 115, i8 116, i8 114, i8 121, i8 47, i8 115, i8 114, i8 99, i8 47, i8 103, i8 105, i8 116, i8 104, i8 117, i8 98, i8 46, i8 99, i8 111, i8 109, i8 45, i8 49, i8 101, i8 99, i8 99, i8 54, i8 50, i8 57, i8 57, i8 100, i8 98, i8 57, i8 101, i8 99, i8 56, i8 50, i8 51, i8 47, i8 98, i8 108, i8 97, i8 107, i8 101, i8 51, i8 45, i8 48, i8 46, i8 51, i8 46, i8 55, i8 47, i8 115, i8 114, i8 99, i8 47, i8 108, i8 105, i8 98, i8 46, i8 114, i8 115, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 101, i8 1, i8 0, i8 0, i8 9, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 11, i8 2, i8 0, i8 0, i8 10, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 57, i8 2, i8 0, i8 0, i8 9, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 -118, i8 2, i8 0, i8 0, i8 10, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 -125, i8 2, i8 0, i8 0, i8 9, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 -82, i8 2, i8 0, i8 0, i8 25, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 -80, i8 2, i8 0, i8 0, i8 9, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 -80, i8 2, i8 0, i8 0, i8 56, i8 0, i8 0, i8 0, i8 103, i8 -26, i8 9, i8 106, i8 -123, i8 -82, i8 103, i8 -69, i8 114, i8 -13, i8 110, i8 60, i8 58, i8 -11, i8 79, i8 -91, i8 127, i8 82, i8 14, i8 81, i8 -116, i8 104, i8 5, i8 -101, i8 -85, i8 -39, i8 -125, i8 31, i8 25, i8 -51, i8 -32, i8 91, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 -103, i8 3, i8 0, i8 0, i8 51, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 -102, i8 3, i8 0, i8 0, i8 50, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 85, i8 4, i8 0, i8 0, i8 22, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 103, i8 4, i8 0, i8 0, i8 22, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 -104, i8 4, i8 0, i8 0, i8 18, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 -94, i8 4, i8 0, i8 0, i8 18, i8 0, i8 0, i8 0, i8 11, i8 1, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 4, i8 5, i8 0, i8 0, i8 33, i8 0, i8 0, i8 0, i8 47, i8 114, i8 117, i8 115, i8 116, i8 99, i8 47, i8 55, i8 101, i8 97, i8 99, i8 56, i8 56, i8 97, i8 98, i8 98, i8 50, i8 101, i8 53, i8 55, i8 101, i8 55, i8 53, i8 50, i8 102, i8 51, i8 51, i8 48, i8 50, i8 102, i8 48, i8 50, i8 98, i8 101, i8 53, i8 102, i8 51, i8 99, i8 101, i8 51, i8 100, i8 55, i8 97, i8 100, i8 102, i8 98, i8 52, i8 47, i8 108, i8 105, i8 98, i8 114, i8 97, i8 114, i8 121, i8 47, i8 99, i8 111, i8 114, i8 101, i8 47, i8 115, i8 114, i8 99, i8 47, i8 115, i8 108, i8 105, i8 99, i8 101, i8 47, i8 109, i8 111, i8 100, i8 46, i8 114, i8 115, i8 0, i8 0, i8 0, i8 104, i8 2, i8 16, i8 0, i8 77, i8 0, i8 0, i8 0, i8 77, i8 10, i8 0, i8 0, i8 13, i8 0, i8 0, i8 0, i8 99, i8 97, i8 108, i8 108, i8 101, i8 100, i8 32, i8 96, i8 82, i8 101, i8 115, i8 117, i8 108, i8 116, i8 58, i8 58, i8 117, i8 110, i8 119, i8 114, i8 97, i8 112, i8 40, i8 41, i8 96, i8 32, i8 111, i8 110, i8 32, i8 97, i8 110, i8 32, i8 96, i8 69, i8 114, i8 114, i8 96, i8 32, i8 118, i8 97, i8 108, i8 117, i8 101, i8 0, i8 1, i8 0, i8 0, i8 0, i8 4, i8 0, i8 0, i8 0, i8 4, i8 0, i8 0, i8 0, i8 2, i8 0, i8 0, i8 0, i8 1, i8 0, i8 0, i8 0, i8 4, i8 0, i8 0, i8 0, i8 4, i8 0, i8 0, i8 0, i8 2, i8 0, i8 0, i8 0, i8 1, i8 0, i8 0, i8 0, i8 32, i8 0, i8 0, i8 0, i8 1, i8 0, i8 0, i8 0, i8 3, i8 0, i8 0, i8 0, i8 47, i8 114, i8 111, i8 111, i8 116, i8 47, i8 46, i8 99, i8 97, i8 114, i8 103, i8 111, i8 47, i8 114, i8 101, i8 103, i8 105, i8 115, i8 116, i8 114, i8 121, i8 47, i8 115, i8 114, i8 99, i8 47, i8 103, i8 105, i8 116, i8 104, i8 117, i8 98, i8 46, i8 99, i8 111, i8 109, i8 45, i8 49, i8 101, i8 99, i8 99, i8 54, i8 50, i8 57, i8 57, i8 100, i8 98, i8 57, i8 101, i8 99, i8 56, i8 50, i8 51, i8 47, i8 97, i8 114, i8 114, i8 97, i8 121, i8 118, i8 101, i8 99, i8 45, i8 48, i8 46, i8 53, i8 46, i8 50, i8 47, i8 115, i8 114, i8 99, i8 47, i8 108, i8 105, i8 98, i8 46, i8 114, i8 115, i8 0, i8 36, i8 3, i8 16, i8 0, i8 79, i8 0, i8 0, i8 0, i8 -51, i8 0, i8 0, i8 0, i8 32, i8 0, i8 0, i8 0, i8 58, i8 32, i8 0, i8 0, i8 -124, i8 3, i8 16, i8 0, i8 0, i8 0, i8 0, i8 0, i8 -124, i8 3, i8 16, i8 0, i8 2, i8 0, i8 0, i8 0, i8 67, i8 97, i8 112, i8 97, i8 99, i8 105, i8 116, i8 121, i8 69, i8 114, i8 114, i8 111, i8 114, i8 0, i8 0, i8 0, i8 -104, i8 3, i8 16, i8 0, i8 13, i8 0, i8 0, i8 0, i8 105, i8 110, i8 115, i8 117, i8 102, i8 102, i8 105, i8 99, i8 105, i8 101, i8 110, i8 116, i8 32, i8 99, i8 97, i8 112, i8 97, i8 99, i8 105, i8 116, i8 121, i8 0, i8 0, i8 0, i8 -80, i8 3, i8 16, i8 0, i8 21, i8 0, i8 0, i8 0, i8 110, i8 117, i8 108, i8 108, i8 32, i8 112, i8 111, i8 105, i8 110, i8 116, i8 101, i8 114, i8 32, i8 112, i8 97, i8 115, i8 115, i8 101, i8 100, i8 32, i8 116, i8 111, i8 32, i8 114, i8 117, i8 115, i8 116, i8 114, i8 101, i8 99, i8 117, i8 114, i8 115, i8 105, i8 118, i8 101, i8 32, i8 117, i8 115, i8 101, i8 32, i8 111, i8 102, i8 32, i8 97, i8 110, i8 32, i8 111, i8 98, i8 106, i8 101, i8 99, i8 116, i8 32, i8 100, i8 101, i8 116, i8 101, i8 99, i8 116, i8 101, i8 100, i8 32, i8 119, i8 104, i8 105, i8 99, i8 104, i8 32, i8 119, i8 111, i8 117, i8 108, i8 100, i8 32, i8 108, i8 101, i8 97, i8 100, i8 32, i8 116, i8 111, i8 32, i8 117, i8 110, i8 115, i8 97, i8 102, i8 101, i8 32, i8 97, i8 108, i8 105, i8 97, i8 115, i8 105, i8 110, i8 103, i8 32, i8 105, i8 110, i8 32, i8 114, i8 117, i8 115, i8 116, i8 0, i8 0, i8 6, i8 0, i8 0, i8 0, i8 4, i8 0, i8 0, i8 0, i8 4, i8 0, i8 0, i8 0, i8 7, i8 0, i8 0, i8 0, i8 8, i8 0, i8 0, i8 0, i8 9, i8 0, i8 0, i8 0, i8 6, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8 0, i8 0, i8 0, i8 10, i8 0, i8 0, i8 0, i8 99, i8 97, i8 108, i8 108, i8 101, i8 100, i8 32, i8 96, i8 79, i8 112, i8 116, i8 105, i8 111, i8 110, i8 58, i8 58, i8 117, i8 110, i8 119, i8 114, i8 97, i8 112, i8 40, i8 41, i8 96, i8 32, i8 111, i8 110, i8 32, i8 97, i8 32, i8 96, i8 78, i8 111, i8 110, i8 101, i8 96, i8 32, i8 118, i8 97, i8 108, i8 117, i8 101, i8 108, i8 105, i8 98, i8 114, i8 97, i8 114, i8 121, i8 47, i8 115, i8 116, i8 100, i8 47, i8 115, i8 114, i8 99, i8 47, i8 112, i8 97, i8 110, i8 105, i8 99, i8 107, i8 105, i8 110, i8 103, i8 46, i8 114, i8 115, i8 0, i8 -113, i8 4, i8 16, i8 0, i8 28, i8 0, i8 0, i8 0, i8 -31, i8 1, i8 0, i8 0, i8 31, i8 0, i8 0, i8 0, i8 -113, i8 4, i8 16, i8 0, i8 28, i8 0, i8 0, i8 0, i8 -30, i8 1, i8 0, i8 0, i8 30, i8 0, i8 0, i8 0, i8 11, i8 0, i8 0, i8 0, i8 16, i8 0, i8 0, i8 0, i8 4, i8 0, i8 0, i8 0, i8 12, i8 0, i8 0, i8 0, i8 13, i8 0, i8 0, i8 0, i8 14, i8 0, i8 0, i8 0, i8 12, i8 0, i8 0, i8 0, i8 4, i8 0, i8 0, i8 0, i8 15, i8 0, i8 0, i8 0, i8 108, i8 105, i8 98, i8 114, i8 97, i8 114, i8 121, i8 47, i8 97, i8 108, i8 108, i8 111, i8 99, i8 47, i8 115, i8 114, i8 99, i8 47, i8 114, i8 97, i8 119, i8 95, i8 118, i8 101, i8 99, i8 46, i8 114, i8 115, i8 99, i8 97, i8 112, i8 97, i8 99, i8 105, i8 116, i8 121, i8 32, i8 111, i8 118, i8 101, i8 114, i8 102, i8 108, i8 111, i8 119, i8 0, i8 0, i8 0, i8 -16, i8 4, i8 16, i8 0, i8 28, i8 0, i8 0, i8 0, i8 29, i8 2, i8 0, i8 0, i8 5, i8 0, i8 0, i8 0, i8 58, i8 32, i8 0, i8 0, i8 48, i8 5, i8 16, i8 0, i8 0, i8 0, i8 0, i8 0, i8 48, i8 5, i8 16, i8 0, i8 2, i8 0, i8 0, i8 0, i8 20, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 1, i8 0, i8 0, i8 0, i8 21, i8 0, i8 0, i8 0, i8 105, i8 110, i8 100, i8 101, i8 120, i8 32, i8 111, i8 117, i8 116, i8 32, i8 111, i8 102, i8 32, i8 98, i8 111, i8 117, i8 110, i8 100, i8 115, i8 58, i8 32, i8 116, i8 104, i8 101, i8 32, i8 108, i8 101, i8 110, i8 32, i8 105, i8 115, i8 32, i8 32, i8 98, i8 117, i8 116, i8 32, i8 116, i8 104, i8 101, i8 32, i8 105, i8 110, i8 100, i8 101, i8 120, i8 32, i8 105, i8 115, i8 32, i8 0, i8 0, i8 84, i8 5, i8 16, i8 0, i8 32, i8 0, i8 0, i8 0, i8 116, i8 5, i8 16, i8 0, i8 18, i8 0, i8 0, i8 0, i8 41, i8 48, i8 48, i8 48, i8 49, i8 48, i8 50, i8 48, i8 51, i8 48, i8 52, i8 48, i8 53, i8 48, i8 54, i8 48, i8 55, i8 48, i8 56, i8 48, i8 57, i8 49, i8 48, i8 49, i8 49, i8 49, i8 50, i8 49, i8 51, i8 49, i8 52, i8 49, i8 53, i8 49, i8 54, i8 49, i8 55, i8 49, i8 56, i8 49, i8 57, i8 50, i8 48, i8 50, i8 49, i8 50, i8 50, i8 50, i8 51, i8 50, i8 52, i8 50, i8 53, i8 50, i8 54, i8 50, i8 55, i8 50, i8 56, i8 50, i8 57, i8 51, i8 48, i8 51, i8 49, i8 51, i8 50, i8 51, i8 51, i8 51, i8 52, i8 51, i8 53, i8 51, i8 54, i8 51, i8 55, i8 51, i8 56, i8 51, i8 57, i8 52, i8 48, i8 52, i8 49, i8 52, i8 50, i8 52, i8 51, i8 52, i8 52, i8 52, i8 53, i8 52, i8 54, i8 52, i8 55, i8 52, i8 56, i8 52, i8 57, i8 53, i8 48, i8 53, i8 49, i8 53, i8 50, i8 53, i8 51, i8 53, i8 52, i8 53, i8 53, i8 53, i8 54, i8 53, i8 55, i8 53, i8 56, i8 53, i8 57, i8 54, i8 48, i8 54, i8 49, i8 54, i8 50, i8 54, i8 51, i8 54, i8 52, i8 54, i8 53, i8 54, i8 54, i8 54, i8 55, i8 54, i8 56, i8 54, i8 57, i8 55, i8 48, i8 55, i8 49, i8 55, i8 50, i8 55, i8 51, i8 55, i8 52, i8 55, i8 53, i8 55, i8 54, i8 55, i8 55, i8 55, i8 56, i8 55, i8 57, i8 56, i8 48, i8 56, i8 49, i8 56, i8 50, i8 56, i8 51, i8 56, i8 52, i8 56, i8 53, i8 56, i8 54, i8 56, i8 55, i8 56, i8 56, i8 56, i8 57, i8 57, i8 48, i8 57, i8 49, i8 57, i8 50, i8 57, i8 51, i8 57, i8 52, i8 57, i8 53, i8 57, i8 54, i8 57, i8 55, i8 57, i8 56, i8 57, i8 57, i8 108, i8 105, i8 98, i8 114, i8 97, i8 114, i8 121, i8 47, i8 99, i8 111, i8 114, i8 101, i8 47, i8 115, i8 114, i8 99, i8 47, i8 102, i8 109, i8 116, i8 47, i8 109, i8 111, i8 100, i8 46, i8 114, i8 115, i8 97, i8 6, i8 16, i8 0, i8 27, i8 0, i8 0, i8 0, i8 87, i8 4, i8 0, i8 0, i8 17, i8 0, i8 0, i8 0, i8 97, i8 6, i8 16, i8 0, i8 27, i8 0, i8 0, i8 0, i8 97, i8 4, i8 0, i8 0, i8 36, i8 0, i8 0, i8 0, i8 114, i8 97, i8 110, i8 103, i8 101, i8 32, i8 115, i8 116, i8 97, i8 114, i8 116, i8 32, i8 105, i8 110, i8 100, i8 101, i8 120, i8 32, i8 32, i8 111, i8 117, i8 116, i8 32, i8 111, i8 102, i8 32, i8 114, i8 97, i8 110, i8 103, i8 101, i8 32, i8 102, i8 111, i8 114, i8 32, i8 115, i8 108, i8 105, i8 99, i8 101, i8 32, i8 111, i8 102, i8 32, i8 108, i8 101, i8 110, i8 103, i8 116, i8 104, i8 32, i8 -100, i8 6, i8 16, i8 0, i8 18, i8 0, i8 0, i8 0, i8 -82, i8 6, i8 16, i8 0, i8 34, i8 0, i8 0, i8 0, i8 114, i8 97, i8 110, i8 103, i8 101, i8 32, i8 101, i8 110, i8 100, i8 32, i8 105, i8 110, i8 100, i8 101, i8 120, i8 32, i8 -32, i8 6, i8 16, i8 0, i8 16, i8 0, i8 0, i8 0, i8 -82, i8 6, i8 16, i8 0, i8 34, i8 0, i8 0, i8 0, i8 115, i8 111, i8 117, i8 114, i8 99, i8 101, i8 32, i8 115, i8 108, i8 105, i8 99, i8 101, i8 32, i8 108, i8 101, i8 110, i8 103, i8 116, i8 104, i8 32, i8 40, i8 41, i8 32, i8 100, i8 111, i8 101, i8 115, i8 32, i8 110, i8 111, i8 116, i8 32, i8 109, i8 97, i8 116, i8 99, i8 104, i8 32, i8 100, i8 101, i8 115, i8 116, i8 105, i8 110, i8 97, i8 116, i8 105, i8 111, i8 110, i8 32, i8 115, i8 108, i8 105, i8 99, i8 101, i8 32, i8 108, i8 101, i8 110, i8 103, i8 116, i8 104, i8 32, i8 40, i8 0, i8 7, i8 16, i8 0, i8 21, i8 0, i8 0, i8 0, i8 21, i8 7, i8 16, i8 0, i8 43, i8 0, i8 0, i8 0, i8 -104, i8 5, i8 16, i8 0, i8 1>

declare void @initialize_region(i32, i32, i8*)

declare i32 @instruction_memory_size()

declare i32 @instruction_memory_grow(i32)

declare void @add_function_to_table(i32, i32, i8*)

declare i8* @get_function_from_table(i32, i32)

declare i32 @rotl_u32(i32, i32)

declare i32 @rotr_u32(i32, i32)

declare i64 @rotl_u64(i64, i64)

declare i64 @rotr_u64(i64, i64)

declare i32 @i32_trunc_f32(float)

declare i32 @u32_trunc_f32(float)

declare i32 @i32_trunc_f64(double)

declare i32 @u32_trunc_f64(double)

declare i64 @i64_trunc_f32(float)

declare i64 @u64_trunc_f32(float)

declare i64 @i64_trunc_f64(double)

declare i64 @u64_trunc_f64(double)

declare float @f32_trunc_f32(float)

declare double @f64_trunc_f64(double)

declare float @get_f32(i32)

declare void @set_f32(i32, float)

declare double @get_f64(i32)

declare void @set_f64(i32, double)

declare i8 @get_i8(i32)

declare void @set_i8(i32, i8)

declare i16 @get_i16(i32)

declare void @set_i16(i32, i16)

declare i32 @get_i32(i32)

declare void @set_i32(i32, i32)

declare i64 @get_i64(i32)

declare void @set_i64(i32, i64)

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.cttz.i64(i64, i1 immarg) #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.ctpop.i64(i64) #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare float @llvm.sqrt.f32(float) #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.sqrt.f64(double) #0

declare float @f32_min(float, float)

declare float @f32_max(float, float)

declare float @f32_copysign(float, float)

declare float @f32_floor(float)

declare float @f32_ceil(float)

declare float @f32_nearest(float)

declare double @f64_min(double, double)

declare double @f64_max(double, double)

declare double @f64_copysign(double, double)

declare double @f64_floor(double)

declare double @f64_ceil(double)

declare double @f64_nearest(double)

declare i32 @u32_div(i32, i32)

declare i32 @u32_rem(i32, i32)

declare i32 @i32_div(i32, i32)

declare i32 @i32_rem(i32, i32)

declare i64 @u64_div(i64, i64)

declare i64 @u64_rem(i64, i64)

declare i64 @i64_div(i64, i64)

declare i64 @i64_rem(i64, i64)

declare void @awsm_abi__trap_unreachable()

declare void @__wbindgen_placeholder_____wbindgen_throw(i32, i32)

; Function Attrs: nounwind
define i32 @wasmf_internal_1(i32 %0) #1 {
entry:
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 %18

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_279, %b_171
  %1 = phi i32 [ %929, %b_171 ], [ %887, %b_279 ]
  %2 = phi i32 [ %57, %b_171 ], [ %878, %b_279 ]
  %3 = phi i32 [ %58, %b_171 ], [ %879, %b_279 ]
  %4 = phi i32 [ %59, %b_171 ], [ %880, %b_279 ]
  %5 = phi i32 [ %60, %b_171 ], [ %881, %b_279 ]
  %6 = phi i32 [ %61, %b_171 ], [ %882, %b_279 ]
  %7 = phi i32 [ %62, %b_171 ], [ %883, %b_279 ]
  %8 = phi i32 [ %63, %b_171 ], [ %884, %b_279 ]
  %9 = phi i32 [ %64, %b_171 ], [ %885, %b_279 ]
  %10 = phi i64 [ %65, %b_171 ], [ %886, %b_279 ]
  %11 = sub i32 %1, %6
  call void @set_i32(i32 1050912, i32 %11)
  %12 = call i32 @get_i32(i32 1050920)
  %13 = add i32 %12, %6
  call void @set_i32(i32 1050920, i32 %13)
  %14 = or i32 %11, 1
  %15 = add i32 %13, 4
  call void @set_i32(i32 %15, i32 %14)
  %16 = or i32 %6, 3
  %17 = add i32 %12, 4
  call void @set_i32(i32 %17, i32 %16)
  %18 = add i32 %12, 8
  br label %exit

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_175, %b_174, %b_164, %b_126, %b_10
  %19 = phi i32 [ %0, %b_10 ], [ %691, %b_126 ], [ %934, %b_174 ], [ %934, %b_175 ], [ %887, %b_164 ]
  %20 = phi i32 [ 0, %b_10 ], [ %679, %b_126 ], [ %936, %b_174 ], [ %936, %b_175 ], [ %878, %b_164 ]
  %21 = phi i32 [ 0, %b_10 ], [ %680, %b_126 ], [ %58, %b_174 ], [ %58, %b_175 ], [ %879, %b_164 ]
  %22 = phi i32 [ 0, %b_10 ], [ %681, %b_126 ], [ %59, %b_174 ], [ %59, %b_175 ], [ %880, %b_164 ]
  %23 = phi i32 [ 0, %b_10 ], [ %682, %b_126 ], [ %60, %b_174 ], [ %940, %b_175 ], [ %881, %b_164 ]
  %24 = phi i32 [ 0, %b_10 ], [ %683, %b_126 ], [ %61, %b_174 ], [ %61, %b_175 ], [ %882, %b_164 ]
  %25 = phi i32 [ 0, %b_10 ], [ %684, %b_126 ], [ 0, %b_174 ], [ 0, %b_175 ], [ %883, %b_164 ]
  %26 = phi i32 [ 0, %b_10 ], [ %685, %b_126 ], [ %63, %b_174 ], [ %63, %b_175 ], [ %884, %b_164 ]
  %27 = phi i32 [ 0, %b_10 ], [ %686, %b_126 ], [ %64, %b_174 ], [ %64, %b_175 ], [ %885, %b_164 ]
  %28 = phi i64 [ 0, %b_10 ], [ %687, %b_126 ], [ %65, %b_174 ], [ %65, %b_175 ], [ %886, %b_164 ]
  ret i32 %25

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_283, %b_282, %b_162, %b_158, %b_144
  %29 = phi i32 [ %785, %b_144 ], [ %853, %b_158 ], [ %853, %b_162 ], [ %1523, %b_282 ], [ %1523, %b_283 ]
  %30 = phi i32 [ %786, %b_144 ], [ %786, %b_158 ], [ %786, %b_162 ], [ %1512, %b_282 ], [ %1512, %b_283 ]
  %31 = phi i32 [ %787, %b_144 ], [ %787, %b_158 ], [ %787, %b_162 ], [ %1513, %b_282 ], [ %1513, %b_283 ]
  %32 = phi i32 [ %788, %b_144 ], [ %788, %b_158 ], [ %788, %b_162 ], [ %1514, %b_282 ], [ %1514, %b_283 ]
  %33 = phi i32 [ %789, %b_144 ], [ %789, %b_158 ], [ %789, %b_162 ], [ %1515, %b_282 ], [ %1515, %b_283 ]
  %34 = phi i32 [ %790, %b_144 ], [ %790, %b_158 ], [ %790, %b_162 ], [ %1516, %b_282 ], [ %1516, %b_283 ]
  %35 = phi i32 [ %791, %b_144 ], [ %791, %b_158 ], [ %791, %b_162 ], [ %1517, %b_282 ], [ %1517, %b_283 ]
  %36 = phi i32 [ %792, %b_144 ], [ %792, %b_158 ], [ %792, %b_162 ], [ %1518, %b_282 ], [ %1518, %b_283 ]
  %37 = phi i32 [ %793, %b_144 ], [ %793, %b_158 ], [ %793, %b_162 ], [ %1519, %b_282 ], [ %1519, %b_283 ]
  %38 = phi i64 [ %794, %b_144 ], [ %794, %b_158 ], [ %794, %b_162 ], [ %1520, %b_282 ], [ %1520, %b_283 ]
  br label %b_284

b_6:                                              ; preds = %b_4
  br label %b_8

b_7:                                              ; preds = %b_161, %b_160
  %39 = phi i32 [ %853, %b_161 ], [ %853, %b_160 ]
  %40 = phi i32 [ %786, %b_161 ], [ %786, %b_160 ]
  %41 = phi i32 [ %787, %b_161 ], [ %787, %b_160 ]
  %42 = phi i32 [ %788, %b_161 ], [ %788, %b_160 ]
  %43 = phi i32 [ %789, %b_161 ], [ %789, %b_160 ]
  %44 = phi i32 [ %790, %b_161 ], [ %790, %b_160 ]
  %45 = phi i32 [ %791, %b_161 ], [ %791, %b_160 ]
  %46 = phi i32 [ %792, %b_161 ], [ %792, %b_160 ]
  %47 = phi i32 [ %793, %b_161 ], [ %793, %b_160 ]
  %48 = phi i64 [ %794, %b_161 ], [ %794, %b_160 ]
  %49 = add i32 %40, 24
  call void @set_i32(i32 %49, i32 %46)
  %50 = add i32 %41, 16
  %51 = call i32 @get_i32(i32 %50)
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %b_280, label %b_281

b_8:                                              ; preds = %b_6
  %53 = icmp uge i32 %0, 245
  %54 = zext i1 %53 to i32
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %b_10, label %b_11

b_9:                                              ; preds = %b_117, %b_113, %b_41, %b_38, %b_25, %b_16, %b_13
  %56 = phi i32 [ %69, %b_13 ], [ %161, %b_25 ], [ %222, %b_38 ], [ %269, %b_41 ], [ %86, %b_16 ], [ %593, %b_113 ], [ %605, %b_117 ]
  %57 = phi i32 [ 0, %b_13 ], [ %147, %b_25 ], [ %147, %b_38 ], [ %260, %b_41 ], [ %77, %b_16 ], [ %595, %b_113 ], [ %595, %b_117 ]
  %58 = phi i32 [ 0, %b_13 ], [ %148, %b_25 ], [ %148, %b_38 ], [ %261, %b_41 ], [ %78, %b_16 ], [ %586, %b_113 ], [ %586, %b_117 ]
  %59 = phi i32 [ 0, %b_13 ], [ 0, %b_25 ], [ 0, %b_38 ], [ %262, %b_41 ], [ %79, %b_16 ], [ 0, %b_113 ], [ 0, %b_117 ]
  %60 = phi i32 [ 0, %b_13 ], [ %150, %b_25 ], [ %150, %b_38 ], [ %263, %b_41 ], [ %80, %b_16 ], [ 0, %b_113 ], [ 0, %b_117 ]
  %61 = phi i32 [ %70, %b_13 ], [ %151, %b_25 ], [ %151, %b_38 ], [ %264, %b_41 ], [ %81, %b_16 ], [ %592, %b_113 ], [ %592, %b_117 ]
  %62 = phi i32 [ 0, %b_13 ], [ %152, %b_25 ], [ %152, %b_38 ], [ %265, %b_41 ], [ %82, %b_16 ], [ 0, %b_113 ], [ 0, %b_117 ]
  %63 = phi i32 [ 0, %b_13 ], [ %153, %b_25 ], [ %153, %b_38 ], [ %266, %b_41 ], [ %83, %b_16 ], [ 0, %b_113 ], [ 0, %b_117 ]
  %64 = phi i32 [ %71, %b_13 ], [ %154, %b_25 ], [ %154, %b_38 ], [ %267, %b_41 ], [ %84, %b_16 ], [ 0, %b_113 ], [ 0, %b_117 ]
  %65 = phi i64 [ 0, %b_13 ], [ %155, %b_25 ], [ %155, %b_38 ], [ %268, %b_41 ], [ %85, %b_16 ], [ 0, %b_113 ], [ 0, %b_117 ]
  br label %b_163

b_10:                                             ; preds = %b_8
  %66 = icmp uge i32 %0, -65587
  %67 = zext i1 %66 to i32
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %b_3, label %b_13

b_11:                                             ; preds = %b_8
  br label %b_12

b_12:                                             ; preds = %b_11
  br label %b_109

b_13:                                             ; preds = %b_10
  %69 = add i32 %0, 11
  %70 = and i32 %69, -8
  %71 = call i32 @get_i32(i32 1050512)
  %72 = icmp eq i32 0, %71
  %73 = zext i1 %72 to i32
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %b_9, label %b_14

b_14:                                             ; preds = %b_13
  %75 = sub i32 0, %70
  br label %b_15

b_15:                                             ; preds = %b_14
  br label %b_17

b_16:                                             ; preds = %b_46, %b_36
  %76 = phi i32 [ %201, %b_36 ], [ %269, %b_46 ]
  %77 = phi i32 [ %207, %b_36 ], [ %260, %b_46 ]
  %78 = phi i32 [ %208, %b_36 ], [ %261, %b_46 ]
  %79 = phi i32 [ %186, %b_36 ], [ %262, %b_46 ]
  %80 = phi i32 [ %195, %b_36 ], [ %263, %b_46 ]
  %81 = phi i32 [ %188, %b_36 ], [ %264, %b_46 ]
  %82 = phi i32 [ %189, %b_36 ], [ %265, %b_46 ]
  %83 = phi i32 [ %190, %b_36 ], [ %266, %b_46 ]
  %84 = phi i32 [ %191, %b_36 ], [ %267, %b_46 ]
  %85 = phi i64 [ %192, %b_36 ], [ %268, %b_46 ]
  %86 = call i32 @get_i32(i32 1050908)
  %87 = icmp uge i32 %86, %81
  %88 = zext i1 %87 to i32
  %89 = sub i32 %86, %81
  %90 = icmp uge i32 %82, %89
  %91 = zext i1 %90 to i32
  %92 = icmp ne i32 %91, 0
  %93 = select i1 %92, i32 %88, i32 0
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %b_9, label %b_47

b_17:                                             ; preds = %b_15
  br label %b_19

b_18:                                             ; preds = %b_39, %b_34, %b_32
  %95 = phi i32 [ %165, %b_32 ], [ %207, %b_34 ], [ %222, %b_39 ]
  %96 = phi i32 [ %166, %b_32 ], [ %207, %b_34 ], [ %147, %b_39 ]
  %97 = phi i32 [ %167, %b_32 ], [ %208, %b_34 ], [ %148, %b_39 ]
  %98 = phi i32 [ %165, %b_32 ], [ %186, %b_34 ], [ 0, %b_39 ]
  %99 = phi i32 [ %210, %b_32 ], [ %195, %b_34 ], [ %150, %b_39 ]
  %100 = phi i32 [ %170, %b_32 ], [ %188, %b_34 ], [ %151, %b_39 ]
  %101 = phi i32 [ 0, %b_32 ], [ %189, %b_34 ], [ %152, %b_39 ]
  %102 = phi i32 [ %172, %b_32 ], [ %190, %b_34 ], [ %153, %b_39 ]
  %103 = phi i32 [ %173, %b_32 ], [ %191, %b_34 ], [ %154, %b_39 ]
  %104 = phi i64 [ %174, %b_32 ], [ %192, %b_34 ], [ %155, %b_39 ]
  br label %b_40

b_19:                                             ; preds = %b_17
  %105 = lshr i32 %69, 8
  %106 = icmp eq i32 0, %105
  %107 = zext i1 %106 to i32
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %b_20, label %b_21

b_20:                                             ; preds = %b_22, %b_21, %b_19
  %109 = phi i32 [ %105, %b_19 ], [ %105, %b_21 ], [ %128, %b_22 ]
  %110 = phi i32 [ 0, %b_19 ], [ 0, %b_21 ], [ 0, %b_22 ]
  %111 = phi i32 [ 0, %b_19 ], [ 0, %b_21 ], [ 0, %b_22 ]
  %112 = phi i32 [ 0, %b_19 ], [ 0, %b_21 ], [ 0, %b_22 ]
  %113 = phi i32 [ 0, %b_19 ], [ 0, %b_21 ], [ 0, %b_22 ]
  %114 = phi i32 [ %70, %b_19 ], [ %70, %b_21 ], [ %70, %b_22 ]
  %115 = phi i32 [ %75, %b_19 ], [ %75, %b_21 ], [ %75, %b_22 ]
  %116 = phi i32 [ 0, %b_19 ], [ 0, %b_21 ], [ 0, %b_22 ]
  %117 = phi i32 [ %71, %b_19 ], [ %71, %b_21 ], [ %71, %b_22 ]
  %118 = phi i64 [ 0, %b_19 ], [ 0, %b_21 ], [ 0, %b_22 ]
  %119 = phi i32 [ 0, %b_19 ], [ 31, %b_21 ], [ %136, %b_22 ]
  %120 = shl i32 %119, 2
  %121 = add i32 %120, 1050780
  %122 = add i32 %121, 0
  %123 = call i32 @get_i32(i32 %122)
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %b_23, label %b_24

b_21:                                             ; preds = %b_19
  %125 = icmp ugt i32 %70, 16777215
  %126 = zext i1 %125 to i32
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %b_20, label %b_22

b_22:                                             ; preds = %b_21
  %128 = call i32 @llvm.ctlz.i32(i32 %105, i1 false)
  %129 = sub i32 6, %128
  %130 = and i32 %129, 31
  %131 = urem i32 %130, 32
  %132 = lshr i32 %70, %131
  %133 = and i32 %132, 1
  %134 = shl i32 %128, 1
  %135 = sub i32 %133, %134
  %136 = add i32 %135, 62
  br label %b_20

b_23:                                             ; preds = %b_20
  %137 = lshr i32 %119, 1
  %138 = sub i32 25, %137
  %139 = and i32 %138, 31
  %140 = icmp eq i32 %119, 31
  %141 = zext i1 %140 to i32
  %142 = icmp ne i32 %141, 0
  %143 = select i1 %142, i32 0, i32 %139
  %144 = urem i32 %143, 32
  %145 = shl i32 %114, %144
  br label %b_26

b_24:                                             ; preds = %b_20
  br label %b_25

b_25:                                             ; preds = %b_37, %b_24
  %146 = phi i32 [ %201, %b_37 ], [ %123, %b_24 ]
  %147 = phi i32 [ %207, %b_37 ], [ %110, %b_24 ]
  %148 = phi i32 [ %208, %b_37 ], [ %111, %b_24 ]
  %149 = phi i32 [ %186, %b_37 ], [ %112, %b_24 ]
  %150 = phi i32 [ %195, %b_37 ], [ %113, %b_24 ]
  %151 = phi i32 [ %188, %b_37 ], [ %114, %b_24 ]
  %152 = phi i32 [ %189, %b_37 ], [ %115, %b_24 ]
  %153 = phi i32 [ %190, %b_37 ], [ %119, %b_24 ]
  %154 = phi i32 [ %191, %b_37 ], [ %117, %b_24 ]
  %155 = phi i64 [ %192, %b_37 ], [ %118, %b_24 ]
  %156 = and i32 %153, 31
  %157 = urem i32 %156, 32
  %158 = shl i32 2, %157
  %159 = sub i32 0, %158
  %160 = or i32 %158, %159
  %161 = and i32 %160, %154
  %162 = icmp eq i32 0, %161
  %163 = zext i1 %162 to i32
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %b_9, label %b_38

b_26:                                             ; preds = %b_29, %b_23
  %165 = phi i32 [ %123, %b_23 ], [ %201, %b_29 ]
  %166 = phi i32 [ %110, %b_23 ], [ %207, %b_29 ]
  %167 = phi i32 [ %145, %b_23 ], [ %208, %b_29 ]
  %168 = phi i32 [ %112, %b_23 ], [ %186, %b_29 ]
  %169 = phi i32 [ %113, %b_23 ], [ %195, %b_29 ]
  %170 = phi i32 [ %114, %b_23 ], [ %188, %b_29 ]
  %171 = phi i32 [ %115, %b_23 ], [ %189, %b_29 ]
  %172 = phi i32 [ %119, %b_23 ], [ %190, %b_29 ]
  %173 = phi i32 [ %117, %b_23 ], [ %191, %b_29 ]
  %174 = phi i64 [ %118, %b_23 ], [ %192, %b_29 ]
  br label %b_28

b_27:                                             ; preds = %b_33
  %175 = icmp ne i32 %207, 0
  br i1 %175, label %b_34, label %b_35

b_28:                                             ; preds = %b_26
  %176 = add i32 %165, 4
  %177 = add i32 %176, 0
  %178 = call i32 @get_i32(i32 %177)
  %179 = and i32 %178, -8
  %180 = icmp ult i32 %179, %170
  %181 = zext i1 %180 to i32
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %b_29, label %b_30

b_29:                                             ; preds = %b_31, %b_30, %b_28
  %183 = phi i32 [ %165, %b_28 ], [ %165, %b_30 ], [ %165, %b_31 ]
  %184 = phi i32 [ %166, %b_28 ], [ %166, %b_30 ], [ %166, %b_31 ]
  %185 = phi i32 [ %167, %b_28 ], [ %167, %b_30 ], [ %167, %b_31 ]
  %186 = phi i32 [ %168, %b_28 ], [ %168, %b_30 ], [ %165, %b_31 ]
  %187 = phi i32 [ %179, %b_28 ], [ %210, %b_30 ], [ %210, %b_31 ]
  %188 = phi i32 [ %170, %b_28 ], [ %170, %b_30 ], [ %170, %b_31 ]
  %189 = phi i32 [ %171, %b_28 ], [ %171, %b_30 ], [ %210, %b_31 ]
  %190 = phi i32 [ %172, %b_28 ], [ %172, %b_30 ], [ %172, %b_31 ]
  %191 = phi i32 [ %173, %b_28 ], [ %173, %b_30 ], [ %173, %b_31 ]
  %192 = phi i64 [ %174, %b_28 ], [ %174, %b_30 ], [ %174, %b_31 ]
  %193 = add i32 %183, 20
  %194 = add i32 %193, 0
  %195 = call i32 @get_i32(i32 %194)
  %196 = lshr i32 %185, 29
  %197 = and i32 %196, 4
  %198 = add i32 %183, %197
  %199 = add i32 %198, 16
  %200 = add i32 %199, 0
  %201 = call i32 @get_i32(i32 %200)
  %202 = icmp ne i32 %195, %201
  %203 = zext i1 %202 to i32
  %204 = icmp ne i32 %203, 0
  %205 = select i1 %204, i32 %195, i32 %184
  %206 = icmp ne i32 %195, 0
  %207 = select i1 %206, i32 %205, i32 %184
  %208 = shl i32 %185, 1
  %209 = icmp ne i32 %201, 0
  br i1 %209, label %b_26, label %b_33

b_30:                                             ; preds = %b_28
  %210 = sub i32 %179, %170
  %211 = icmp uge i32 %210, %171
  %212 = zext i1 %211 to i32
  %213 = icmp ne i32 %212, 0
  br i1 %213, label %b_29, label %b_31

b_31:                                             ; preds = %b_30
  %214 = icmp ne i32 %210, 0
  br i1 %214, label %b_29, label %b_32

b_32:                                             ; preds = %b_31
  br label %b_18

b_33:                                             ; preds = %b_29
  br label %b_27

b_34:                                             ; preds = %b_27
  br label %b_18

b_35:                                             ; preds = %b_27
  br label %b_36

b_36:                                             ; preds = %b_35
  %215 = icmp ne i32 %186, 0
  br i1 %215, label %b_16, label %b_37

b_37:                                             ; preds = %b_36
  br label %b_25

b_38:                                             ; preds = %b_25
  %216 = sub i32 0, %161
  %217 = and i32 %161, %216
  %218 = call i32 @llvm.cttz.i32(i32 %217, i1 false)
  %219 = shl i32 %218, 2
  %220 = add i32 %219, 1050780
  %221 = add i32 %220, 0
  %222 = call i32 @get_i32(i32 %221)
  %223 = icmp eq i32 0, %222
  %224 = zext i1 %223 to i32
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %b_9, label %b_39

b_39:                                             ; preds = %b_38
  br label %b_18

b_40:                                             ; preds = %b_44, %b_18
  %226 = phi i32 [ %95, %b_18 ], [ %269, %b_44 ]
  %227 = phi i32 [ %96, %b_18 ], [ %260, %b_44 ]
  %228 = phi i32 [ %97, %b_18 ], [ %261, %b_44 ]
  %229 = phi i32 [ %98, %b_18 ], [ %262, %b_44 ]
  %230 = phi i32 [ %99, %b_18 ], [ %263, %b_44 ]
  %231 = phi i32 [ %100, %b_18 ], [ %264, %b_44 ]
  %232 = phi i32 [ %101, %b_18 ], [ %265, %b_44 ]
  %233 = phi i32 [ %102, %b_18 ], [ %266, %b_44 ]
  %234 = phi i32 [ %103, %b_18 ], [ %267, %b_44 ]
  %235 = phi i64 [ %104, %b_18 ], [ %268, %b_44 ]
  %236 = add i32 %226, 4
  %237 = add i32 %236, 0
  %238 = call i32 @get_i32(i32 %237)
  %239 = and i32 %238, -8
  %240 = icmp uge i32 %239, %231
  %241 = zext i1 %240 to i32
  %242 = sub i32 %239, %231
  %243 = icmp ult i32 %242, %232
  %244 = zext i1 %243 to i32
  %245 = and i32 %241, %244
  %246 = icmp ne i32 %245, 0
  %247 = select i1 %246, i32 %226, i32 %229
  %248 = icmp ne i32 %245, 0
  %249 = select i1 %248, i32 %242, i32 %232
  %250 = add i32 %226, 16
  %251 = call i32 @get_i32(i32 %250)
  %252 = icmp ne i32 %251, 0
  br i1 %252, label %b_42, label %b_43

b_41:                                             ; preds = %b_45
  %253 = icmp eq i32 0, %262
  %254 = zext i1 %253 to i32
  %255 = icmp ne i32 %254, 0
  br i1 %255, label %b_9, label %b_46

b_42:                                             ; preds = %b_40
  br label %b_44

b_43:                                             ; preds = %b_40
  %256 = add i32 %226, 20
  %257 = add i32 %256, 0
  %258 = call i32 @get_i32(i32 %257)
  br label %b_44

b_44:                                             ; preds = %b_43, %b_42
  %259 = phi i32 [ %226, %b_42 ], [ %226, %b_43 ]
  %260 = phi i32 [ %251, %b_42 ], [ %251, %b_43 ]
  %261 = phi i32 [ %245, %b_42 ], [ %245, %b_43 ]
  %262 = phi i32 [ %247, %b_42 ], [ %247, %b_43 ]
  %263 = phi i32 [ %230, %b_42 ], [ %230, %b_43 ]
  %264 = phi i32 [ %231, %b_42 ], [ %231, %b_43 ]
  %265 = phi i32 [ %249, %b_42 ], [ %249, %b_43 ]
  %266 = phi i32 [ %233, %b_42 ], [ %233, %b_43 ]
  %267 = phi i32 [ %234, %b_42 ], [ %234, %b_43 ]
  %268 = phi i64 [ %235, %b_42 ], [ %235, %b_43 ]
  %269 = phi i32 [ %251, %b_42 ], [ %258, %b_43 ]
  %270 = icmp ne i32 %269, 0
  br i1 %270, label %b_40, label %b_45

b_45:                                             ; preds = %b_44
  br label %b_41

b_46:                                             ; preds = %b_41
  br label %b_16

b_47:                                             ; preds = %b_16
  %271 = add i32 %79, 24
  %272 = call i32 @get_i32(i32 %271)
  br label %b_48

b_48:                                             ; preds = %b_47
  br label %b_50

b_49:                                             ; preds = %b_57, %b_55, %b_54
  %273 = phi i32 [ %298, %b_55 ], [ %301, %b_54 ], [ %324, %b_57 ]
  %274 = phi i32 [ 0, %b_55 ], [ %284, %b_54 ], [ %325, %b_57 ]
  %275 = phi i32 [ %293, %b_55 ], [ %78, %b_54 ], [ %326, %b_57 ]
  %276 = phi i32 [ %79, %b_55 ], [ %79, %b_54 ], [ %327, %b_57 ]
  %277 = phi i32 [ %80, %b_55 ], [ %80, %b_54 ], [ %328, %b_57 ]
  %278 = phi i32 [ %81, %b_55 ], [ %81, %b_54 ], [ %329, %b_57 ]
  %279 = phi i32 [ %82, %b_55 ], [ %82, %b_54 ], [ %330, %b_57 ]
  %280 = phi i32 [ %272, %b_55 ], [ %272, %b_54 ], [ %331, %b_57 ]
  %281 = phi i32 [ %84, %b_55 ], [ %84, %b_54 ], [ %332, %b_57 ]
  %282 = phi i64 [ %85, %b_55 ], [ %85, %b_54 ], [ %333, %b_57 ]
  br label %b_62

b_50:                                             ; preds = %b_48
  %283 = add i32 %79, 12
  %284 = call i32 @get_i32(i32 %283)
  %285 = icmp eq i32 %79, %284
  %286 = zext i1 %285 to i32
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %b_52, label %b_53

b_51:                                             ; preds = %b_52
  %288 = add i32 %79, 16
  %289 = icmp ne i32 %293, 0
  %290 = select i1 %289, i32 %291, i32 %288
  br label %b_56

b_52:                                             ; preds = %b_50
  %291 = add i32 %79, 20
  %292 = add i32 %291, 0
  %293 = call i32 @get_i32(i32 %292)
  %294 = icmp ne i32 %293, 0
  %295 = select i1 %294, i32 20, i32 16
  %296 = add i32 %79, %295
  %297 = add i32 %296, 0
  %298 = call i32 @get_i32(i32 %297)
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %b_51, label %b_55

b_53:                                             ; preds = %b_50
  br label %b_54

b_54:                                             ; preds = %b_53
  %300 = add i32 %79, 8
  %301 = call i32 @get_i32(i32 %300)
  %302 = add i32 %301, 12
  call void @set_i32(i32 %302, i32 %284)
  %303 = add i32 %284, 8
  call void @set_i32(i32 %303, i32 %301)
  br label %b_49

b_55:                                             ; preds = %b_52
  br label %b_49

b_56:                                             ; preds = %b_60, %b_51
  %304 = phi i32 [ %298, %b_51 ], [ %324, %b_60 ]
  %305 = phi i32 [ %291, %b_51 ], [ %325, %b_60 ]
  %306 = phi i32 [ %290, %b_51 ], [ %326, %b_60 ]
  %307 = phi i32 [ %79, %b_51 ], [ %327, %b_60 ]
  %308 = phi i32 [ %80, %b_51 ], [ %328, %b_60 ]
  %309 = phi i32 [ %81, %b_51 ], [ %329, %b_60 ]
  %310 = phi i32 [ %82, %b_51 ], [ %330, %b_60 ]
  %311 = phi i32 [ %272, %b_51 ], [ %331, %b_60 ]
  %312 = phi i32 [ %84, %b_51 ], [ %332, %b_60 ]
  %313 = phi i64 [ %85, %b_51 ], [ %333, %b_60 ]
  %314 = add i32 %304, 20
  %315 = add i32 %314, 0
  %316 = call i32 @get_i32(i32 %315)
  %317 = icmp eq i32 0, %316
  %318 = zext i1 %317 to i32
  %319 = icmp ne i32 %318, 0
  br i1 %319, label %b_58, label %b_59

b_57:                                             ; preds = %b_61
  %320 = add i32 %328, 0
  call void @set_i32(i32 %320, i32 0)
  br label %b_49

b_58:                                             ; preds = %b_56
  %321 = add i32 %304, 16
  %322 = add i32 %304, 16
  %323 = call i32 @get_i32(i32 %322)
  br label %b_60

b_59:                                             ; preds = %b_56
  br label %b_60

b_60:                                             ; preds = %b_59, %b_58
  %324 = phi i32 [ %323, %b_58 ], [ %316, %b_59 ]
  %325 = phi i32 [ %304, %b_58 ], [ %304, %b_59 ]
  %326 = phi i32 [ %321, %b_58 ], [ %314, %b_59 ]
  %327 = phi i32 [ %307, %b_58 ], [ %307, %b_59 ]
  %328 = phi i32 [ %306, %b_58 ], [ %306, %b_59 ]
  %329 = phi i32 [ %309, %b_58 ], [ %309, %b_59 ]
  %330 = phi i32 [ %310, %b_58 ], [ %310, %b_59 ]
  %331 = phi i32 [ %311, %b_58 ], [ %311, %b_59 ]
  %332 = phi i32 [ %312, %b_58 ], [ %312, %b_59 ]
  %333 = phi i64 [ %313, %b_58 ], [ %313, %b_59 ]
  %334 = icmp ne i32 %324, 0
  br i1 %334, label %b_56, label %b_61

b_61:                                             ; preds = %b_60
  br label %b_57

b_62:                                             ; preds = %b_49
  %335 = icmp eq i32 0, %280
  %336 = zext i1 %335 to i32
  %337 = icmp ne i32 %336, 0
  br i1 %337, label %b_63, label %b_64

b_63:                                             ; preds = %b_75, %b_74, %b_71, %b_67, %b_62
  %338 = phi i32 [ %273, %b_62 ], [ %351, %b_67 ], [ %351, %b_71 ], [ %403, %b_74 ], [ %403, %b_75 ]
  %339 = phi i32 [ %274, %b_62 ], [ %274, %b_67 ], [ %274, %b_71 ], [ %392, %b_74 ], [ %392, %b_75 ]
  %340 = phi i32 [ %275, %b_62 ], [ %275, %b_67 ], [ %275, %b_71 ], [ %393, %b_74 ], [ %393, %b_75 ]
  %341 = phi i32 [ %276, %b_62 ], [ %276, %b_67 ], [ %276, %b_71 ], [ %394, %b_74 ], [ %394, %b_75 ]
  %342 = phi i32 [ %277, %b_62 ], [ %277, %b_67 ], [ %277, %b_71 ], [ %395, %b_74 ], [ %395, %b_75 ]
  %343 = phi i32 [ %278, %b_62 ], [ %278, %b_67 ], [ %278, %b_71 ], [ %396, %b_74 ], [ %396, %b_75 ]
  %344 = phi i32 [ %279, %b_62 ], [ %279, %b_67 ], [ %279, %b_71 ], [ %397, %b_74 ], [ %397, %b_75 ]
  %345 = phi i32 [ %280, %b_62 ], [ %280, %b_67 ], [ %280, %b_71 ], [ %398, %b_74 ], [ %398, %b_75 ]
  %346 = phi i32 [ %281, %b_62 ], [ %281, %b_67 ], [ %281, %b_71 ], [ %399, %b_74 ], [ %399, %b_75 ]
  %347 = phi i64 [ %282, %b_62 ], [ %282, %b_67 ], [ %282, %b_71 ], [ %400, %b_74 ], [ %400, %b_75 ]
  br label %b_76

b_64:                                             ; preds = %b_62
  br label %b_65

b_65:                                             ; preds = %b_64
  %348 = add i32 %276, 28
  %349 = call i32 @get_i32(i32 %348)
  %350 = shl i32 %349, 2
  %351 = add i32 %350, 1050780
  %352 = add i32 %351, 0
  %353 = call i32 @get_i32(i32 %352)
  %354 = icmp ne i32 %276, %353
  %355 = zext i1 %354 to i32
  %356 = icmp ne i32 %355, 0
  br i1 %356, label %b_67, label %b_68

b_66:                                             ; preds = %b_70, %b_69
  %357 = phi i32 [ %351, %b_70 ], [ %351, %b_69 ]
  %358 = phi i32 [ %274, %b_70 ], [ %274, %b_69 ]
  %359 = phi i32 [ %275, %b_70 ], [ %275, %b_69 ]
  %360 = phi i32 [ %276, %b_70 ], [ %276, %b_69 ]
  %361 = phi i32 [ %277, %b_70 ], [ %277, %b_69 ]
  %362 = phi i32 [ %278, %b_70 ], [ %278, %b_69 ]
  %363 = phi i32 [ %279, %b_70 ], [ %279, %b_69 ]
  %364 = phi i32 [ %280, %b_70 ], [ %280, %b_69 ]
  %365 = phi i32 [ %281, %b_70 ], [ %281, %b_69 ]
  %366 = phi i64 [ %282, %b_70 ], [ %282, %b_69 ]
  %367 = add i32 %358, 24
  call void @set_i32(i32 %367, i32 %364)
  %368 = add i32 %360, 16
  %369 = call i32 @get_i32(i32 %368)
  %370 = icmp ne i32 %369, 0
  br i1 %370, label %b_72, label %b_73

b_67:                                             ; preds = %b_65
  %371 = add i32 %280, 16
  %372 = call i32 @get_i32(i32 %371)
  %373 = icmp eq i32 %372, %276
  %374 = zext i1 %373 to i32
  %375 = icmp ne i32 %374, 0
  %376 = select i1 %375, i32 16, i32 20
  %377 = add i32 %280, %376
  %378 = add i32 %377, 0
  call void @set_i32(i32 %378, i32 %274)
  %379 = icmp eq i32 0, %274
  %380 = zext i1 %379 to i32
  %381 = icmp ne i32 %380, 0
  br i1 %381, label %b_63, label %b_70

b_68:                                             ; preds = %b_65
  br label %b_69

b_69:                                             ; preds = %b_68
  %382 = add i32 %351, 0
  call void @set_i32(i32 %382, i32 %274)
  %383 = icmp ne i32 %274, 0
  br i1 %383, label %b_66, label %b_71

b_70:                                             ; preds = %b_67
  br label %b_66

b_71:                                             ; preds = %b_69
  %384 = call i32 @get_i32(i32 1050512)
  %385 = add i32 %276, 28
  %386 = call i32 @get_i32(i32 %385)
  %387 = call i32 @rotl_u32(i32 -2, i32 %386)
  %388 = and i32 %384, %387
  call void @set_i32(i32 1050512, i32 %388)
  br label %b_63

b_72:                                             ; preds = %b_66
  %389 = add i32 %358, 16
  call void @set_i32(i32 %389, i32 %369)
  %390 = add i32 %369, 24
  call void @set_i32(i32 %390, i32 %358)
  br label %b_74

b_73:                                             ; preds = %b_66
  br label %b_74

b_74:                                             ; preds = %b_73, %b_72
  %391 = phi i32 [ %369, %b_72 ], [ %369, %b_73 ]
  %392 = phi i32 [ %358, %b_72 ], [ %358, %b_73 ]
  %393 = phi i32 [ %359, %b_72 ], [ %359, %b_73 ]
  %394 = phi i32 [ %360, %b_72 ], [ %360, %b_73 ]
  %395 = phi i32 [ %361, %b_72 ], [ %361, %b_73 ]
  %396 = phi i32 [ %362, %b_72 ], [ %362, %b_73 ]
  %397 = phi i32 [ %363, %b_72 ], [ %363, %b_73 ]
  %398 = phi i32 [ %364, %b_72 ], [ %364, %b_73 ]
  %399 = phi i32 [ %365, %b_72 ], [ %365, %b_73 ]
  %400 = phi i64 [ %366, %b_72 ], [ %366, %b_73 ]
  %401 = add i32 %394, 20
  %402 = add i32 %401, 0
  %403 = call i32 @get_i32(i32 %402)
  %404 = icmp eq i32 0, %403
  %405 = zext i1 %404 to i32
  %406 = icmp ne i32 %405, 0
  br i1 %406, label %b_63, label %b_75

b_75:                                             ; preds = %b_74
  %407 = add i32 %392, 20
  %408 = add i32 %407, 0
  call void @set_i32(i32 %408, i32 %403)
  %409 = add i32 %403, 24
  call void @set_i32(i32 %409, i32 %392)
  br label %b_63

b_76:                                             ; preds = %b_63
  %410 = icmp uge i32 %344, 16
  %411 = zext i1 %410 to i32
  %412 = icmp ne i32 %411, 0
  br i1 %412, label %b_78, label %b_79

b_77:                                             ; preds = %b_105, %b_93, %b_89, %b_80
  %413 = phi i32 [ %490, %b_93 ], [ %476, %b_89 ], [ %566, %b_105 ], [ %437, %b_80 ]
  %414 = phi i32 [ %501, %b_93 ], [ %477, %b_89 ], [ %576, %b_105 ], [ %339, %b_80 ]
  %415 = phi i32 [ %492, %b_93 ], [ %478, %b_89 ], [ %568, %b_105 ], [ %340, %b_80 ]
  %416 = phi i32 [ %493, %b_93 ], [ %479, %b_89 ], [ %569, %b_105 ], [ %341, %b_80 ]
  %417 = phi i32 [ %494, %b_93 ], [ %480, %b_89 ], [ %570, %b_105 ], [ %342, %b_80 ]
  %418 = phi i32 [ %495, %b_93 ], [ %481, %b_89 ], [ %571, %b_105 ], [ %343, %b_80 ]
  %419 = phi i32 [ %496, %b_93 ], [ %482, %b_89 ], [ %572, %b_105 ], [ %344, %b_80 ]
  %420 = phi i32 [ %497, %b_93 ], [ %483, %b_89 ], [ %573, %b_105 ], [ %345, %b_80 ]
  %421 = phi i32 [ %498, %b_93 ], [ %484, %b_89 ], [ %574, %b_105 ], [ %346, %b_80 ]
  %422 = phi i64 [ %499, %b_93 ], [ %485, %b_89 ], [ %575, %b_105 ], [ %347, %b_80 ]
  %423 = add i32 %416, 8
  ret i32 %423

b_78:                                             ; preds = %b_76
  %424 = or i32 %343, 3
  %425 = add i32 %341, 4
  call void @set_i32(i32 %425, i32 %424)
  %426 = add i32 %341, %343
  %427 = or i32 %344, 1
  %428 = add i32 %426, 4
  call void @set_i32(i32 %428, i32 %427)
  %429 = add i32 %426, %344
  %430 = add i32 %429, 0
  call void @set_i32(i32 %430, i32 %344)
  %431 = icmp uge i32 %344, 256
  %432 = zext i1 %431 to i32
  %433 = icmp ne i32 %432, 0
  br i1 %433, label %b_81, label %b_82

b_79:                                             ; preds = %b_76
  br label %b_80

b_80:                                             ; preds = %b_79
  %434 = add i32 %343, %344
  %435 = or i32 %434, 3
  %436 = add i32 %341, 4
  call void @set_i32(i32 %436, i32 %435)
  %437 = add i32 %434, %341
  %438 = add i32 %437, 4
  %439 = call i32 @get_i32(i32 %438)
  %440 = or i32 %439, 1
  %441 = add i32 %437, 4
  call void @set_i32(i32 %441, i32 %440)
  br label %b_77

b_81:                                             ; preds = %b_78
  %442 = add i32 %426, 16
  call void @set_i64(i32 %442, i64 0)
  br label %b_84

b_82:                                             ; preds = %b_78
  br label %b_83

b_83:                                             ; preds = %b_82
  %443 = lshr i32 %344, 3
  %444 = shl i32 %443, 3
  %445 = add i32 %444, 1050516
  br label %b_104

b_84:                                             ; preds = %b_81
  %446 = lshr i32 %344, 8
  %447 = icmp eq i32 0, %446
  %448 = zext i1 %447 to i32
  %449 = icmp ne i32 %448, 0
  br i1 %449, label %b_85, label %b_86

b_85:                                             ; preds = %b_87, %b_86, %b_84
  %450 = phi i32 [ %446, %b_84 ], [ %446, %b_86 ], [ %467, %b_87 ]
  %451 = phi i32 [ %339, %b_84 ], [ %339, %b_86 ], [ %339, %b_87 ]
  %452 = phi i32 [ %340, %b_84 ], [ %340, %b_86 ], [ %340, %b_87 ]
  %453 = phi i32 [ %341, %b_84 ], [ %341, %b_86 ], [ %341, %b_87 ]
  %454 = phi i32 [ %426, %b_84 ], [ %426, %b_86 ], [ %426, %b_87 ]
  %455 = phi i32 [ %343, %b_84 ], [ %343, %b_86 ], [ %343, %b_87 ]
  %456 = phi i32 [ %344, %b_84 ], [ %344, %b_86 ], [ %344, %b_87 ]
  %457 = phi i32 [ %345, %b_84 ], [ %345, %b_86 ], [ %345, %b_87 ]
  %458 = phi i32 [ %346, %b_84 ], [ %346, %b_86 ], [ %346, %b_87 ]
  %459 = phi i64 [ %347, %b_84 ], [ %347, %b_86 ], [ %347, %b_87 ]
  %460 = phi i32 [ 0, %b_84 ], [ 31, %b_86 ], [ %475, %b_87 ]
  %461 = add i32 %426, 28
  call void @set_i32(i32 %461, i32 %460)
  %462 = shl i32 %460, 2
  %463 = add i32 %462, 1050780
  br label %b_88

b_86:                                             ; preds = %b_84
  %464 = icmp ugt i32 %344, 16777215
  %465 = zext i1 %464 to i32
  %466 = icmp ne i32 %465, 0
  br i1 %466, label %b_85, label %b_87

b_87:                                             ; preds = %b_86
  %467 = call i32 @llvm.ctlz.i32(i32 %446, i1 false)
  %468 = sub i32 6, %467
  %469 = and i32 %468, 31
  %470 = urem i32 %469, 32
  %471 = lshr i32 %344, %470
  %472 = and i32 %471, 1
  %473 = shl i32 %467, 1
  %474 = sub i32 %472, %473
  %475 = add i32 %474, 62
  br label %b_85

b_88:                                             ; preds = %b_85
  br label %b_90

b_89:                                             ; preds = %b_98, %b_91
  %476 = phi i32 [ %460, %b_98 ], [ %549, %b_91 ]
  %477 = phi i32 [ %463, %b_98 ], [ %535, %b_91 ]
  %478 = phi i32 [ %507, %b_98 ], [ %536, %b_91 ]
  %479 = phi i32 [ %453, %b_98 ], [ %537, %b_91 ]
  %480 = phi i32 [ %454, %b_98 ], [ %538, %b_91 ]
  %481 = phi i32 [ %510, %b_98 ], [ %547, %b_91 ]
  %482 = phi i32 [ %456, %b_98 ], [ %540, %b_91 ]
  %483 = phi i32 [ %457, %b_98 ], [ %541, %b_91 ]
  %484 = phi i32 [ %458, %b_98 ], [ %542, %b_91 ]
  %485 = phi i64 [ %459, %b_98 ], [ %543, %b_91 ]
  %486 = add i32 %480, 12
  call void @set_i32(i32 %486, i32 %480)
  %487 = add i32 %480, 8
  call void @set_i32(i32 %487, i32 %480)
  br label %b_77

b_90:                                             ; preds = %b_88
  br label %b_92

b_91:                                             ; preds = %b_100
  %488 = add i32 %547, 0
  call void @set_i32(i32 %488, i32 %538)
  %489 = add i32 %538, 24
  call void @set_i32(i32 %489, i32 %536)
  br label %b_89

b_92:                                             ; preds = %b_90
  br label %b_94

b_93:                                             ; preds = %b_101, %b_99
  %490 = phi i32 [ %523, %b_99 ], [ %549, %b_101 ]
  %491 = phi i32 [ %463, %b_99 ], [ %553, %b_101 ]
  %492 = phi i32 [ %523, %b_99 ], [ %549, %b_101 ]
  %493 = phi i32 [ %453, %b_99 ], [ %537, %b_101 ]
  %494 = phi i32 [ %454, %b_99 ], [ %538, %b_101 ]
  %495 = phi i32 [ %510, %b_99 ], [ %547, %b_101 ]
  %496 = phi i32 [ %456, %b_99 ], [ %540, %b_101 ]
  %497 = phi i32 [ %457, %b_99 ], [ %541, %b_101 ]
  %498 = phi i32 [ %458, %b_99 ], [ %542, %b_101 ]
  %499 = phi i64 [ %459, %b_99 ], [ %543, %b_101 ]
  %500 = add i32 %490, 8
  %501 = call i32 @get_i32(i32 %500)
  %502 = add i32 %501, 12
  call void @set_i32(i32 %502, i32 %494)
  %503 = add i32 %490, 8
  call void @set_i32(i32 %503, i32 %494)
  %504 = add i32 %494, 24
  call void @set_i32(i32 %504, i32 0)
  %505 = add i32 %494, 12
  call void @set_i32(i32 %505, i32 %490)
  %506 = add i32 %494, 8
  call void @set_i32(i32 %506, i32 %501)
  br label %b_77

b_94:                                             ; preds = %b_92
  %507 = call i32 @get_i32(i32 1050512)
  %508 = and i32 %460, 31
  %509 = urem i32 %508, 32
  %510 = shl i32 1, %509
  %511 = and i32 %507, %510
  %512 = icmp ne i32 %511, 0
  br i1 %512, label %b_96, label %b_97

b_95:                                             ; preds = %b_96
  %513 = lshr i32 %460, 1
  %514 = sub i32 25, %513
  %515 = and i32 %514, 31
  %516 = icmp eq i32 %460, 31
  %517 = zext i1 %516 to i32
  %518 = icmp ne i32 %517, 0
  %519 = select i1 %518, i32 0, i32 %515
  %520 = urem i32 %519, 32
  %521 = shl i32 %456, %520
  br label %b_100

b_96:                                             ; preds = %b_94
  %522 = add i32 %463, 0
  %523 = call i32 @get_i32(i32 %522)
  %524 = add i32 %523, 4
  %525 = add i32 %524, 0
  %526 = call i32 @get_i32(i32 %525)
  %527 = and i32 %526, -8
  %528 = icmp ne i32 %527, %456
  %529 = zext i1 %528 to i32
  %530 = icmp ne i32 %529, 0
  br i1 %530, label %b_95, label %b_99

b_97:                                             ; preds = %b_94
  br label %b_98

b_98:                                             ; preds = %b_97
  %531 = or i32 %507, %510
  call void @set_i32(i32 1050512, i32 %531)
  %532 = add i32 %463, 0
  call void @set_i32(i32 %532, i32 %454)
  %533 = add i32 %454, 24
  call void @set_i32(i32 %533, i32 %463)
  br label %b_89

b_99:                                             ; preds = %b_96
  br label %b_93

b_100:                                            ; preds = %b_102, %b_95
  %534 = phi i32 [ %460, %b_95 ], [ %549, %b_102 ]
  %535 = phi i32 [ %521, %b_95 ], [ %553, %b_102 ]
  %536 = phi i32 [ %523, %b_95 ], [ %549, %b_102 ]
  %537 = phi i32 [ %453, %b_95 ], [ %537, %b_102 ]
  %538 = phi i32 [ %454, %b_95 ], [ %538, %b_102 ]
  %539 = phi i32 [ %510, %b_95 ], [ %547, %b_102 ]
  %540 = phi i32 [ %456, %b_95 ], [ %540, %b_102 ]
  %541 = phi i32 [ %457, %b_95 ], [ %541, %b_102 ]
  %542 = phi i32 [ %458, %b_95 ], [ %542, %b_102 ]
  %543 = phi i64 [ %459, %b_95 ], [ %543, %b_102 ]
  %544 = lshr i32 %535, 29
  %545 = and i32 %544, 4
  %546 = add i32 %536, %545
  %547 = add i32 %546, 16
  %548 = add i32 %547, 0
  %549 = call i32 @get_i32(i32 %548)
  %550 = icmp eq i32 0, %549
  %551 = zext i1 %550 to i32
  %552 = icmp ne i32 %551, 0
  br i1 %552, label %b_91, label %b_102

b_101:                                            ; preds = %b_103
  br label %b_93

b_102:                                            ; preds = %b_100
  %553 = shl i32 %535, 1
  %554 = add i32 %549, 4
  %555 = add i32 %554, 0
  %556 = call i32 @get_i32(i32 %555)
  %557 = and i32 %556, -8
  %558 = icmp ne i32 %557, %540
  %559 = zext i1 %558 to i32
  %560 = icmp ne i32 %559, 0
  br i1 %560, label %b_100, label %b_103

b_103:                                            ; preds = %b_102
  br label %b_101

b_104:                                            ; preds = %b_83
  %561 = call i32 @get_i32(i32 1050508)
  %562 = urem i32 %443, 32
  %563 = shl i32 1, %562
  %564 = and i32 %561, %563
  %565 = icmp ne i32 %564, 0
  br i1 %565, label %b_106, label %b_107

b_105:                                            ; preds = %b_108, %b_106
  %566 = phi i32 [ %445, %b_106 ], [ %445, %b_108 ]
  %567 = phi i32 [ %563, %b_106 ], [ %563, %b_108 ]
  %568 = phi i32 [ %561, %b_106 ], [ %561, %b_108 ]
  %569 = phi i32 [ %341, %b_106 ], [ %341, %b_108 ]
  %570 = phi i32 [ %426, %b_106 ], [ %426, %b_108 ]
  %571 = phi i32 [ %343, %b_106 ], [ %343, %b_108 ]
  %572 = phi i32 [ %344, %b_106 ], [ %344, %b_108 ]
  %573 = phi i32 [ %345, %b_106 ], [ %345, %b_108 ]
  %574 = phi i32 [ %346, %b_106 ], [ %346, %b_108 ]
  %575 = phi i64 [ %347, %b_106 ], [ %347, %b_108 ]
  %576 = phi i32 [ %582, %b_106 ], [ %445, %b_108 ]
  %577 = add i32 %566, 8
  call void @set_i32(i32 %577, i32 %570)
  %578 = add i32 %576, 12
  call void @set_i32(i32 %578, i32 %570)
  %579 = add i32 %570, 12
  call void @set_i32(i32 %579, i32 %566)
  %580 = add i32 %570, 8
  call void @set_i32(i32 %580, i32 %576)
  br label %b_77

b_106:                                            ; preds = %b_104
  %581 = add i32 %445, 8
  %582 = call i32 @get_i32(i32 %581)
  br label %b_105

b_107:                                            ; preds = %b_104
  br label %b_108

b_108:                                            ; preds = %b_107
  %583 = or i32 %563, %561
  call void @set_i32(i32 1050508, i32 %583)
  br label %b_105

b_109:                                            ; preds = %b_12
  br label %b_111

b_110:                                            ; preds = %b_121
  %584 = add i32 %623, 24
  %585 = call i32 @get_i32(i32 %584)
  br label %b_143

b_111:                                            ; preds = %b_109
  %586 = call i32 @get_i32(i32 1050508)
  %587 = add i32 %0, 11
  %588 = and i32 %587, -8
  %589 = icmp ult i32 %0, 11
  %590 = zext i1 %589 to i32
  %591 = icmp ne i32 %590, 0
  %592 = select i1 %591, i32 16, i32 %588
  %593 = lshr i32 %592, 3
  %594 = urem i32 %593, 32
  %595 = lshr i32 %586, %594
  %596 = and i32 %595, 3
  %597 = icmp eq i32 0, %596
  %598 = zext i1 %597 to i32
  %599 = icmp ne i32 %598, 0
  br i1 %599, label %b_113, label %b_114

b_112:                                            ; preds = %b_116
  br label %b_130

b_113:                                            ; preds = %b_111
  %600 = call i32 @get_i32(i32 1050908)
  %601 = icmp ule i32 %592, %600
  %602 = zext i1 %601 to i32
  %603 = icmp ne i32 %602, 0
  br i1 %603, label %b_9, label %b_116

b_114:                                            ; preds = %b_111
  br label %b_115

b_115:                                            ; preds = %b_114
  br label %b_125

b_116:                                            ; preds = %b_113
  %604 = icmp ne i32 %595, 0
  br i1 %604, label %b_112, label %b_117

b_117:                                            ; preds = %b_116
  %605 = call i32 @get_i32(i32 1050512)
  %606 = icmp eq i32 0, %605
  %607 = zext i1 %606 to i32
  %608 = icmp ne i32 %607, 0
  br i1 %608, label %b_9, label %b_118

b_118:                                            ; preds = %b_117
  %609 = sub i32 0, %605
  %610 = and i32 %605, %609
  %611 = call i32 @llvm.cttz.i32(i32 %610, i1 false)
  %612 = shl i32 %611, 2
  %613 = add i32 %612, 1050780
  %614 = add i32 %613, 0
  %615 = call i32 @get_i32(i32 %614)
  %616 = add i32 %615, 4
  %617 = add i32 %616, 0
  %618 = call i32 @get_i32(i32 %617)
  %619 = and i32 %618, -8
  %620 = sub i32 %619, %592
  br label %b_119

b_119:                                            ; preds = %b_123, %b_118
  %621 = phi i32 [ %605, %b_118 ], [ %642, %b_123 ]
  %622 = phi i32 [ %615, %b_118 ], [ %642, %b_123 ]
  %623 = phi i32 [ %615, %b_118 ], [ %662, %b_123 ]
  %624 = phi i32 [ 0, %b_118 ], [ %645, %b_123 ]
  %625 = phi i32 [ 0, %b_118 ], [ %646, %b_123 ]
  %626 = phi i32 [ %592, %b_118 ], [ %647, %b_123 ]
  %627 = phi i32 [ %620, %b_118 ], [ %660, %b_123 ]
  %628 = phi i32 [ 0, %b_118 ], [ %649, %b_123 ]
  %629 = phi i32 [ 0, %b_118 ], [ %650, %b_123 ]
  %630 = phi i64 [ 0, %b_118 ], [ %651, %b_123 ]
  %631 = add i32 %622, 16
  %632 = call i32 @get_i32(i32 %631)
  %633 = icmp eq i32 0, %632
  %634 = zext i1 %633 to i32
  %635 = icmp ne i32 %634, 0
  br i1 %635, label %b_121, label %b_122

b_120:                                            ; No predecessors!
  call void @awsm_abi__trap_unreachable()
  unreachable

b_121:                                            ; preds = %b_119
  %636 = add i32 %622, 20
  %637 = add i32 %636, 0
  %638 = call i32 @get_i32(i32 %637)
  %639 = icmp eq i32 0, %638
  %640 = zext i1 %639 to i32
  %641 = icmp ne i32 %640, 0
  br i1 %641, label %b_110, label %b_124

b_122:                                            ; preds = %b_119
  br label %b_123

b_123:                                            ; preds = %b_124, %b_122
  %642 = phi i32 [ %638, %b_124 ], [ %632, %b_122 ]
  %643 = phi i32 [ %622, %b_124 ], [ %622, %b_122 ]
  %644 = phi i32 [ %623, %b_124 ], [ %623, %b_122 ]
  %645 = phi i32 [ %624, %b_124 ], [ %624, %b_122 ]
  %646 = phi i32 [ %625, %b_124 ], [ %625, %b_122 ]
  %647 = phi i32 [ %626, %b_124 ], [ %626, %b_122 ]
  %648 = phi i32 [ %627, %b_124 ], [ %627, %b_122 ]
  %649 = phi i32 [ %628, %b_124 ], [ %628, %b_122 ]
  %650 = phi i32 [ %629, %b_124 ], [ %629, %b_122 ]
  %651 = phi i64 [ %630, %b_124 ], [ %630, %b_122 ]
  %652 = add i32 %642, 4
  %653 = add i32 %652, 0
  %654 = call i32 @get_i32(i32 %653)
  %655 = and i32 %654, -8
  %656 = sub i32 %655, %647
  %657 = icmp ult i32 %656, %648
  %658 = zext i1 %657 to i32
  %659 = icmp ne i32 %658, 0
  %660 = select i1 %659, i32 %656, i32 %648
  %661 = icmp ne i32 %658, 0
  %662 = select i1 %661, i32 %642, i32 %644
  br label %b_119

b_124:                                            ; preds = %b_121
  br label %b_123

b_125:                                            ; preds = %b_115
  %663 = xor i32 %595, -1
  %664 = and i32 %663, 1
  %665 = add i32 %664, %593
  %666 = shl i32 %665, 3
  %667 = add i32 %666, 1050508
  %668 = add i32 %667, 16
  %669 = add i32 %668, 0
  %670 = call i32 @get_i32(i32 %669)
  %671 = add i32 %670, 8
  %672 = add i32 %671, 0
  %673 = call i32 @get_i32(i32 %672)
  %674 = add i32 %667, 8
  %675 = icmp ne i32 %673, %674
  %676 = zext i1 %675 to i32
  %677 = icmp ne i32 %676, 0
  br i1 %677, label %b_127, label %b_128

b_126:                                            ; preds = %b_129, %b_127
  %678 = phi i32 [ %665, %b_127 ], [ %665, %b_129 ]
  %679 = phi i32 [ %670, %b_127 ], [ %670, %b_129 ]
  %680 = phi i32 [ %586, %b_127 ], [ %586, %b_129 ]
  %681 = phi i32 [ %673, %b_127 ], [ %673, %b_129 ]
  %682 = phi i32 [ %674, %b_127 ], [ %674, %b_129 ]
  %683 = phi i32 [ %592, %b_127 ], [ %592, %b_129 ]
  %684 = phi i32 [ %671, %b_127 ], [ %671, %b_129 ]
  %685 = phi i32 [ 0, %b_127 ], [ 0, %b_129 ]
  %686 = phi i32 [ 0, %b_127 ], [ 0, %b_129 ]
  %687 = phi i64 [ 0, %b_127 ], [ 0, %b_129 ]
  %688 = shl i32 %678, 3
  %689 = or i32 %688, 3
  %690 = add i32 %679, 4
  call void @set_i32(i32 %690, i32 %689)
  %691 = add i32 %688, %679
  %692 = add i32 %691, 4
  %693 = call i32 @get_i32(i32 %692)
  %694 = or i32 %693, 1
  %695 = add i32 %691, 4
  call void @set_i32(i32 %695, i32 %694)
  br label %b_3

b_127:                                            ; preds = %b_125
  %696 = add i32 %673, 12
  call void @set_i32(i32 %696, i32 %674)
  %697 = add i32 %674, 8
  call void @set_i32(i32 %697, i32 %673)
  br label %b_126

b_128:                                            ; preds = %b_125
  br label %b_129

b_129:                                            ; preds = %b_128
  %698 = call i32 @rotl_u32(i32 -2, i32 %665)
  %699 = and i32 %586, %698
  call void @set_i32(i32 1050508, i32 %699)
  br label %b_126

b_130:                                            ; preds = %b_112
  %700 = urem i32 %593, 32
  %701 = shl i32 2, %700
  %702 = sub i32 0, %701
  %703 = or i32 %701, %702
  %704 = urem i32 %593, 32
  %705 = shl i32 %595, %704
  %706 = and i32 %703, %705
  %707 = sub i32 0, %706
  %708 = and i32 %706, %707
  %709 = call i32 @llvm.cttz.i32(i32 %708, i1 false)
  %710 = shl i32 %709, 3
  %711 = add i32 %710, 1050508
  %712 = add i32 %711, 16
  %713 = add i32 %712, 0
  %714 = call i32 @get_i32(i32 %713)
  %715 = add i32 %714, 8
  %716 = add i32 %715, 0
  %717 = call i32 @get_i32(i32 %716)
  %718 = add i32 %711, 8
  %719 = icmp ne i32 %717, %718
  %720 = zext i1 %719 to i32
  %721 = icmp ne i32 %720, 0
  br i1 %721, label %b_132, label %b_133

b_131:                                            ; preds = %b_134, %b_132
  %722 = phi i32 [ %714, %b_132 ], [ %714, %b_134 ]
  %723 = phi i32 [ %709, %b_132 ], [ %709, %b_134 ]
  %724 = phi i32 [ %586, %b_132 ], [ %586, %b_134 ]
  %725 = phi i32 [ %718, %b_132 ], [ %718, %b_134 ]
  %726 = phi i32 [ %715, %b_132 ], [ %715, %b_134 ]
  %727 = phi i32 [ %592, %b_132 ], [ %592, %b_134 ]
  %728 = phi i32 [ %717, %b_132 ], [ %717, %b_134 ]
  %729 = phi i32 [ 0, %b_132 ], [ 0, %b_134 ]
  %730 = phi i32 [ 0, %b_132 ], [ 0, %b_134 ]
  %731 = phi i64 [ 0, %b_132 ], [ 0, %b_134 ]
  %732 = or i32 %727, 3
  %733 = add i32 %722, 4
  call void @set_i32(i32 %733, i32 %732)
  %734 = add i32 %722, %727
  %735 = shl i32 %723, 3
  %736 = sub i32 %735, %727
  %737 = or i32 %736, 1
  %738 = add i32 %734, 4
  call void @set_i32(i32 %738, i32 %737)
  %739 = add i32 %722, %735
  %740 = add i32 %739, 0
  call void @set_i32(i32 %740, i32 %736)
  %741 = call i32 @get_i32(i32 1050908)
  %742 = icmp ne i32 %741, 0
  br i1 %742, label %b_135, label %b_136

b_132:                                            ; preds = %b_130
  %743 = add i32 %717, 12
  call void @set_i32(i32 %743, i32 %718)
  %744 = add i32 %718, 8
  call void @set_i32(i32 %744, i32 %717)
  br label %b_131

b_133:                                            ; preds = %b_130
  br label %b_134

b_134:                                            ; preds = %b_133
  %745 = call i32 @rotl_u32(i32 -2, i32 %709)
  %746 = and i32 %586, %745
  call void @set_i32(i32 1050508, i32 %746)
  br label %b_131

b_135:                                            ; preds = %b_131
  %747 = lshr i32 %741, 3
  %748 = shl i32 %747, 3
  %749 = add i32 %748, 1050516
  %750 = call i32 @get_i32(i32 1050916)
  br label %b_138

b_136:                                            ; preds = %b_131
  br label %b_137

b_137:                                            ; preds = %b_139, %b_136
  %751 = phi i32 [ %767, %b_139 ], [ %741, %b_136 ]
  %752 = phi i32 [ %768, %b_139 ], [ %735, %b_136 ]
  %753 = phi i32 [ %769, %b_139 ], [ %736, %b_136 ]
  %754 = phi i32 [ %770, %b_139 ], [ %734, %b_136 ]
  %755 = phi i32 [ %771, %b_139 ], [ %726, %b_136 ]
  %756 = phi i32 [ %772, %b_139 ], [ %727, %b_136 ]
  %757 = phi i32 [ %777, %b_139 ], [ %728, %b_136 ]
  %758 = phi i32 [ %774, %b_139 ], [ %729, %b_136 ]
  %759 = phi i32 [ %775, %b_139 ], [ %730, %b_136 ]
  %760 = phi i64 [ %776, %b_139 ], [ %731, %b_136 ]
  call void @set_i32(i32 1050916, i32 %754)
  call void @set_i32(i32 1050908, i32 %753)
  ret i32 %755

b_138:                                            ; preds = %b_135
  %761 = call i32 @get_i32(i32 1050508)
  %762 = and i32 %747, 31
  %763 = urem i32 %762, 32
  %764 = shl i32 1, %763
  %765 = and i32 %761, %764
  %766 = icmp ne i32 %765, 0
  br i1 %766, label %b_140, label %b_141

b_139:                                            ; preds = %b_142, %b_140
  %767 = phi i32 [ %749, %b_140 ], [ %749, %b_142 ]
  %768 = phi i32 [ %750, %b_140 ], [ %750, %b_142 ]
  %769 = phi i32 [ %736, %b_140 ], [ %736, %b_142 ]
  %770 = phi i32 [ %734, %b_140 ], [ %734, %b_142 ]
  %771 = phi i32 [ %726, %b_140 ], [ %726, %b_142 ]
  %772 = phi i32 [ %761, %b_140 ], [ %761, %b_142 ]
  %773 = phi i32 [ %764, %b_140 ], [ %764, %b_142 ]
  %774 = phi i32 [ %729, %b_140 ], [ %729, %b_142 ]
  %775 = phi i32 [ %730, %b_140 ], [ %730, %b_142 ]
  %776 = phi i64 [ %731, %b_140 ], [ %731, %b_142 ]
  %777 = phi i32 [ %783, %b_140 ], [ %749, %b_142 ]
  %778 = add i32 %767, 8
  call void @set_i32(i32 %778, i32 %768)
  %779 = add i32 %777, 12
  call void @set_i32(i32 %779, i32 %768)
  %780 = add i32 %768, 12
  call void @set_i32(i32 %780, i32 %767)
  %781 = add i32 %768, 8
  call void @set_i32(i32 %781, i32 %777)
  br label %b_137

b_140:                                            ; preds = %b_138
  %782 = add i32 %749, 8
  %783 = call i32 @get_i32(i32 %782)
  br label %b_139

b_141:                                            ; preds = %b_138
  br label %b_142

b_142:                                            ; preds = %b_141
  %784 = or i32 %761, %764
  call void @set_i32(i32 1050508, i32 %784)
  br label %b_139

b_143:                                            ; preds = %b_110
  br label %b_145

b_144:                                            ; preds = %b_152, %b_150, %b_149
  %785 = phi i32 [ %813, %b_150 ], [ %816, %b_149 ], [ %839, %b_152 ]
  %786 = phi i32 [ 0, %b_150 ], [ %799, %b_149 ], [ %840, %b_152 ]
  %787 = phi i32 [ %623, %b_150 ], [ %623, %b_149 ], [ %841, %b_152 ]
  %788 = phi i32 [ %808, %b_150 ], [ %624, %b_149 ], [ %842, %b_152 ]
  %789 = phi i32 [ %625, %b_150 ], [ %625, %b_149 ], [ %843, %b_152 ]
  %790 = phi i32 [ %626, %b_150 ], [ %626, %b_149 ], [ %844, %b_152 ]
  %791 = phi i32 [ %627, %b_150 ], [ %627, %b_149 ], [ %845, %b_152 ]
  %792 = phi i32 [ %585, %b_150 ], [ %585, %b_149 ], [ %846, %b_152 ]
  %793 = phi i32 [ %629, %b_150 ], [ %629, %b_149 ], [ %847, %b_152 ]
  %794 = phi i64 [ %630, %b_150 ], [ %630, %b_149 ], [ %848, %b_152 ]
  %795 = icmp eq i32 0, %792
  %796 = zext i1 %795 to i32
  %797 = icmp ne i32 %796, 0
  br i1 %797, label %b_5, label %b_157

b_145:                                            ; preds = %b_143
  %798 = add i32 %623, 12
  %799 = call i32 @get_i32(i32 %798)
  %800 = icmp eq i32 %623, %799
  %801 = zext i1 %800 to i32
  %802 = icmp ne i32 %801, 0
  br i1 %802, label %b_147, label %b_148

b_146:                                            ; preds = %b_147
  %803 = add i32 %623, 16
  %804 = icmp ne i32 %808, 0
  %805 = select i1 %804, i32 %806, i32 %803
  br label %b_151

b_147:                                            ; preds = %b_145
  %806 = add i32 %623, 20
  %807 = add i32 %806, 0
  %808 = call i32 @get_i32(i32 %807)
  %809 = icmp ne i32 %808, 0
  %810 = select i1 %809, i32 20, i32 16
  %811 = add i32 %623, %810
  %812 = add i32 %811, 0
  %813 = call i32 @get_i32(i32 %812)
  %814 = icmp ne i32 %813, 0
  br i1 %814, label %b_146, label %b_150

b_148:                                            ; preds = %b_145
  br label %b_149

b_149:                                            ; preds = %b_148
  %815 = add i32 %623, 8
  %816 = call i32 @get_i32(i32 %815)
  %817 = add i32 %816, 12
  call void @set_i32(i32 %817, i32 %799)
  %818 = add i32 %799, 8
  call void @set_i32(i32 %818, i32 %816)
  br label %b_144

b_150:                                            ; preds = %b_147
  br label %b_144

b_151:                                            ; preds = %b_155, %b_146
  %819 = phi i32 [ %813, %b_146 ], [ %839, %b_155 ]
  %820 = phi i32 [ %806, %b_146 ], [ %840, %b_155 ]
  %821 = phi i32 [ %623, %b_146 ], [ %841, %b_155 ]
  %822 = phi i32 [ %805, %b_146 ], [ %842, %b_155 ]
  %823 = phi i32 [ %625, %b_146 ], [ %843, %b_155 ]
  %824 = phi i32 [ %626, %b_146 ], [ %844, %b_155 ]
  %825 = phi i32 [ %627, %b_146 ], [ %845, %b_155 ]
  %826 = phi i32 [ %585, %b_146 ], [ %846, %b_155 ]
  %827 = phi i32 [ %629, %b_146 ], [ %847, %b_155 ]
  %828 = phi i64 [ %630, %b_146 ], [ %848, %b_155 ]
  %829 = add i32 %819, 20
  %830 = add i32 %829, 0
  %831 = call i32 @get_i32(i32 %830)
  %832 = icmp eq i32 0, %831
  %833 = zext i1 %832 to i32
  %834 = icmp ne i32 %833, 0
  br i1 %834, label %b_153, label %b_154

b_152:                                            ; preds = %b_156
  %835 = add i32 %843, 0
  call void @set_i32(i32 %835, i32 0)
  br label %b_144

b_153:                                            ; preds = %b_151
  %836 = add i32 %819, 16
  %837 = add i32 %819, 16
  %838 = call i32 @get_i32(i32 %837)
  br label %b_155

b_154:                                            ; preds = %b_151
  br label %b_155

b_155:                                            ; preds = %b_154, %b_153
  %839 = phi i32 [ %838, %b_153 ], [ %831, %b_154 ]
  %840 = phi i32 [ %819, %b_153 ], [ %819, %b_154 ]
  %841 = phi i32 [ %821, %b_153 ], [ %821, %b_154 ]
  %842 = phi i32 [ %836, %b_153 ], [ %829, %b_154 ]
  %843 = phi i32 [ %822, %b_153 ], [ %822, %b_154 ]
  %844 = phi i32 [ %824, %b_153 ], [ %824, %b_154 ]
  %845 = phi i32 [ %825, %b_153 ], [ %825, %b_154 ]
  %846 = phi i32 [ %826, %b_153 ], [ %826, %b_154 ]
  %847 = phi i32 [ %827, %b_153 ], [ %827, %b_154 ]
  %848 = phi i64 [ %828, %b_153 ], [ %828, %b_154 ]
  %849 = icmp ne i32 %839, 0
  br i1 %849, label %b_151, label %b_156

b_156:                                            ; preds = %b_155
  br label %b_152

b_157:                                            ; preds = %b_144
  %850 = add i32 %787, 28
  %851 = call i32 @get_i32(i32 %850)
  %852 = shl i32 %851, 2
  %853 = add i32 %852, 1050780
  %854 = add i32 %853, 0
  %855 = call i32 @get_i32(i32 %854)
  %856 = icmp ne i32 %787, %855
  %857 = zext i1 %856 to i32
  %858 = icmp ne i32 %857, 0
  br i1 %858, label %b_158, label %b_159

b_158:                                            ; preds = %b_157
  %859 = add i32 %792, 16
  %860 = call i32 @get_i32(i32 %859)
  %861 = icmp eq i32 %860, %787
  %862 = zext i1 %861 to i32
  %863 = icmp ne i32 %862, 0
  %864 = select i1 %863, i32 16, i32 20
  %865 = add i32 %792, %864
  %866 = add i32 %865, 0
  call void @set_i32(i32 %866, i32 %786)
  %867 = icmp eq i32 0, %786
  %868 = zext i1 %867 to i32
  %869 = icmp ne i32 %868, 0
  br i1 %869, label %b_5, label %b_161

b_159:                                            ; preds = %b_157
  br label %b_160

b_160:                                            ; preds = %b_159
  %870 = add i32 %853, 0
  call void @set_i32(i32 %870, i32 %786)
  %871 = icmp ne i32 %786, 0
  br i1 %871, label %b_7, label %b_162

b_161:                                            ; preds = %b_158
  br label %b_7

b_162:                                            ; preds = %b_160
  %872 = call i32 @get_i32(i32 1050512)
  %873 = add i32 %787, 28
  %874 = call i32 @get_i32(i32 %873)
  %875 = call i32 @rotl_u32(i32 -2, i32 %874)
  %876 = and i32 %872, %875
  call void @set_i32(i32 1050512, i32 %876)
  br label %b_5

b_163:                                            ; preds = %b_9
  br label %b_165

b_164:                                            ; preds = %b_275, %b_263, %b_259, %b_248, %b_190, %b_189
  %877 = phi i32 [ %1018, %b_189 ], [ %1025, %b_190 ], [ %1347, %b_248 ], [ %1415, %b_263 ], [ %1400, %b_259 ], [ %1491, %b_275 ]
  %878 = phi i32 [ %1009, %b_189 ], [ %1027, %b_190 ], [ %1337, %b_248 ], [ %1426, %b_263 ], [ %1401, %b_259 ], [ %1501, %b_275 ]
  %879 = phi i32 [ %1010, %b_189 ], [ %1030, %b_190 ], [ %1338, %b_248 ], [ %1417, %b_263 ], [ %1402, %b_259 ], [ %1493, %b_275 ]
  %880 = phi i32 [ %1011, %b_189 ], [ %1033, %b_190 ], [ %1339, %b_248 ], [ %1418, %b_263 ], [ %1403, %b_259 ], [ %1494, %b_275 ]
  %881 = phi i32 [ %1012, %b_189 ], [ %960, %b_190 ], [ %1340, %b_248 ], [ %1419, %b_263 ], [ %1404, %b_259 ], [ %1495, %b_275 ]
  %882 = phi i32 [ %1013, %b_189 ], [ %961, %b_190 ], [ %1341, %b_248 ], [ %1420, %b_263 ], [ %1405, %b_259 ], [ %1496, %b_275 ]
  %883 = phi i32 [ %1014, %b_189 ], [ %962, %b_190 ], [ %1342, %b_248 ], [ %1421, %b_263 ], [ %1406, %b_259 ], [ %1497, %b_275 ]
  %884 = phi i32 [ %1015, %b_189 ], [ %963, %b_190 ], [ %1343, %b_248 ], [ %1422, %b_263 ], [ %1407, %b_259 ], [ %1498, %b_275 ]
  %885 = phi i32 [ %1016, %b_189 ], [ %964, %b_190 ], [ %1344, %b_248 ], [ %1423, %b_263 ], [ %1408, %b_259 ], [ %1499, %b_275 ]
  %886 = phi i64 [ %1017, %b_189 ], [ %965, %b_190 ], [ %1345, %b_248 ], [ %1424, %b_263 ], [ %1409, %b_259 ], [ %1500, %b_275 ]
  %887 = call i32 @get_i32(i32 1050912)
  %888 = icmp ule i32 %887, %882
  %889 = zext i1 %888 to i32
  %890 = icmp ne i32 %889, 0
  br i1 %890, label %b_3, label %b_279

b_165:                                            ; preds = %b_163
  br label %b_167

b_166:                                            ; preds = %b_179, %b_168
  %891 = phi i32 [ %975, %b_179 ], [ %956, %b_168 ]
  %892 = phi i32 [ %967, %b_179 ], [ %967, %b_168 ]
  %893 = phi i32 [ %969, %b_179 ], [ %969, %b_168 ]
  %894 = phi i32 [ %959, %b_179 ], [ %959, %b_168 ]
  %895 = phi i32 [ %960, %b_179 ], [ %960, %b_168 ]
  %896 = phi i32 [ %961, %b_179 ], [ %961, %b_168 ]
  %897 = phi i32 [ %962, %b_179 ], [ %962, %b_168 ]
  %898 = phi i32 [ %963, %b_179 ], [ %963, %b_168 ]
  %899 = phi i32 [ %964, %b_179 ], [ %964, %b_168 ]
  %900 = phi i64 [ %965, %b_179 ], [ %965, %b_168 ]
  %901 = call i32 @get_i32(i32 1050952)
  %902 = icmp ult i32 %901, %895
  %903 = zext i1 %902 to i32
  %904 = icmp ne i32 %903, 0
  %905 = select i1 %904, i32 %901, i32 %895
  call void @set_i32(i32 1050952, i32 %905)
  %906 = add i32 %895, %898
  br label %b_191

b_167:                                            ; preds = %b_165
  br label %b_169

b_168:                                            ; preds = %b_178
  %907 = add i32 %956, 12
  %908 = add i32 %907, 0
  %909 = call i32 @get_i32(i32 %908)
  %910 = icmp ule i32 %960, %959
  %911 = zext i1 %910 to i32
  %912 = or i32 %909, %911
  %913 = icmp ugt i32 %967, %959
  %914 = zext i1 %913 to i32
  %915 = or i32 %912, %914
  %916 = icmp ne i32 %915, 0
  br i1 %916, label %b_166, label %b_190

b_169:                                            ; preds = %b_167
  %917 = call i32 @get_i32(i32 1050908)
  %918 = icmp ult i32 %917, %61
  %919 = zext i1 %918 to i32
  %920 = icmp ne i32 %919, 0
  br i1 %920, label %b_171, label %b_172

b_170:                                            ; preds = %b_176
  %921 = call i32 @get_i32(i32 1050952)
  %922 = icmp ule i32 %921, %940
  %923 = zext i1 %922 to i32
  %924 = icmp ne i32 %923, 0
  %925 = select i1 %924, i32 %921, i32 0
  %926 = icmp eq i32 0, %925
  %927 = zext i1 %926 to i32
  %928 = icmp ne i32 %927, 0
  br i1 %928, label %b_187, label %b_188

b_171:                                            ; preds = %b_169
  %929 = call i32 @get_i32(i32 1050912)
  %930 = icmp ugt i32 %929, %61
  %931 = zext i1 %930 to i32
  %932 = icmp ne i32 %931, 0
  br i1 %932, label %b_1, label %b_174

b_172:                                            ; preds = %b_169
  br label %b_173

b_173:                                            ; preds = %b_172
  %933 = call i32 @get_i32(i32 1050916)
  br label %b_182

b_174:                                            ; preds = %b_171
  %934 = add i32 %61, 65583
  %935 = lshr i32 %934, 16
  %936 = call i32 @instruction_memory_grow(i32 %935)
  %937 = icmp eq i32 %936, -1
  %938 = zext i1 %937 to i32
  %939 = icmp ne i32 %938, 0
  br i1 %939, label %b_3, label %b_175

b_175:                                            ; preds = %b_174
  %940 = shl i32 %936, 16
  %941 = icmp eq i32 0, %940
  %942 = zext i1 %941 to i32
  %943 = icmp ne i32 %942, 0
  br i1 %943, label %b_3, label %b_176

b_176:                                            ; preds = %b_175
  %944 = and i32 %934, -65536
  %945 = call i32 @get_i32(i32 1050924)
  %946 = add i32 %944, %945
  call void @set_i32(i32 1050924, i32 %946)
  %947 = call i32 @get_i32(i32 1050928)
  %948 = icmp ugt i32 %947, %946
  %949 = zext i1 %948 to i32
  %950 = icmp ne i32 %949, 0
  %951 = select i1 %950, i32 %947, i32 %946
  call void @set_i32(i32 1050928, i32 %951)
  %952 = call i32 @get_i32(i32 1050920)
  %953 = icmp eq i32 0, %952
  %954 = zext i1 %953 to i32
  %955 = icmp ne i32 %954, 0
  br i1 %955, label %b_170, label %b_177

b_177:                                            ; preds = %b_176
  br label %b_178

b_178:                                            ; preds = %b_180, %b_177
  %956 = phi i32 [ 1050932, %b_177 ], [ %975, %b_180 ]
  %957 = phi i32 [ %947, %b_177 ], [ %967, %b_180 ]
  %958 = phi i32 [ %58, %b_177 ], [ %969, %b_180 ]
  %959 = phi i32 [ %952, %b_177 ], [ %959, %b_180 ]
  %960 = phi i32 [ %940, %b_177 ], [ %960, %b_180 ]
  %961 = phi i32 [ %61, %b_177 ], [ %961, %b_180 ]
  %962 = phi i32 [ 0, %b_177 ], [ %962, %b_180 ]
  %963 = phi i32 [ %944, %b_177 ], [ %963, %b_180 ]
  %964 = phi i32 [ %64, %b_177 ], [ %964, %b_180 ]
  %965 = phi i64 [ %65, %b_177 ], [ %965, %b_180 ]
  %966 = add i32 %956, 0
  %967 = call i32 @get_i32(i32 %966)
  %968 = add i32 %956, 4
  %969 = call i32 @get_i32(i32 %968)
  %970 = add i32 %967, %969
  %971 = icmp eq i32 %970, %960
  %972 = zext i1 %971 to i32
  %973 = icmp ne i32 %972, 0
  br i1 %973, label %b_168, label %b_180

b_179:                                            ; preds = %b_181
  br label %b_166

b_180:                                            ; preds = %b_178
  %974 = add i32 %956, 8
  %975 = call i32 @get_i32(i32 %974)
  %976 = icmp ne i32 %975, 0
  br i1 %976, label %b_178, label %b_181

b_181:                                            ; preds = %b_180
  br label %b_179

b_182:                                            ; preds = %b_173
  %977 = sub i32 %917, %61
  %978 = icmp ule i32 %977, 15
  %979 = zext i1 %978 to i32
  %980 = icmp ne i32 %979, 0
  br i1 %980, label %b_184, label %b_185

b_183:                                            ; preds = %b_186, %b_184
  %981 = phi i32 [ %997, %b_184 ], [ %1006, %b_186 ]
  %982 = phi i32 [ %933, %b_184 ], [ %933, %b_186 ]
  %983 = phi i32 [ %996, %b_184 ], [ %977, %b_186 ]
  %984 = phi i32 [ %59, %b_184 ], [ %59, %b_186 ]
  %985 = phi i32 [ %60, %b_184 ], [ %60, %b_186 ]
  %986 = phi i32 [ %61, %b_184 ], [ %61, %b_186 ]
  %987 = phi i32 [ %62, %b_184 ], [ %1001, %b_186 ]
  %988 = phi i32 [ %63, %b_184 ], [ %63, %b_186 ]
  %989 = phi i32 [ %64, %b_184 ], [ %64, %b_186 ]
  %990 = phi i64 [ %65, %b_184 ], [ %65, %b_186 ]
  %991 = phi i32 [ %1000, %b_184 ], [ %1007, %b_186 ]
  %992 = add i32 %981, 0
  call void @set_i32(i32 %992, i32 %991)
  %993 = add i32 %982, 8
  ret i32 %993

b_184:                                            ; preds = %b_182
  call void @set_i32(i32 1050916, i32 0)
  call void @set_i32(i32 1050908, i32 0)
  %994 = or i32 %917, 3
  %995 = add i32 %933, 4
  call void @set_i32(i32 %995, i32 %994)
  %996 = add i32 %917, %933
  %997 = add i32 %996, 4
  %998 = add i32 %996, 4
  %999 = call i32 @get_i32(i32 %998)
  %1000 = or i32 %999, 1
  br label %b_183

b_185:                                            ; preds = %b_182
  br label %b_186

b_186:                                            ; preds = %b_185
  call void @set_i32(i32 1050908, i32 %977)
  %1001 = add i32 %933, %61
  call void @set_i32(i32 1050916, i32 %1001)
  %1002 = or i32 %977, 1
  %1003 = add i32 %1001, 4
  call void @set_i32(i32 %1003, i32 %1002)
  %1004 = add i32 %917, %933
  %1005 = add i32 %1004, 0
  call void @set_i32(i32 %1005, i32 %977)
  %1006 = add i32 %933, 4
  %1007 = or i32 %61, 3
  br label %b_183

b_187:                                            ; preds = %b_170
  call void @set_i32(i32 1050952, i32 %940)
  br label %b_189

b_188:                                            ; preds = %b_170
  br label %b_189

b_189:                                            ; preds = %b_188, %b_187
  %1008 = phi i32 [ %921, %b_187 ], [ %921, %b_188 ]
  %1009 = phi i32 [ %947, %b_187 ], [ %947, %b_188 ]
  %1010 = phi i32 [ %58, %b_187 ], [ %58, %b_188 ]
  %1011 = phi i32 [ %952, %b_187 ], [ %952, %b_188 ]
  %1012 = phi i32 [ %940, %b_187 ], [ %940, %b_188 ]
  %1013 = phi i32 [ %61, %b_187 ], [ %61, %b_188 ]
  %1014 = phi i32 [ 0, %b_187 ], [ 0, %b_188 ]
  %1015 = phi i32 [ %944, %b_187 ], [ %944, %b_188 ]
  %1016 = phi i32 [ %64, %b_187 ], [ %64, %b_188 ]
  %1017 = phi i64 [ %65, %b_187 ], [ %65, %b_188 ]
  call void @set_i32(i32 1050956, i32 4095)
  call void @set_i32(i32 1050932, i32 %1012)
  call void @set_i32(i32 1050944, i32 0)
  call void @set_i32(i32 1050936, i32 %1015)
  call void @set_i32(i32 1050528, i32 1050516)
  call void @set_i32(i32 1050536, i32 1050524)
  call void @set_i32(i32 1050524, i32 1050516)
  call void @set_i32(i32 1050544, i32 1050532)
  call void @set_i32(i32 1050532, i32 1050524)
  call void @set_i32(i32 1050552, i32 1050540)
  call void @set_i32(i32 1050540, i32 1050532)
  call void @set_i32(i32 1050560, i32 1050548)
  call void @set_i32(i32 1050548, i32 1050540)
  call void @set_i32(i32 1050568, i32 1050556)
  call void @set_i32(i32 1050556, i32 1050548)
  call void @set_i32(i32 1050576, i32 1050564)
  call void @set_i32(i32 1050564, i32 1050556)
  call void @set_i32(i32 1050584, i32 1050572)
  call void @set_i32(i32 1050572, i32 1050564)
  call void @set_i32(i32 1050592, i32 1050580)
  call void @set_i32(i32 1050580, i32 1050572)
  call void @set_i32(i32 1050588, i32 1050580)
  call void @set_i32(i32 1050600, i32 1050588)
  call void @set_i32(i32 1050596, i32 1050588)
  call void @set_i32(i32 1050608, i32 1050596)
  call void @set_i32(i32 1050604, i32 1050596)
  call void @set_i32(i32 1050616, i32 1050604)
  call void @set_i32(i32 1050612, i32 1050604)
  call void @set_i32(i32 1050624, i32 1050612)
  call void @set_i32(i32 1050620, i32 1050612)
  call void @set_i32(i32 1050632, i32 1050620)
  call void @set_i32(i32 1050628, i32 1050620)
  call void @set_i32(i32 1050640, i32 1050628)
  call void @set_i32(i32 1050636, i32 1050628)
  call void @set_i32(i32 1050648, i32 1050636)
  call void @set_i32(i32 1050644, i32 1050636)
  call void @set_i32(i32 1050656, i32 1050644)
  call void @set_i32(i32 1050664, i32 1050652)
  call void @set_i32(i32 1050652, i32 1050644)
  call void @set_i32(i32 1050672, i32 1050660)
  call void @set_i32(i32 1050660, i32 1050652)
  call void @set_i32(i32 1050680, i32 1050668)
  call void @set_i32(i32 1050668, i32 1050660)
  call void @set_i32(i32 1050688, i32 1050676)
  call void @set_i32(i32 1050676, i32 1050668)
  call void @set_i32(i32 1050696, i32 1050684)
  call void @set_i32(i32 1050684, i32 1050676)
  call void @set_i32(i32 1050704, i32 1050692)
  call void @set_i32(i32 1050692, i32 1050684)
  call void @set_i32(i32 1050712, i32 1050700)
  call void @set_i32(i32 1050700, i32 1050692)
  call void @set_i32(i32 1050720, i32 1050708)
  call void @set_i32(i32 1050708, i32 1050700)
  call void @set_i32(i32 1050728, i32 1050716)
  call void @set_i32(i32 1050716, i32 1050708)
  call void @set_i32(i32 1050736, i32 1050724)
  call void @set_i32(i32 1050724, i32 1050716)
  call void @set_i32(i32 1050744, i32 1050732)
  call void @set_i32(i32 1050732, i32 1050724)
  call void @set_i32(i32 1050752, i32 1050740)
  call void @set_i32(i32 1050740, i32 1050732)
  call void @set_i32(i32 1050760, i32 1050748)
  call void @set_i32(i32 1050748, i32 1050740)
  call void @set_i32(i32 1050768, i32 1050756)
  call void @set_i32(i32 1050756, i32 1050748)
  call void @set_i32(i32 1050776, i32 1050764)
  call void @set_i32(i32 1050764, i32 1050756)
  call void @set_i32(i32 1050920, i32 %1012)
  call void @set_i32(i32 1050772, i32 1050764)
  %1018 = add i32 %1015, -40
  call void @set_i32(i32 1050912, i32 %1018)
  %1019 = or i32 %1018, 1
  %1020 = add i32 %1012, 4
  call void @set_i32(i32 %1020, i32 %1019)
  %1021 = add i32 %1018, %1012
  %1022 = add i32 %1021, 4
  call void @set_i32(i32 %1022, i32 40)
  call void @set_i32(i32 1050948, i32 2097152)
  br label %b_164

b_190:                                            ; preds = %b_168
  %1023 = add i32 %969, %963
  %1024 = add i32 %956, 4
  call void @set_i32(i32 %1024, i32 %1023)
  %1025 = call i32 @get_i32(i32 1050920)
  %1026 = add i32 %1025, 15
  %1027 = and i32 %1026, -8
  %1028 = add i32 %1027, -8
  call void @set_i32(i32 1050920, i32 %1028)
  %1029 = call i32 @get_i32(i32 1050912)
  %1030 = add i32 %1029, %963
  %1031 = sub i32 %1025, %1027
  %1032 = add i32 %1030, %1031
  %1033 = add i32 %1032, 8
  call void @set_i32(i32 1050912, i32 %1033)
  %1034 = add i32 %1027, -4
  %1035 = or i32 %1033, 1
  %1036 = add i32 %1034, 0
  call void @set_i32(i32 %1036, i32 %1035)
  %1037 = add i32 %1025, %1030
  %1038 = add i32 %1037, 4
  call void @set_i32(i32 %1038, i32 40)
  call void @set_i32(i32 1050948, i32 2097152)
  br label %b_164

b_191:                                            ; preds = %b_166
  br label %b_193

b_192:                                            ; preds = %b_198, %b_194
  %1039 = phi i32 [ %1069, %b_198 ], [ %1049, %b_194 ]
  %1040 = phi i32 [ %1050, %b_198 ], [ %1050, %b_194 ]
  %1041 = phi i32 [ %1051, %b_198 ], [ %1051, %b_194 ]
  %1042 = phi i32 [ %1052, %b_198 ], [ %1052, %b_194 ]
  %1043 = phi i32 [ %1053, %b_198 ], [ %1053, %b_194 ]
  %1044 = phi i32 [ %1054, %b_198 ], [ %1054, %b_194 ]
  %1045 = phi i32 [ %1055, %b_198 ], [ %1055, %b_194 ]
  %1046 = phi i32 [ %1056, %b_198 ], [ %1056, %b_194 ]
  %1047 = phi i32 [ %1057, %b_198 ], [ %1057, %b_194 ]
  %1048 = phi i64 [ %1058, %b_198 ], [ %1058, %b_194 ]
  br label %b_239

b_193:                                            ; preds = %b_195, %b_191
  %1049 = phi i32 [ 1050932, %b_191 ], [ %1069, %b_195 ]
  %1050 = phi i32 [ %892, %b_191 ], [ %1050, %b_195 ]
  %1051 = phi i32 [ %906, %b_191 ], [ %1051, %b_195 ]
  %1052 = phi i32 [ %894, %b_191 ], [ %1052, %b_195 ]
  %1053 = phi i32 [ %895, %b_191 ], [ %1053, %b_195 ]
  %1054 = phi i32 [ %896, %b_191 ], [ %1054, %b_195 ]
  %1055 = phi i32 [ %897, %b_191 ], [ %1055, %b_195 ]
  %1056 = phi i32 [ %898, %b_191 ], [ %1056, %b_195 ]
  %1057 = phi i32 [ %899, %b_191 ], [ %1057, %b_195 ]
  %1058 = phi i64 [ %900, %b_191 ], [ %1058, %b_195 ]
  %1059 = add i32 %1049, 0
  %1060 = call i32 @get_i32(i32 %1059)
  %1061 = icmp ne i32 %1051, %1060
  %1062 = zext i1 %1061 to i32
  %1063 = icmp ne i32 %1062, 0
  br i1 %1063, label %b_195, label %b_196

b_194:                                            ; preds = %b_197
  %1064 = add i32 %1049, 12
  %1065 = add i32 %1064, 0
  %1066 = call i32 @get_i32(i32 %1065)
  %1067 = icmp ne i32 %1066, 0
  br i1 %1067, label %b_192, label %b_199

b_195:                                            ; preds = %b_193
  %1068 = add i32 %1049, 8
  %1069 = call i32 @get_i32(i32 %1068)
  %1070 = icmp ne i32 %1069, 0
  br i1 %1070, label %b_193, label %b_198

b_196:                                            ; preds = %b_193
  br label %b_197

b_197:                                            ; preds = %b_196
  br label %b_194

b_198:                                            ; preds = %b_195
  br label %b_192

b_199:                                            ; preds = %b_194
  %1071 = add i32 %1049, 0
  call void @set_i32(i32 %1071, i32 %1053)
  %1072 = add i32 %1049, 4
  %1073 = call i32 @get_i32(i32 %1072)
  %1074 = add i32 %1073, %1056
  %1075 = add i32 %1049, 4
  call void @set_i32(i32 %1075, i32 %1074)
  %1076 = or i32 %1054, 3
  %1077 = add i32 %1053, 4
  call void @set_i32(i32 %1077, i32 %1076)
  %1078 = add i32 %1053, %1054
  %1079 = sub i32 %1051, %1053
  %1080 = sub i32 %1079, %1054
  br label %b_200

b_200:                                            ; preds = %b_199
  br label %b_202

b_201:                                            ; preds = %b_235, %b_223, %b_219, %b_206, %b_203
  %1081 = phi i32 [ %1189, %b_223 ], [ %1175, %b_219 ], [ %1264, %b_235 ], [ %1078, %b_206 ], [ %1078, %b_203 ]
  %1082 = phi i32 [ %1200, %b_223 ], [ %1176, %b_219 ], [ %1265, %b_235 ], [ %1107, %b_206 ], [ %1097, %b_203 ]
  %1083 = phi i32 [ %1191, %b_223 ], [ %1177, %b_219 ], [ %1274, %b_235 ], [ %1051, %b_206 ], [ %1051, %b_203 ]
  %1084 = phi i32 [ %1192, %b_223 ], [ %1178, %b_219 ], [ %1267, %b_235 ], [ %1052, %b_206 ], [ %1052, %b_203 ]
  %1085 = phi i32 [ %1193, %b_223 ], [ %1179, %b_219 ], [ %1268, %b_235 ], [ %1053, %b_206 ], [ %1053, %b_203 ]
  %1086 = phi i32 [ %1194, %b_223 ], [ %1180, %b_219 ], [ %1269, %b_235 ], [ %1080, %b_206 ], [ %1080, %b_203 ]
  %1087 = phi i32 [ %1195, %b_223 ], [ %1181, %b_219 ], [ %1270, %b_235 ], [ %1055, %b_206 ], [ %1055, %b_203 ]
  %1088 = phi i32 [ %1196, %b_223 ], [ %1182, %b_219 ], [ %1271, %b_235 ], [ %1056, %b_206 ], [ %1056, %b_203 ]
  %1089 = phi i32 [ %1197, %b_223 ], [ %1183, %b_219 ], [ %1272, %b_235 ], [ %1057, %b_206 ], [ %1057, %b_203 ]
  %1090 = phi i64 [ %1198, %b_223 ], [ %1184, %b_219 ], [ %1273, %b_235 ], [ %1058, %b_206 ], [ %1058, %b_203 ]
  %1091 = add i32 %1085, 8
  ret i32 %1091

b_202:                                            ; preds = %b_200
  %1092 = call i32 @get_i32(i32 1050920)
  %1093 = icmp ne i32 %1051, %1092
  %1094 = zext i1 %1093 to i32
  %1095 = icmp ne i32 %1094, 0
  br i1 %1095, label %b_204, label %b_205

b_203:                                            ; preds = %b_204
  call void @set_i32(i32 1050916, i32 %1078)
  %1096 = call i32 @get_i32(i32 1050908)
  %1097 = add i32 %1096, %1080
  call void @set_i32(i32 1050908, i32 %1097)
  %1098 = or i32 %1097, 1
  %1099 = add i32 %1078, 4
  call void @set_i32(i32 %1099, i32 %1098)
  %1100 = add i32 %1078, %1097
  %1101 = add i32 %1100, 0
  call void @set_i32(i32 %1101, i32 %1097)
  br label %b_201

b_204:                                            ; preds = %b_202
  %1102 = call i32 @get_i32(i32 1050916)
  %1103 = icmp eq i32 %1102, %1051
  %1104 = zext i1 %1103 to i32
  %1105 = icmp ne i32 %1104, 0
  br i1 %1105, label %b_203, label %b_207

b_205:                                            ; preds = %b_202
  br label %b_206

b_206:                                            ; preds = %b_205
  call void @set_i32(i32 1050920, i32 %1078)
  %1106 = call i32 @get_i32(i32 1050912)
  %1107 = add i32 %1106, %1080
  call void @set_i32(i32 1050912, i32 %1107)
  %1108 = or i32 %1107, 1
  %1109 = add i32 %1078, 4
  call void @set_i32(i32 %1109, i32 %1108)
  br label %b_201

b_207:                                            ; preds = %b_204
  %1110 = add i32 %1051, 4
  %1111 = add i32 %1110, 0
  %1112 = call i32 @get_i32(i32 %1111)
  %1113 = and i32 %1112, 3
  %1114 = icmp eq i32 %1113, 1
  %1115 = zext i1 %1114 to i32
  %1116 = icmp ne i32 %1115, 0
  br i1 %1116, label %b_208, label %b_209

b_208:                                            ; preds = %b_207
  %1117 = and i32 %1112, -8
  call void @wasmf_internal_20(i32 %1051, i32 %1117)
  %1118 = add i32 %1117, %1080
  %1119 = add i32 %1117, %1051
  br label %b_210

b_209:                                            ; preds = %b_207
  br label %b_210

b_210:                                            ; preds = %b_209, %b_208
  %1120 = phi i32 [ %1078, %b_208 ], [ %1078, %b_209 ]
  %1121 = phi i32 [ %1117, %b_208 ], [ %1112, %b_209 ]
  %1122 = phi i32 [ %1119, %b_208 ], [ %1051, %b_209 ]
  %1123 = phi i32 [ %1052, %b_208 ], [ %1052, %b_209 ]
  %1124 = phi i32 [ %1053, %b_208 ], [ %1053, %b_209 ]
  %1125 = phi i32 [ %1118, %b_208 ], [ %1080, %b_209 ]
  %1126 = phi i32 [ %1055, %b_208 ], [ %1055, %b_209 ]
  %1127 = phi i32 [ %1056, %b_208 ], [ %1056, %b_209 ]
  %1128 = phi i32 [ %1057, %b_208 ], [ %1057, %b_209 ]
  %1129 = phi i64 [ %1058, %b_208 ], [ %1058, %b_209 ]
  %1130 = add i32 %1122, 4
  %1131 = call i32 @get_i32(i32 %1130)
  %1132 = and i32 %1131, -2
  %1133 = add i32 %1122, 4
  call void @set_i32(i32 %1133, i32 %1132)
  %1134 = or i32 %1125, 1
  %1135 = add i32 %1120, 4
  call void @set_i32(i32 %1135, i32 %1134)
  %1136 = add i32 %1120, %1125
  %1137 = add i32 %1136, 0
  call void @set_i32(i32 %1137, i32 %1125)
  %1138 = icmp uge i32 %1125, 256
  %1139 = zext i1 %1138 to i32
  %1140 = icmp ne i32 %1139, 0
  br i1 %1140, label %b_211, label %b_212

b_211:                                            ; preds = %b_210
  %1141 = add i32 %1120, 16
  call void @set_i64(i32 %1141, i64 0)
  br label %b_214

b_212:                                            ; preds = %b_210
  br label %b_213

b_213:                                            ; preds = %b_212
  %1142 = lshr i32 %1125, 3
  %1143 = shl i32 %1142, 3
  %1144 = add i32 %1143, 1050516
  br label %b_234

b_214:                                            ; preds = %b_211
  %1145 = lshr i32 %1125, 8
  %1146 = icmp eq i32 0, %1145
  %1147 = zext i1 %1146 to i32
  %1148 = icmp ne i32 %1147, 0
  br i1 %1148, label %b_215, label %b_216

b_215:                                            ; preds = %b_217, %b_216, %b_214
  %1149 = phi i32 [ %1120, %b_214 ], [ %1120, %b_216 ], [ %1120, %b_217 ]
  %1150 = phi i32 [ %1145, %b_214 ], [ %1145, %b_216 ], [ %1166, %b_217 ]
  %1151 = phi i32 [ %1122, %b_214 ], [ %1122, %b_216 ], [ %1122, %b_217 ]
  %1152 = phi i32 [ %1123, %b_214 ], [ %1123, %b_216 ], [ %1123, %b_217 ]
  %1153 = phi i32 [ %1124, %b_214 ], [ %1124, %b_216 ], [ %1124, %b_217 ]
  %1154 = phi i32 [ %1125, %b_214 ], [ %1125, %b_216 ], [ %1125, %b_217 ]
  %1155 = phi i32 [ %1126, %b_214 ], [ %1126, %b_216 ], [ %1126, %b_217 ]
  %1156 = phi i32 [ %1127, %b_214 ], [ %1127, %b_216 ], [ %1127, %b_217 ]
  %1157 = phi i32 [ %1128, %b_214 ], [ %1128, %b_216 ], [ %1128, %b_217 ]
  %1158 = phi i64 [ %1129, %b_214 ], [ %1129, %b_216 ], [ %1129, %b_217 ]
  %1159 = phi i32 [ 0, %b_214 ], [ 31, %b_216 ], [ %1174, %b_217 ]
  %1160 = add i32 %1120, 28
  call void @set_i32(i32 %1160, i32 %1159)
  %1161 = shl i32 %1159, 2
  %1162 = add i32 %1161, 1050780
  br label %b_218

b_216:                                            ; preds = %b_214
  %1163 = icmp ugt i32 %1125, 16777215
  %1164 = zext i1 %1163 to i32
  %1165 = icmp ne i32 %1164, 0
  br i1 %1165, label %b_215, label %b_217

b_217:                                            ; preds = %b_216
  %1166 = call i32 @llvm.ctlz.i32(i32 %1145, i1 false)
  %1167 = sub i32 6, %1166
  %1168 = and i32 %1167, 31
  %1169 = urem i32 %1168, 32
  %1170 = lshr i32 %1125, %1169
  %1171 = and i32 %1170, 1
  %1172 = shl i32 %1166, 1
  %1173 = sub i32 %1171, %1172
  %1174 = add i32 %1173, 62
  br label %b_215

b_218:                                            ; preds = %b_215
  br label %b_220

b_219:                                            ; preds = %b_228, %b_221
  %1175 = phi i32 [ %1149, %b_228 ], [ %1232, %b_221 ]
  %1176 = phi i32 [ %1159, %b_228 ], [ %1233, %b_221 ]
  %1177 = phi i32 [ %1162, %b_228 ], [ %1234, %b_221 ]
  %1178 = phi i32 [ %1209, %b_228 ], [ %1245, %b_221 ]
  %1179 = phi i32 [ %1153, %b_228 ], [ %1236, %b_221 ]
  %1180 = phi i32 [ %1154, %b_228 ], [ %1237, %b_221 ]
  %1181 = phi i32 [ %1206, %b_228 ], [ %1247, %b_221 ]
  %1182 = phi i32 [ %1156, %b_228 ], [ %1239, %b_221 ]
  %1183 = phi i32 [ %1157, %b_228 ], [ %1240, %b_221 ]
  %1184 = phi i64 [ %1158, %b_228 ], [ %1241, %b_221 ]
  %1185 = add i32 %1175, 24
  call void @set_i32(i32 %1185, i32 %1177)
  %1186 = add i32 %1175, 12
  call void @set_i32(i32 %1186, i32 %1175)
  %1187 = add i32 %1175, 8
  call void @set_i32(i32 %1187, i32 %1175)
  br label %b_201

b_220:                                            ; preds = %b_218
  br label %b_222

b_221:                                            ; preds = %b_230
  %1188 = add i32 %1245, 0
  call void @set_i32(i32 %1188, i32 %1232)
  br label %b_219

b_222:                                            ; preds = %b_220
  br label %b_224

b_223:                                            ; preds = %b_231, %b_229
  %1189 = phi i32 [ %1149, %b_229 ], [ %1232, %b_231 ]
  %1190 = phi i32 [ %1159, %b_229 ], [ %1251, %b_231 ]
  %1191 = phi i32 [ %1222, %b_229 ], [ %1247, %b_231 ]
  %1192 = phi i32 [ %1209, %b_229 ], [ %1245, %b_231 ]
  %1193 = phi i32 [ %1153, %b_229 ], [ %1236, %b_231 ]
  %1194 = phi i32 [ %1154, %b_229 ], [ %1237, %b_231 ]
  %1195 = phi i32 [ %1222, %b_229 ], [ %1247, %b_231 ]
  %1196 = phi i32 [ %1156, %b_229 ], [ %1239, %b_231 ]
  %1197 = phi i32 [ %1157, %b_229 ], [ %1240, %b_231 ]
  %1198 = phi i64 [ %1158, %b_229 ], [ %1241, %b_231 ]
  %1199 = add i32 %1195, 8
  %1200 = call i32 @get_i32(i32 %1199)
  %1201 = add i32 %1200, 12
  call void @set_i32(i32 %1201, i32 %1189)
  %1202 = add i32 %1195, 8
  call void @set_i32(i32 %1202, i32 %1189)
  %1203 = add i32 %1189, 24
  call void @set_i32(i32 %1203, i32 0)
  %1204 = add i32 %1189, 12
  call void @set_i32(i32 %1204, i32 %1195)
  %1205 = add i32 %1189, 8
  call void @set_i32(i32 %1205, i32 %1200)
  br label %b_201

b_224:                                            ; preds = %b_222
  %1206 = call i32 @get_i32(i32 1050512)
  %1207 = and i32 %1159, 31
  %1208 = urem i32 %1207, 32
  %1209 = shl i32 1, %1208
  %1210 = and i32 %1206, %1209
  %1211 = icmp ne i32 %1210, 0
  br i1 %1211, label %b_226, label %b_227

b_225:                                            ; preds = %b_226
  %1212 = lshr i32 %1159, 1
  %1213 = sub i32 25, %1212
  %1214 = and i32 %1213, 31
  %1215 = icmp eq i32 %1159, 31
  %1216 = zext i1 %1215 to i32
  %1217 = icmp ne i32 %1216, 0
  %1218 = select i1 %1217, i32 0, i32 %1214
  %1219 = urem i32 %1218, 32
  %1220 = shl i32 %1154, %1219
  br label %b_230

b_226:                                            ; preds = %b_224
  %1221 = add i32 %1162, 0
  %1222 = call i32 @get_i32(i32 %1221)
  %1223 = add i32 %1222, 4
  %1224 = add i32 %1223, 0
  %1225 = call i32 @get_i32(i32 %1224)
  %1226 = and i32 %1225, -8
  %1227 = icmp ne i32 %1226, %1154
  %1228 = zext i1 %1227 to i32
  %1229 = icmp ne i32 %1228, 0
  br i1 %1229, label %b_225, label %b_229

b_227:                                            ; preds = %b_224
  br label %b_228

b_228:                                            ; preds = %b_227
  %1230 = or i32 %1209, %1206
  call void @set_i32(i32 1050512, i32 %1230)
  %1231 = add i32 %1162, 0
  call void @set_i32(i32 %1231, i32 %1149)
  br label %b_219

b_229:                                            ; preds = %b_226
  br label %b_223

b_230:                                            ; preds = %b_232, %b_225
  %1232 = phi i32 [ %1149, %b_225 ], [ %1232, %b_232 ]
  %1233 = phi i32 [ %1220, %b_225 ], [ %1251, %b_232 ]
  %1234 = phi i32 [ %1222, %b_225 ], [ %1247, %b_232 ]
  %1235 = phi i32 [ %1209, %b_225 ], [ %1245, %b_232 ]
  %1236 = phi i32 [ %1153, %b_225 ], [ %1236, %b_232 ]
  %1237 = phi i32 [ %1154, %b_225 ], [ %1237, %b_232 ]
  %1238 = phi i32 [ %1206, %b_225 ], [ %1247, %b_232 ]
  %1239 = phi i32 [ %1156, %b_225 ], [ %1239, %b_232 ]
  %1240 = phi i32 [ %1157, %b_225 ], [ %1240, %b_232 ]
  %1241 = phi i64 [ %1158, %b_225 ], [ %1241, %b_232 ]
  %1242 = lshr i32 %1233, 29
  %1243 = and i32 %1242, 4
  %1244 = add i32 %1234, %1243
  %1245 = add i32 %1244, 16
  %1246 = add i32 %1245, 0
  %1247 = call i32 @get_i32(i32 %1246)
  %1248 = icmp eq i32 0, %1247
  %1249 = zext i1 %1248 to i32
  %1250 = icmp ne i32 %1249, 0
  br i1 %1250, label %b_221, label %b_232

b_231:                                            ; preds = %b_233
  br label %b_223

b_232:                                            ; preds = %b_230
  %1251 = shl i32 %1233, 1
  %1252 = add i32 %1247, 4
  %1253 = add i32 %1252, 0
  %1254 = call i32 @get_i32(i32 %1253)
  %1255 = and i32 %1254, -8
  %1256 = icmp ne i32 %1255, %1237
  %1257 = zext i1 %1256 to i32
  %1258 = icmp ne i32 %1257, 0
  br i1 %1258, label %b_230, label %b_233

b_233:                                            ; preds = %b_232
  br label %b_231

b_234:                                            ; preds = %b_213
  %1259 = call i32 @get_i32(i32 1050508)
  %1260 = urem i32 %1142, 32
  %1261 = shl i32 1, %1260
  %1262 = and i32 %1259, %1261
  %1263 = icmp ne i32 %1262, 0
  br i1 %1263, label %b_236, label %b_237

b_235:                                            ; preds = %b_238, %b_236
  %1264 = phi i32 [ %1120, %b_236 ], [ %1120, %b_238 ]
  %1265 = phi i32 [ %1144, %b_236 ], [ %1144, %b_238 ]
  %1266 = phi i32 [ %1261, %b_236 ], [ %1261, %b_238 ]
  %1267 = phi i32 [ %1123, %b_236 ], [ %1123, %b_238 ]
  %1268 = phi i32 [ %1124, %b_236 ], [ %1124, %b_238 ]
  %1269 = phi i32 [ %1125, %b_236 ], [ %1125, %b_238 ]
  %1270 = phi i32 [ %1259, %b_236 ], [ %1259, %b_238 ]
  %1271 = phi i32 [ %1127, %b_236 ], [ %1127, %b_238 ]
  %1272 = phi i32 [ %1128, %b_236 ], [ %1128, %b_238 ]
  %1273 = phi i64 [ %1129, %b_236 ], [ %1129, %b_238 ]
  %1274 = phi i32 [ %1280, %b_236 ], [ %1144, %b_238 ]
  %1275 = add i32 %1265, 8
  call void @set_i32(i32 %1275, i32 %1264)
  %1276 = add i32 %1274, 12
  call void @set_i32(i32 %1276, i32 %1264)
  %1277 = add i32 %1264, 12
  call void @set_i32(i32 %1277, i32 %1265)
  %1278 = add i32 %1264, 8
  call void @set_i32(i32 %1278, i32 %1274)
  br label %b_201

b_236:                                            ; preds = %b_234
  %1279 = add i32 %1144, 8
  %1280 = call i32 @get_i32(i32 %1279)
  br label %b_235

b_237:                                            ; preds = %b_234
  br label %b_238

b_238:                                            ; preds = %b_237
  %1281 = or i32 %1261, %1259
  call void @set_i32(i32 1050508, i32 %1281)
  br label %b_235

b_239:                                            ; preds = %b_245, %b_192
  %1282 = phi i32 [ 1050932, %b_192 ], [ %1335, %b_245 ]
  %1283 = phi i32 [ %1040, %b_192 ], [ %1325, %b_245 ]
  %1284 = phi i32 [ %1041, %b_192 ], [ %1326, %b_245 ]
  %1285 = phi i32 [ %1042, %b_192 ], [ %1327, %b_245 ]
  %1286 = phi i32 [ %1043, %b_192 ], [ %1328, %b_245 ]
  %1287 = phi i32 [ %1044, %b_192 ], [ %1329, %b_245 ]
  %1288 = phi i32 [ %1045, %b_192 ], [ %1330, %b_245 ]
  %1289 = phi i32 [ %1046, %b_192 ], [ %1331, %b_245 ]
  %1290 = phi i32 [ %1047, %b_192 ], [ %1332, %b_245 ]
  %1291 = phi i64 [ %1048, %b_192 ], [ %1333, %b_245 ]
  br label %b_241

b_240:                                            ; preds = %b_242
  call void @set_i32(i32 1050920, i32 %1286)
  %1292 = add i32 %1289, -40
  call void @set_i32(i32 1050912, i32 %1292)
  %1293 = or i32 %1292, 1
  %1294 = add i32 %1286, 4
  call void @set_i32(i32 %1294, i32 %1293)
  %1295 = add i32 %1292, %1286
  %1296 = add i32 %1295, 4
  call void @set_i32(i32 %1296, i32 40)
  call void @set_i32(i32 1050948, i32 2097152)
  %1297 = add i32 %1320, -32
  %1298 = and i32 %1297, -8
  %1299 = add i32 %1298, -8
  %1300 = add i32 %1285, 16
  %1301 = icmp ult i32 %1299, %1300
  %1302 = zext i1 %1301 to i32
  %1303 = icmp ne i32 %1302, 0
  %1304 = select i1 %1303, i32 %1285, i32 %1299
  %1305 = add i32 %1304, 4
  call void @set_i32(i32 %1305, i32 27)
  %1306 = call i64 @get_i64(i32 1050932)
  %1307 = add i32 %1304, 16
  %1308 = call i64 @get_i64(i32 1050940)
  %1309 = add i32 %1307, 0
  call void @set_i64(i32 %1309, i64 %1308)
  %1310 = add i32 %1304, 8
  call void @set_i64(i32 %1310, i64 %1306)
  call void @set_i32(i32 1050944, i32 0)
  call void @set_i32(i32 1050936, i32 %1289)
  call void @set_i32(i32 1050932, i32 %1286)
  %1311 = add i32 %1304, 8
  call void @set_i32(i32 1050940, i32 %1311)
  %1312 = add i32 %1304, 28
  br label %b_247

b_241:                                            ; preds = %b_239
  %1313 = add i32 %1282, 0
  %1314 = call i32 @get_i32(i32 %1313)
  %1315 = icmp ule i32 %1314, %1285
  %1316 = zext i1 %1315 to i32
  %1317 = icmp ne i32 %1316, 0
  br i1 %1317, label %b_243, label %b_244

b_242:                                            ; preds = %b_243
  br label %b_240

b_243:                                            ; preds = %b_241
  %1318 = add i32 %1282, 4
  %1319 = call i32 @get_i32(i32 %1318)
  %1320 = add i32 %1314, %1319
  %1321 = icmp ugt i32 %1320, %1285
  %1322 = zext i1 %1321 to i32
  %1323 = icmp ne i32 %1322, 0
  br i1 %1323, label %b_242, label %b_246

b_244:                                            ; preds = %b_241
  br label %b_245

b_245:                                            ; preds = %b_246, %b_244
  %1324 = phi i32 [ %1282, %b_246 ], [ %1282, %b_244 ]
  %1325 = phi i32 [ %1314, %b_246 ], [ %1314, %b_244 ]
  %1326 = phi i32 [ %1320, %b_246 ], [ %1284, %b_244 ]
  %1327 = phi i32 [ %1285, %b_246 ], [ %1285, %b_244 ]
  %1328 = phi i32 [ %1286, %b_246 ], [ %1286, %b_244 ]
  %1329 = phi i32 [ %1287, %b_246 ], [ %1287, %b_244 ]
  %1330 = phi i32 [ %1288, %b_246 ], [ %1288, %b_244 ]
  %1331 = phi i32 [ %1289, %b_246 ], [ %1289, %b_244 ]
  %1332 = phi i32 [ %1290, %b_246 ], [ %1290, %b_244 ]
  %1333 = phi i64 [ %1291, %b_246 ], [ %1291, %b_244 ]
  %1334 = add i32 %1324, 8
  %1335 = call i32 @get_i32(i32 %1334)
  br label %b_239

b_246:                                            ; preds = %b_243
  br label %b_245

b_247:                                            ; preds = %b_247, %b_240
  %1336 = phi i32 [ %1312, %b_240 ], [ %1347, %b_247 ]
  %1337 = phi i32 [ %1304, %b_240 ], [ %1337, %b_247 ]
  %1338 = phi i32 [ %1320, %b_240 ], [ %1338, %b_247 ]
  %1339 = phi i32 [ %1285, %b_240 ], [ %1339, %b_247 ]
  %1340 = phi i32 [ %1286, %b_240 ], [ %1340, %b_247 ]
  %1341 = phi i32 [ %1287, %b_240 ], [ %1341, %b_247 ]
  %1342 = phi i32 [ %1288, %b_240 ], [ %1342, %b_247 ]
  %1343 = phi i32 [ %1289, %b_240 ], [ %1343, %b_247 ]
  %1344 = phi i32 [ %1290, %b_240 ], [ %1344, %b_247 ]
  %1345 = phi i64 [ %1306, %b_240 ], [ %1345, %b_247 ]
  %1346 = add i32 %1336, 0
  call void @set_i32(i32 %1346, i32 7)
  %1347 = add i32 %1336, 4
  %1348 = icmp ugt i32 %1338, %1347
  %1349 = zext i1 %1348 to i32
  %1350 = icmp ne i32 %1349, 0
  br i1 %1350, label %b_247, label %b_249

b_248:                                            ; preds = %b_249
  %1351 = icmp eq i32 %1337, %1339
  %1352 = zext i1 %1351 to i32
  %1353 = icmp ne i32 %1352, 0
  br i1 %1353, label %b_164, label %b_250

b_249:                                            ; preds = %b_247
  br label %b_248

b_250:                                            ; preds = %b_248
  %1354 = add i32 %1337, 4
  %1355 = call i32 @get_i32(i32 %1354)
  %1356 = and i32 %1355, -2
  %1357 = add i32 %1337, 4
  call void @set_i32(i32 %1357, i32 %1356)
  %1358 = sub i32 %1337, %1339
  %1359 = or i32 %1358, 1
  %1360 = add i32 %1339, 4
  call void @set_i32(i32 %1360, i32 %1359)
  %1361 = add i32 %1337, 0
  call void @set_i32(i32 %1361, i32 %1358)
  %1362 = icmp uge i32 %1358, 256
  %1363 = zext i1 %1362 to i32
  %1364 = icmp ne i32 %1363, 0
  br i1 %1364, label %b_251, label %b_252

b_251:                                            ; preds = %b_250
  %1365 = add i32 %1339, 16
  call void @set_i64(i32 %1365, i64 0)
  %1366 = add i32 %1339, 28
  br label %b_254

b_252:                                            ; preds = %b_250
  br label %b_253

b_253:                                            ; preds = %b_252
  %1367 = lshr i32 %1358, 3
  %1368 = shl i32 %1367, 3
  %1369 = add i32 %1368, 1050516
  br label %b_274

b_254:                                            ; preds = %b_251
  %1370 = lshr i32 %1358, 8
  %1371 = icmp eq i32 0, %1370
  %1372 = zext i1 %1371 to i32
  %1373 = icmp ne i32 %1372, 0
  br i1 %1373, label %b_255, label %b_256

b_255:                                            ; preds = %b_257, %b_256, %b_254
  %1374 = phi i32 [ %1370, %b_254 ], [ %1370, %b_256 ], [ %1391, %b_257 ]
  %1375 = phi i32 [ %1337, %b_254 ], [ %1337, %b_256 ], [ %1337, %b_257 ]
  %1376 = phi i32 [ %1338, %b_254 ], [ %1338, %b_256 ], [ %1338, %b_257 ]
  %1377 = phi i32 [ %1339, %b_254 ], [ %1339, %b_256 ], [ %1339, %b_257 ]
  %1378 = phi i32 [ %1358, %b_254 ], [ %1358, %b_256 ], [ %1358, %b_257 ]
  %1379 = phi i32 [ %1341, %b_254 ], [ %1341, %b_256 ], [ %1341, %b_257 ]
  %1380 = phi i32 [ %1342, %b_254 ], [ %1342, %b_256 ], [ %1342, %b_257 ]
  %1381 = phi i32 [ %1343, %b_254 ], [ %1343, %b_256 ], [ %1343, %b_257 ]
  %1382 = phi i32 [ %1344, %b_254 ], [ %1344, %b_256 ], [ %1344, %b_257 ]
  %1383 = phi i64 [ %1345, %b_254 ], [ %1345, %b_256 ], [ %1345, %b_257 ]
  %1384 = phi i32 [ 0, %b_254 ], [ 31, %b_256 ], [ %1399, %b_257 ]
  %1385 = add i32 %1366, 0
  call void @set_i32(i32 %1385, i32 %1384)
  %1386 = shl i32 %1384, 2
  %1387 = add i32 %1386, 1050780
  br label %b_258

b_256:                                            ; preds = %b_254
  %1388 = icmp ugt i32 %1358, 16777215
  %1389 = zext i1 %1388 to i32
  %1390 = icmp ne i32 %1389, 0
  br i1 %1390, label %b_255, label %b_257

b_257:                                            ; preds = %b_256
  %1391 = call i32 @llvm.ctlz.i32(i32 %1370, i1 false)
  %1392 = sub i32 6, %1391
  %1393 = and i32 %1392, 31
  %1394 = urem i32 %1393, 32
  %1395 = lshr i32 %1358, %1394
  %1396 = and i32 %1395, 1
  %1397 = shl i32 %1391, 1
  %1398 = sub i32 %1396, %1397
  %1399 = add i32 %1398, 62
  br label %b_255

b_258:                                            ; preds = %b_255
  br label %b_260

b_259:                                            ; preds = %b_268, %b_261
  %1400 = phi i32 [ %1384, %b_268 ], [ %1474, %b_261 ]
  %1401 = phi i32 [ %1387, %b_268 ], [ %1460, %b_261 ]
  %1402 = phi i32 [ %1433, %b_268 ], [ %1461, %b_261 ]
  %1403 = phi i32 [ %1377, %b_268 ], [ %1462, %b_261 ]
  %1404 = phi i32 [ %1378, %b_268 ], [ %1463, %b_261 ]
  %1405 = phi i32 [ %1379, %b_268 ], [ %1464, %b_261 ]
  %1406 = phi i32 [ %1380, %b_268 ], [ %1465, %b_261 ]
  %1407 = phi i32 [ %1436, %b_268 ], [ %1472, %b_261 ]
  %1408 = phi i32 [ %1382, %b_268 ], [ %1467, %b_261 ]
  %1409 = phi i64 [ %1383, %b_268 ], [ %1468, %b_261 ]
  %1410 = add i32 %1403, 24
  %1411 = add i32 %1410, 0
  call void @set_i32(i32 %1411, i32 %1401)
  %1412 = add i32 %1403, 12
  call void @set_i32(i32 %1412, i32 %1403)
  %1413 = add i32 %1403, 8
  call void @set_i32(i32 %1413, i32 %1403)
  br label %b_164

b_260:                                            ; preds = %b_258
  br label %b_262

b_261:                                            ; preds = %b_270
  %1414 = add i32 %1472, 0
  call void @set_i32(i32 %1414, i32 %1462)
  br label %b_259

b_262:                                            ; preds = %b_260
  br label %b_264

b_263:                                            ; preds = %b_271, %b_269
  %1415 = phi i32 [ %1449, %b_269 ], [ %1474, %b_271 ]
  %1416 = phi i32 [ %1449, %b_269 ], [ %1474, %b_271 ]
  %1417 = phi i32 [ %1433, %b_269 ], [ %1478, %b_271 ]
  %1418 = phi i32 [ %1377, %b_269 ], [ %1462, %b_271 ]
  %1419 = phi i32 [ %1378, %b_269 ], [ %1463, %b_271 ]
  %1420 = phi i32 [ %1379, %b_269 ], [ %1464, %b_271 ]
  %1421 = phi i32 [ %1380, %b_269 ], [ %1465, %b_271 ]
  %1422 = phi i32 [ %1436, %b_269 ], [ %1472, %b_271 ]
  %1423 = phi i32 [ %1382, %b_269 ], [ %1467, %b_271 ]
  %1424 = phi i64 [ %1383, %b_269 ], [ %1468, %b_271 ]
  %1425 = add i32 %1415, 8
  %1426 = call i32 @get_i32(i32 %1425)
  %1427 = add i32 %1426, 12
  call void @set_i32(i32 %1427, i32 %1418)
  %1428 = add i32 %1415, 8
  call void @set_i32(i32 %1428, i32 %1418)
  %1429 = add i32 %1418, 24
  %1430 = add i32 %1429, 0
  call void @set_i32(i32 %1430, i32 0)
  %1431 = add i32 %1418, 12
  call void @set_i32(i32 %1431, i32 %1415)
  %1432 = add i32 %1418, 8
  call void @set_i32(i32 %1432, i32 %1426)
  br label %b_164

b_264:                                            ; preds = %b_262
  %1433 = call i32 @get_i32(i32 1050512)
  %1434 = and i32 %1384, 31
  %1435 = urem i32 %1434, 32
  %1436 = shl i32 1, %1435
  %1437 = and i32 %1433, %1436
  %1438 = icmp ne i32 %1437, 0
  br i1 %1438, label %b_266, label %b_267

b_265:                                            ; preds = %b_266
  %1439 = lshr i32 %1384, 1
  %1440 = sub i32 25, %1439
  %1441 = and i32 %1440, 31
  %1442 = icmp eq i32 %1384, 31
  %1443 = zext i1 %1442 to i32
  %1444 = icmp ne i32 %1443, 0
  %1445 = select i1 %1444, i32 0, i32 %1441
  %1446 = urem i32 %1445, 32
  %1447 = shl i32 %1378, %1446
  br label %b_270

b_266:                                            ; preds = %b_264
  %1448 = add i32 %1387, 0
  %1449 = call i32 @get_i32(i32 %1448)
  %1450 = add i32 %1449, 4
  %1451 = add i32 %1450, 0
  %1452 = call i32 @get_i32(i32 %1451)
  %1453 = and i32 %1452, -8
  %1454 = icmp ne i32 %1453, %1378
  %1455 = zext i1 %1454 to i32
  %1456 = icmp ne i32 %1455, 0
  br i1 %1456, label %b_265, label %b_269

b_267:                                            ; preds = %b_264
  br label %b_268

b_268:                                            ; preds = %b_267
  %1457 = or i32 %1433, %1436
  call void @set_i32(i32 1050512, i32 %1457)
  %1458 = add i32 %1387, 0
  call void @set_i32(i32 %1458, i32 %1377)
  br label %b_259

b_269:                                            ; preds = %b_266
  br label %b_263

b_270:                                            ; preds = %b_272, %b_265
  %1459 = phi i32 [ %1384, %b_265 ], [ %1474, %b_272 ]
  %1460 = phi i32 [ %1449, %b_265 ], [ %1474, %b_272 ]
  %1461 = phi i32 [ %1447, %b_265 ], [ %1478, %b_272 ]
  %1462 = phi i32 [ %1377, %b_265 ], [ %1462, %b_272 ]
  %1463 = phi i32 [ %1378, %b_265 ], [ %1463, %b_272 ]
  %1464 = phi i32 [ %1379, %b_265 ], [ %1464, %b_272 ]
  %1465 = phi i32 [ %1380, %b_265 ], [ %1465, %b_272 ]
  %1466 = phi i32 [ %1436, %b_265 ], [ %1472, %b_272 ]
  %1467 = phi i32 [ %1382, %b_265 ], [ %1467, %b_272 ]
  %1468 = phi i64 [ %1383, %b_265 ], [ %1468, %b_272 ]
  %1469 = lshr i32 %1461, 29
  %1470 = and i32 %1469, 4
  %1471 = add i32 %1460, %1470
  %1472 = add i32 %1471, 16
  %1473 = add i32 %1472, 0
  %1474 = call i32 @get_i32(i32 %1473)
  %1475 = icmp eq i32 0, %1474
  %1476 = zext i1 %1475 to i32
  %1477 = icmp ne i32 %1476, 0
  br i1 %1477, label %b_261, label %b_272

b_271:                                            ; preds = %b_273
  br label %b_263

b_272:                                            ; preds = %b_270
  %1478 = shl i32 %1461, 1
  %1479 = add i32 %1474, 4
  %1480 = add i32 %1479, 0
  %1481 = call i32 @get_i32(i32 %1480)
  %1482 = and i32 %1481, -8
  %1483 = icmp ne i32 %1482, %1463
  %1484 = zext i1 %1483 to i32
  %1485 = icmp ne i32 %1484, 0
  br i1 %1485, label %b_270, label %b_273

b_273:                                            ; preds = %b_272
  br label %b_271

b_274:                                            ; preds = %b_253
  %1486 = call i32 @get_i32(i32 1050508)
  %1487 = urem i32 %1367, 32
  %1488 = shl i32 1, %1487
  %1489 = and i32 %1486, %1488
  %1490 = icmp ne i32 %1489, 0
  br i1 %1490, label %b_276, label %b_277

b_275:                                            ; preds = %b_278, %b_276
  %1491 = phi i32 [ %1369, %b_276 ], [ %1369, %b_278 ]
  %1492 = phi i32 [ %1488, %b_276 ], [ %1488, %b_278 ]
  %1493 = phi i32 [ %1486, %b_276 ], [ %1486, %b_278 ]
  %1494 = phi i32 [ %1339, %b_276 ], [ %1339, %b_278 ]
  %1495 = phi i32 [ %1358, %b_276 ], [ %1358, %b_278 ]
  %1496 = phi i32 [ %1341, %b_276 ], [ %1341, %b_278 ]
  %1497 = phi i32 [ %1342, %b_276 ], [ %1342, %b_278 ]
  %1498 = phi i32 [ %1343, %b_276 ], [ %1343, %b_278 ]
  %1499 = phi i32 [ %1344, %b_276 ], [ %1344, %b_278 ]
  %1500 = phi i64 [ %1345, %b_276 ], [ %1345, %b_278 ]
  %1501 = phi i32 [ %1507, %b_276 ], [ %1369, %b_278 ]
  %1502 = add i32 %1491, 8
  call void @set_i32(i32 %1502, i32 %1494)
  %1503 = add i32 %1501, 12
  call void @set_i32(i32 %1503, i32 %1494)
  %1504 = add i32 %1494, 12
  call void @set_i32(i32 %1504, i32 %1491)
  %1505 = add i32 %1494, 8
  call void @set_i32(i32 %1505, i32 %1501)
  br label %b_164

b_276:                                            ; preds = %b_274
  %1506 = add i32 %1369, 8
  %1507 = call i32 @get_i32(i32 %1506)
  br label %b_275

b_277:                                            ; preds = %b_274
  br label %b_278

b_278:                                            ; preds = %b_277
  %1508 = or i32 %1488, %1486
  call void @set_i32(i32 1050508, i32 %1508)
  br label %b_275

b_279:                                            ; preds = %b_164
  br label %b_1

b_280:                                            ; preds = %b_7
  %1509 = add i32 %40, 16
  call void @set_i32(i32 %1509, i32 %51)
  %1510 = add i32 %51, 24
  call void @set_i32(i32 %1510, i32 %40)
  br label %b_282

b_281:                                            ; preds = %b_7
  br label %b_282

b_282:                                            ; preds = %b_281, %b_280
  %1511 = phi i32 [ %51, %b_280 ], [ %51, %b_281 ]
  %1512 = phi i32 [ %40, %b_280 ], [ %40, %b_281 ]
  %1513 = phi i32 [ %41, %b_280 ], [ %41, %b_281 ]
  %1514 = phi i32 [ %42, %b_280 ], [ %42, %b_281 ]
  %1515 = phi i32 [ %43, %b_280 ], [ %43, %b_281 ]
  %1516 = phi i32 [ %44, %b_280 ], [ %44, %b_281 ]
  %1517 = phi i32 [ %45, %b_280 ], [ %45, %b_281 ]
  %1518 = phi i32 [ %46, %b_280 ], [ %46, %b_281 ]
  %1519 = phi i32 [ %47, %b_280 ], [ %47, %b_281 ]
  %1520 = phi i64 [ %48, %b_280 ], [ %48, %b_281 ]
  %1521 = add i32 %1513, 20
  %1522 = add i32 %1521, 0
  %1523 = call i32 @get_i32(i32 %1522)
  %1524 = icmp eq i32 0, %1523
  %1525 = zext i1 %1524 to i32
  %1526 = icmp ne i32 %1525, 0
  br i1 %1526, label %b_5, label %b_283

b_283:                                            ; preds = %b_282
  %1527 = add i32 %1512, 20
  %1528 = add i32 %1527, 0
  call void @set_i32(i32 %1528, i32 %1523)
  %1529 = add i32 %1523, 24
  call void @set_i32(i32 %1529, i32 %1512)
  br label %b_5

b_284:                                            ; preds = %b_5
  %1530 = icmp uge i32 %35, 16
  %1531 = zext i1 %1530 to i32
  %1532 = icmp ne i32 %1531, 0
  br i1 %1532, label %b_286, label %b_287

b_285:                                            ; preds = %b_291, %b_288
  %1533 = phi i32 [ %1565, %b_291 ], [ %1556, %b_288 ]
  %1534 = phi i32 [ %1566, %b_291 ], [ %30, %b_288 ]
  %1535 = phi i32 [ %1567, %b_291 ], [ %31, %b_288 ]
  %1536 = phi i32 [ %1568, %b_291 ], [ %32, %b_288 ]
  %1537 = phi i32 [ %1569, %b_291 ], [ %33, %b_288 ]
  %1538 = phi i32 [ %1570, %b_291 ], [ %34, %b_288 ]
  %1539 = phi i32 [ %1571, %b_291 ], [ %35, %b_288 ]
  %1540 = phi i32 [ %1572, %b_291 ], [ %36, %b_288 ]
  %1541 = phi i32 [ %1573, %b_291 ], [ %37, %b_288 ]
  %1542 = phi i64 [ %1574, %b_291 ], [ %38, %b_288 ]
  %1543 = add i32 %1535, 8
  ret i32 %1543

b_286:                                            ; preds = %b_284
  %1544 = or i32 %34, 3
  %1545 = add i32 %31, 4
  call void @set_i32(i32 %1545, i32 %1544)
  %1546 = add i32 %31, %34
  %1547 = or i32 %35, 1
  %1548 = add i32 %1546, 4
  call void @set_i32(i32 %1548, i32 %1547)
  %1549 = add i32 %1546, %35
  %1550 = add i32 %1549, 0
  call void @set_i32(i32 %1550, i32 %35)
  %1551 = call i32 @get_i32(i32 1050908)
  %1552 = icmp ne i32 %1551, 0
  br i1 %1552, label %b_289, label %b_290

b_287:                                            ; preds = %b_284
  br label %b_288

b_288:                                            ; preds = %b_287
  %1553 = add i32 %34, %35
  %1554 = or i32 %1553, 3
  %1555 = add i32 %31, 4
  call void @set_i32(i32 %1555, i32 %1554)
  %1556 = add i32 %1553, %31
  %1557 = add i32 %1556, 4
  %1558 = call i32 @get_i32(i32 %1557)
  %1559 = or i32 %1558, 1
  %1560 = add i32 %1556, 4
  call void @set_i32(i32 %1560, i32 %1559)
  br label %b_285

b_289:                                            ; preds = %b_286
  %1561 = lshr i32 %1551, 3
  %1562 = shl i32 %1561, 3
  %1563 = add i32 %1562, 1050516
  %1564 = call i32 @get_i32(i32 1050916)
  br label %b_292

b_290:                                            ; preds = %b_286
  br label %b_291

b_291:                                            ; preds = %b_293, %b_290
  %1565 = phi i32 [ %1581, %b_293 ], [ %1551, %b_290 ]
  %1566 = phi i32 [ %1582, %b_293 ], [ %30, %b_290 ]
  %1567 = phi i32 [ %1583, %b_293 ], [ %31, %b_290 ]
  %1568 = phi i32 [ %1584, %b_293 ], [ %1546, %b_290 ]
  %1569 = phi i32 [ %1591, %b_293 ], [ %33, %b_290 ]
  %1570 = phi i32 [ %1586, %b_293 ], [ %34, %b_290 ]
  %1571 = phi i32 [ %1587, %b_293 ], [ %35, %b_290 ]
  %1572 = phi i32 [ %1588, %b_293 ], [ %36, %b_290 ]
  %1573 = phi i32 [ %1589, %b_293 ], [ %37, %b_290 ]
  %1574 = phi i64 [ %1590, %b_293 ], [ %38, %b_290 ]
  call void @set_i32(i32 1050916, i32 %1568)
  call void @set_i32(i32 1050908, i32 %1571)
  br label %b_285

b_292:                                            ; preds = %b_289
  %1575 = call i32 @get_i32(i32 1050508)
  %1576 = and i32 %1561, 31
  %1577 = urem i32 %1576, 32
  %1578 = shl i32 1, %1577
  %1579 = and i32 %1575, %1578
  %1580 = icmp ne i32 %1579, 0
  br i1 %1580, label %b_294, label %b_295

b_293:                                            ; preds = %b_296, %b_294
  %1581 = phi i32 [ %1563, %b_294 ], [ %1563, %b_296 ]
  %1582 = phi i32 [ %1564, %b_294 ], [ %1564, %b_296 ]
  %1583 = phi i32 [ %31, %b_294 ], [ %31, %b_296 ]
  %1584 = phi i32 [ %1546, %b_294 ], [ %1546, %b_296 ]
  %1585 = phi i32 [ %1578, %b_294 ], [ %1578, %b_296 ]
  %1586 = phi i32 [ %1575, %b_294 ], [ %1575, %b_296 ]
  %1587 = phi i32 [ %35, %b_294 ], [ %35, %b_296 ]
  %1588 = phi i32 [ %36, %b_294 ], [ %36, %b_296 ]
  %1589 = phi i32 [ %37, %b_294 ], [ %37, %b_296 ]
  %1590 = phi i64 [ %38, %b_294 ], [ %38, %b_296 ]
  %1591 = phi i32 [ %1597, %b_294 ], [ %1563, %b_296 ]
  %1592 = add i32 %1581, 8
  call void @set_i32(i32 %1592, i32 %1582)
  %1593 = add i32 %1591, 12
  call void @set_i32(i32 %1593, i32 %1582)
  %1594 = add i32 %1582, 12
  call void @set_i32(i32 %1594, i32 %1581)
  %1595 = add i32 %1582, 8
  call void @set_i32(i32 %1595, i32 %1591)
  br label %b_291

b_294:                                            ; preds = %b_292
  %1596 = add i32 %1563, 8
  %1597 = call i32 @get_i32(i32 %1596)
  br label %b_293

b_295:                                            ; preds = %b_292
  br label %b_296

b_296:                                            ; preds = %b_295
  %1598 = or i32 %1578, %1575
  call void @set_i32(i32 1050508, i32 %1598)
  br label %b_293
}

; Function Attrs: nounwind
define void @wasmf_internal_2(i32 %0, i32 %1, i32 %2, i32 %3, i64 %4, i32 %5) #1 {
entry:
  %6 = add i32 %1, 20
  %7 = call i32 @get_i32(i32 %6)
  %8 = add i32 %1, 4
  %9 = call i32 @get_i32(i32 %8)
  %10 = add i32 %2, 8
  %11 = call i32 @get_i32(i32 %10)
  %12 = add i32 %9, %11
  %13 = add i32 %7, %12
  %14 = add i32 %2, 12
  %15 = call i32 @get_i32(i32 %14)
  %16 = add i32 %13, %15
  %17 = lshr i64 %4, 32
  %18 = trunc i64 %17 to i32
  %19 = xor i32 %13, %18
  %20 = call i32 @rotl_u32(i32 %19, i32 16)
  %21 = add i32 %20, -1150833019
  %22 = xor i32 %21, %7
  %23 = call i32 @rotl_u32(i32 %22, i32 20)
  %24 = add i32 %16, %23
  %25 = xor i32 %24, %20
  %26 = call i32 @rotl_u32(i32 %25, i32 24)
  %27 = add i32 %26, %21
  %28 = xor i32 %27, %23
  %29 = call i32 @rotl_u32(i32 %28, i32 25)
  %30 = add i32 %1, 16
  %31 = call i32 @get_i32(i32 %30)
  %32 = add i32 %1, 0
  %33 = call i32 @get_i32(i32 %32)
  %34 = add i32 %2, 0
  %35 = call i32 @get_i32(i32 %34)
  %36 = add i32 %33, %35
  %37 = add i32 %31, %36
  %38 = add i32 %2, 4
  %39 = call i32 @get_i32(i32 %38)
  %40 = add i32 %37, %39
  %41 = trunc i64 %4 to i32
  %42 = xor i32 %37, %41
  %43 = call i32 @rotl_u32(i32 %42, i32 16)
  %44 = add i32 %43, 1779033703
  %45 = xor i32 %44, %31
  %46 = call i32 @rotl_u32(i32 %45, i32 20)
  %47 = add i32 %40, %46
  %48 = add i32 %2, 32
  %49 = call i32 @get_i32(i32 %48)
  %50 = add i32 %47, %49
  %51 = add i32 %29, %50
  %52 = add i32 %2, 36
  %53 = call i32 @get_i32(i32 %52)
  %54 = add i32 %51, %53
  %55 = add i32 %1, 28
  %56 = call i32 @get_i32(i32 %55)
  %57 = add i32 %1, 12
  %58 = call i32 @get_i32(i32 %57)
  %59 = add i32 %2, 24
  %60 = call i32 @get_i32(i32 %59)
  %61 = add i32 %58, %60
  %62 = add i32 %56, %61
  %63 = add i32 %2, 28
  %64 = call i32 @get_i32(i32 %63)
  %65 = add i32 %62, %64
  %66 = and i32 %5, 255
  %67 = xor i32 %62, %66
  %68 = shl i32 %67, 16
  %69 = lshr i32 %62, 16
  %70 = or i32 %68, %69
  %71 = add i32 %70, -1521486534
  %72 = xor i32 %71, %56
  %73 = call i32 @rotl_u32(i32 %72, i32 20)
  %74 = add i32 %65, %73
  %75 = xor i32 %74, %70
  %76 = call i32 @rotl_u32(i32 %75, i32 24)
  %77 = xor i32 %51, %76
  %78 = call i32 @rotl_u32(i32 %77, i32 16)
  %79 = add i32 %1, 24
  %80 = call i32 @get_i32(i32 %79)
  %81 = add i32 %1, 8
  %82 = call i32 @get_i32(i32 %81)
  %83 = add i32 %2, 16
  %84 = call i32 @get_i32(i32 %83)
  %85 = add i32 %82, %84
  %86 = add i32 %80, %85
  %87 = add i32 %2, 20
  %88 = call i32 @get_i32(i32 %87)
  %89 = add i32 %86, %88
  %90 = and i32 %3, 255
  %91 = xor i32 %86, %90
  %92 = shl i32 %91, 16
  %93 = lshr i32 %86, 16
  %94 = or i32 %92, %93
  %95 = add i32 %94, 1013904242
  %96 = xor i32 %95, %80
  %97 = call i32 @rotl_u32(i32 %96, i32 20)
  %98 = add i32 %89, %97
  %99 = xor i32 %98, %94
  %100 = call i32 @rotl_u32(i32 %99, i32 24)
  %101 = add i32 %100, %95
  %102 = add i32 %78, %101
  %103 = xor i32 %29, %102
  %104 = call i32 @rotl_u32(i32 %103, i32 20)
  %105 = add i32 %54, %104
  %106 = add i32 %105, %11
  %107 = xor i32 %47, %43
  %108 = call i32 @rotl_u32(i32 %107, i32 24)
  %109 = add i32 %108, %44
  %110 = xor i32 %109, %46
  %111 = call i32 @rotl_u32(i32 %110, i32 25)
  %112 = add i32 %2, 56
  %113 = call i32 @get_i32(i32 %112)
  %114 = add i32 %74, %113
  %115 = add i32 %111, %114
  %116 = add i32 %2, 60
  %117 = call i32 @get_i32(i32 %116)
  %118 = add i32 %115, %117
  %119 = xor i32 %115, %100
  %120 = call i32 @rotl_u32(i32 %119, i32 16)
  %121 = add i32 %27, %120
  %122 = xor i32 %111, %121
  %123 = call i32 @rotl_u32(i32 %122, i32 20)
  %124 = add i32 %118, %123
  %125 = xor i32 %124, %120
  %126 = call i32 @rotl_u32(i32 %125, i32 24)
  %127 = add i32 %126, %121
  %128 = xor i32 %127, %123
  %129 = call i32 @rotl_u32(i32 %128, i32 25)
  %130 = add i32 %106, %129
  %131 = add i32 %130, %60
  %132 = xor i32 %101, %97
  %133 = call i32 @rotl_u32(i32 %132, i32 25)
  %134 = add i32 %2, 40
  %135 = call i32 @get_i32(i32 %134)
  %136 = add i32 %24, %135
  %137 = add i32 %133, %136
  %138 = add i32 %2, 44
  %139 = call i32 @get_i32(i32 %138)
  %140 = add i32 %137, %139
  %141 = xor i32 %137, %108
  %142 = call i32 @rotl_u32(i32 %141, i32 16)
  %143 = add i32 %71, %76
  %144 = add i32 %142, %143
  %145 = xor i32 %144, %133
  %146 = call i32 @rotl_u32(i32 %145, i32 20)
  %147 = add i32 %140, %146
  %148 = xor i32 %147, %142
  %149 = call i32 @rotl_u32(i32 %148, i32 24)
  %150 = xor i32 %130, %149
  %151 = call i32 @rotl_u32(i32 %150, i32 16)
  %152 = xor i32 %143, %73
  %153 = call i32 @rotl_u32(i32 %152, i32 25)
  %154 = add i32 %2, 48
  %155 = call i32 @get_i32(i32 %154)
  %156 = add i32 %98, %155
  %157 = add i32 %153, %156
  %158 = add i32 %2, 52
  %159 = call i32 @get_i32(i32 %158)
  %160 = add i32 %157, %159
  %161 = xor i32 %26, %157
  %162 = call i32 @rotl_u32(i32 %161, i32 16)
  %163 = add i32 %162, %109
  %164 = xor i32 %163, %153
  %165 = call i32 @rotl_u32(i32 %164, i32 20)
  %166 = add i32 %160, %165
  %167 = xor i32 %166, %162
  %168 = call i32 @rotl_u32(i32 %167, i32 24)
  %169 = add i32 %168, %163
  %170 = add i32 %151, %169
  %171 = xor i32 %129, %170
  %172 = call i32 @rotl_u32(i32 %171, i32 20)
  %173 = add i32 %131, %172
  %174 = add i32 %173, %39
  %175 = xor i32 %78, %105
  %176 = call i32 @rotl_u32(i32 %175, i32 24)
  %177 = add i32 %176, %102
  %178 = xor i32 %177, %104
  %179 = call i32 @rotl_u32(i32 %178, i32 25)
  %180 = add i32 %147, %15
  %181 = add i32 %179, %180
  %182 = add i32 %181, %135
  %183 = xor i32 %168, %181
  %184 = call i32 @rotl_u32(i32 %183, i32 16)
  %185 = add i32 %184, %127
  %186 = xor i32 %185, %179
  %187 = call i32 @rotl_u32(i32 %186, i32 20)
  %188 = add i32 %182, %187
  %189 = xor i32 %188, %184
  %190 = call i32 @rotl_u32(i32 %189, i32 24)
  %191 = add i32 %190, %185
  %192 = xor i32 %191, %187
  %193 = call i32 @rotl_u32(i32 %192, i32 25)
  %194 = add i32 %174, %193
  %195 = add i32 %194, %139
  %196 = xor i32 %169, %165
  %197 = call i32 @rotl_u32(i32 %196, i32 25)
  %198 = add i32 %84, %124
  %199 = add i32 %197, %198
  %200 = add i32 %199, %159
  %201 = xor i32 %176, %199
  %202 = call i32 @rotl_u32(i32 %201, i32 16)
  %203 = add i32 %144, %149
  %204 = add i32 %202, %203
  %205 = xor i32 %197, %204
  %206 = call i32 @rotl_u32(i32 %205, i32 20)
  %207 = add i32 %200, %206
  %208 = xor i32 %207, %202
  %209 = call i32 @rotl_u32(i32 %208, i32 24)
  %210 = xor i32 %194, %209
  %211 = call i32 @rotl_u32(i32 %210, i32 16)
  %212 = xor i32 %203, %146
  %213 = call i32 @rotl_u32(i32 %212, i32 25)
  %214 = add i32 %166, %64
  %215 = add i32 %213, %214
  %216 = add i32 %215, %35
  %217 = xor i32 %215, %126
  %218 = call i32 @rotl_u32(i32 %217, i32 16)
  %219 = add i32 %218, %177
  %220 = xor i32 %213, %219
  %221 = call i32 @rotl_u32(i32 %220, i32 20)
  %222 = add i32 %216, %221
  %223 = xor i32 %222, %218
  %224 = call i32 @rotl_u32(i32 %223, i32 24)
  %225 = add i32 %224, %219
  %226 = add i32 %211, %225
  %227 = xor i32 %193, %226
  %228 = call i32 @rotl_u32(i32 %227, i32 20)
  %229 = add i32 %195, %228
  %230 = add i32 %229, %15
  %231 = xor i32 %151, %173
  %232 = call i32 @rotl_u32(i32 %231, i32 24)
  %233 = add i32 %232, %170
  %234 = xor i32 %233, %172
  %235 = call i32 @rotl_u32(i32 %234, i32 25)
  %236 = add i32 %207, %117
  %237 = add i32 %235, %236
  %238 = add i32 %237, %49
  %239 = xor i32 %237, %224
  %240 = call i32 @rotl_u32(i32 %239, i32 16)
  %241 = add i32 %191, %240
  %242 = xor i32 %241, %235
  %243 = call i32 @rotl_u32(i32 %242, i32 20)
  %244 = add i32 %238, %243
  %245 = xor i32 %244, %240
  %246 = call i32 @rotl_u32(i32 %245, i32 24)
  %247 = add i32 %246, %241
  %248 = xor i32 %247, %243
  %249 = call i32 @rotl_u32(i32 %248, i32 25)
  %250 = add i32 %230, %249
  %251 = add i32 %250, %84
  %252 = xor i32 %225, %221
  %253 = call i32 @rotl_u32(i32 %252, i32 25)
  %254 = add i32 %188, %155
  %255 = add i32 %253, %254
  %256 = add i32 %255, %88
  %257 = xor i32 %255, %232
  %258 = call i32 @rotl_u32(i32 %257, i32 16)
  %259 = add i32 %209, %204
  %260 = add i32 %258, %259
  %261 = xor i32 %253, %260
  %262 = call i32 @rotl_u32(i32 %261, i32 20)
  %263 = add i32 %256, %262
  %264 = xor i32 %263, %258
  %265 = call i32 @rotl_u32(i32 %264, i32 24)
  %266 = xor i32 %250, %265
  %267 = call i32 @rotl_u32(i32 %266, i32 16)
  %268 = xor i32 %259, %206
  %269 = call i32 @rotl_u32(i32 %268, i32 25)
  %270 = add i32 %222, %53
  %271 = add i32 %269, %270
  %272 = add i32 %271, %113
  %273 = xor i32 %190, %271
  %274 = call i32 @rotl_u32(i32 %273, i32 16)
  %275 = add i32 %274, %233
  %276 = xor i32 %269, %275
  %277 = call i32 @rotl_u32(i32 %276, i32 20)
  %278 = add i32 %272, %277
  %279 = xor i32 %278, %274
  %280 = call i32 @rotl_u32(i32 %279, i32 24)
  %281 = add i32 %280, %275
  %282 = add i32 %267, %281
  %283 = xor i32 %249, %282
  %284 = call i32 @rotl_u32(i32 %283, i32 20)
  %285 = add i32 %251, %284
  %286 = add i32 %285, %60
  %287 = xor i32 %211, %229
  %288 = call i32 @rotl_u32(i32 %287, i32 24)
  %289 = add i32 %288, %226
  %290 = xor i32 %289, %228
  %291 = call i32 @rotl_u32(i32 %290, i32 25)
  %292 = add i32 %263, %135
  %293 = add i32 %291, %292
  %294 = add i32 %293, %155
  %295 = xor i32 %293, %280
  %296 = call i32 @rotl_u32(i32 %295, i32 16)
  %297 = add i32 %296, %247
  %298 = xor i32 %297, %291
  %299 = call i32 @rotl_u32(i32 %298, i32 20)
  %300 = add i32 %294, %299
  %301 = xor i32 %300, %296
  %302 = call i32 @rotl_u32(i32 %301, i32 24)
  %303 = add i32 %302, %297
  %304 = xor i32 %303, %299
  %305 = call i32 @rotl_u32(i32 %304, i32 25)
  %306 = add i32 %286, %305
  %307 = add i32 %306, %88
  %308 = xor i32 %281, %277
  %309 = call i32 @rotl_u32(i32 %308, i32 25)
  %310 = add i32 %244, %64
  %311 = add i32 %309, %310
  %312 = add i32 %311, %113
  %313 = xor i32 %311, %288
  %314 = call i32 @rotl_u32(i32 %313, i32 16)
  %315 = add i32 %265, %260
  %316 = add i32 %314, %315
  %317 = xor i32 %309, %316
  %318 = call i32 @rotl_u32(i32 %317, i32 20)
  %319 = add i32 %312, %318
  %320 = xor i32 %319, %314
  %321 = call i32 @rotl_u32(i32 %320, i32 24)
  %322 = xor i32 %306, %321
  %323 = call i32 @rotl_u32(i32 %322, i32 16)
  %324 = xor i32 %315, %262
  %325 = call i32 @rotl_u32(i32 %324, i32 25)
  %326 = add i32 %159, %278
  %327 = add i32 %325, %326
  %328 = add i32 %327, %11
  %329 = xor i32 %246, %327
  %330 = call i32 @rotl_u32(i32 %329, i32 16)
  %331 = add i32 %330, %289
  %332 = xor i32 %325, %331
  %333 = call i32 @rotl_u32(i32 %332, i32 20)
  %334 = add i32 %328, %333
  %335 = xor i32 %334, %330
  %336 = call i32 @rotl_u32(i32 %335, i32 24)
  %337 = add i32 %336, %331
  %338 = add i32 %323, %337
  %339 = xor i32 %305, %338
  %340 = call i32 @rotl_u32(i32 %339, i32 20)
  %341 = add i32 %307, %340
  %342 = add i32 %341, %135
  %343 = xor i32 %267, %285
  %344 = call i32 @rotl_u32(i32 %343, i32 24)
  %345 = add i32 %344, %282
  %346 = xor i32 %345, %284
  %347 = call i32 @rotl_u32(i32 %346, i32 25)
  %348 = add i32 %319, %49
  %349 = add i32 %347, %348
  %350 = add i32 %349, %39
  %351 = xor i32 %349, %336
  %352 = call i32 @rotl_u32(i32 %351, i32 16)
  %353 = add i32 %352, %303
  %354 = xor i32 %353, %347
  %355 = call i32 @rotl_u32(i32 %354, i32 20)
  %356 = add i32 %350, %355
  %357 = xor i32 %356, %352
  %358 = call i32 @rotl_u32(i32 %357, i32 24)
  %359 = add i32 %358, %353
  %360 = xor i32 %359, %355
  %361 = call i32 @rotl_u32(i32 %360, i32 25)
  %362 = add i32 %342, %361
  %363 = add i32 %362, %64
  %364 = xor i32 %337, %333
  %365 = call i32 @rotl_u32(i32 %364, i32 25)
  %366 = add i32 %300, %53
  %367 = add i32 %365, %366
  %368 = add i32 %367, %35
  %369 = xor i32 %367, %344
  %370 = call i32 @rotl_u32(i32 %369, i32 16)
  %371 = add i32 %321, %316
  %372 = add i32 %370, %371
  %373 = xor i32 %365, %372
  %374 = call i32 @rotl_u32(i32 %373, i32 20)
  %375 = add i32 %368, %374
  %376 = xor i32 %375, %370
  %377 = call i32 @rotl_u32(i32 %376, i32 24)
  %378 = xor i32 %362, %377
  %379 = call i32 @rotl_u32(i32 %378, i32 16)
  %380 = xor i32 %371, %318
  %381 = call i32 @rotl_u32(i32 %380, i32 25)
  %382 = add i32 %139, %334
  %383 = add i32 %381, %382
  %384 = add i32 %383, %117
  %385 = xor i32 %302, %383
  %386 = call i32 @rotl_u32(i32 %385, i32 16)
  %387 = add i32 %386, %345
  %388 = xor i32 %381, %387
  %389 = call i32 @rotl_u32(i32 %388, i32 20)
  %390 = add i32 %384, %389
  %391 = xor i32 %390, %386
  %392 = call i32 @rotl_u32(i32 %391, i32 24)
  %393 = add i32 %392, %387
  %394 = add i32 %379, %393
  %395 = xor i32 %361, %394
  %396 = call i32 @rotl_u32(i32 %395, i32 20)
  %397 = add i32 %363, %396
  %398 = add i32 %397, %84
  %399 = xor i32 %323, %341
  %400 = call i32 @rotl_u32(i32 %399, i32 24)
  %401 = add i32 %400, %338
  %402 = xor i32 %401, %340
  %403 = call i32 @rotl_u32(i32 %402, i32 25)
  %404 = add i32 %375, %155
  %405 = add i32 %403, %404
  %406 = add i32 %405, %53
  %407 = xor i32 %405, %392
  %408 = call i32 @rotl_u32(i32 %407, i32 16)
  %409 = add i32 %408, %359
  %410 = xor i32 %409, %403
  %411 = call i32 @rotl_u32(i32 %410, i32 20)
  %412 = add i32 %406, %411
  %413 = xor i32 %412, %408
  %414 = call i32 @rotl_u32(i32 %413, i32 24)
  %415 = add i32 %414, %409
  %416 = xor i32 %415, %411
  %417 = call i32 @rotl_u32(i32 %416, i32 25)
  %418 = add i32 %398, %417
  %419 = add i32 %418, %35
  %420 = xor i32 %393, %389
  %421 = call i32 @rotl_u32(i32 %420, i32 25)
  %422 = add i32 %159, %356
  %423 = add i32 %421, %422
  %424 = add i32 %423, %117
  %425 = xor i32 %423, %400
  %426 = call i32 @rotl_u32(i32 %425, i32 16)
  %427 = add i32 %377, %372
  %428 = add i32 %426, %427
  %429 = xor i32 %421, %428
  %430 = call i32 @rotl_u32(i32 %429, i32 20)
  %431 = add i32 %424, %430
  %432 = xor i32 %431, %426
  %433 = call i32 @rotl_u32(i32 %432, i32 24)
  %434 = xor i32 %418, %433
  %435 = call i32 @rotl_u32(i32 %434, i32 16)
  %436 = xor i32 %427, %374
  %437 = call i32 @rotl_u32(i32 %436, i32 25)
  %438 = add i32 %113, %390
  %439 = add i32 %437, %438
  %440 = add i32 %439, %15
  %441 = xor i32 %358, %439
  %442 = call i32 @rotl_u32(i32 %441, i32 16)
  %443 = add i32 %442, %401
  %444 = xor i32 %437, %443
  %445 = call i32 @rotl_u32(i32 %444, i32 20)
  %446 = add i32 %440, %445
  %447 = xor i32 %446, %442
  %448 = call i32 @rotl_u32(i32 %447, i32 24)
  %449 = add i32 %448, %443
  %450 = add i32 %435, %449
  %451 = xor i32 %417, %450
  %452 = call i32 @rotl_u32(i32 %451, i32 20)
  %453 = add i32 %419, %452
  %454 = add i32 %453, %155
  %455 = xor i32 %379, %397
  %456 = call i32 @rotl_u32(i32 %455, i32 24)
  %457 = add i32 %456, %394
  %458 = xor i32 %457, %396
  %459 = call i32 @rotl_u32(i32 %458, i32 25)
  %460 = add i32 %431, %39
  %461 = add i32 %459, %460
  %462 = add i32 %461, %60
  %463 = xor i32 %461, %448
  %464 = call i32 @rotl_u32(i32 %463, i32 16)
  %465 = add i32 %464, %415
  %466 = xor i32 %465, %459
  %467 = call i32 @rotl_u32(i32 %466, i32 20)
  %468 = add i32 %462, %467
  %469 = xor i32 %468, %464
  %470 = call i32 @rotl_u32(i32 %469, i32 24)
  %471 = add i32 %470, %465
  %472 = xor i32 %471, %467
  %473 = call i32 @rotl_u32(i32 %472, i32 25)
  %474 = add i32 %454, %473
  %475 = add i32 %474, %159
  %476 = xor i32 %449, %445
  %477 = call i32 @rotl_u32(i32 %476, i32 25)
  %478 = add i32 %139, %412
  %479 = add i32 %477, %478
  %480 = add i32 %479, %11
  %481 = xor i32 %479, %456
  %482 = call i32 @rotl_u32(i32 %481, i32 16)
  %483 = add i32 %433, %428
  %484 = add i32 %482, %483
  %485 = xor i32 %477, %484
  %486 = call i32 @rotl_u32(i32 %485, i32 20)
  %487 = add i32 %480, %486
  %488 = xor i32 %487, %482
  %489 = call i32 @rotl_u32(i32 %488, i32 24)
  %490 = xor i32 %474, %489
  %491 = call i32 @rotl_u32(i32 %490, i32 16)
  %492 = xor i32 %483, %430
  %493 = call i32 @rotl_u32(i32 %492, i32 25)
  %494 = add i32 %88, %446
  %495 = add i32 %493, %494
  %496 = add i32 %495, %49
  %497 = xor i32 %414, %495
  %498 = call i32 @rotl_u32(i32 %497, i32 16)
  %499 = add i32 %498, %457
  %500 = xor i32 %493, %499
  %501 = call i32 @rotl_u32(i32 %500, i32 20)
  %502 = add i32 %496, %501
  %503 = xor i32 %502, %498
  %504 = call i32 @rotl_u32(i32 %503, i32 24)
  %505 = add i32 %504, %499
  %506 = add i32 %491, %505
  %507 = xor i32 %473, %506
  %508 = call i32 @rotl_u32(i32 %507, i32 20)
  %509 = add i32 %475, %508
  %510 = add i32 %509, %64
  %511 = xor i32 %435, %453
  %512 = call i32 @rotl_u32(i32 %511, i32 24)
  %513 = add i32 %512, %450
  %514 = xor i32 %513, %452
  %515 = call i32 @rotl_u32(i32 %514, i32 25)
  %516 = add i32 %487, %53
  %517 = add i32 %515, %516
  %518 = add i32 %517, %139
  %519 = xor i32 %517, %504
  %520 = call i32 @rotl_u32(i32 %519, i32 16)
  %521 = add i32 %520, %471
  %522 = xor i32 %521, %515
  %523 = call i32 @rotl_u32(i32 %522, i32 20)
  %524 = add i32 %518, %523
  %525 = xor i32 %524, %520
  %526 = call i32 @rotl_u32(i32 %525, i32 24)
  %527 = add i32 %526, %521
  %528 = xor i32 %527, %523
  %529 = call i32 @rotl_u32(i32 %528, i32 25)
  %530 = add i32 %510, %529
  %531 = add i32 %530, %11
  %532 = xor i32 %505, %501
  %533 = call i32 @rotl_u32(i32 %532, i32 25)
  %534 = add i32 %113, %468
  %535 = add i32 %533, %534
  %536 = add i32 %535, %49
  %537 = xor i32 %535, %512
  %538 = call i32 @rotl_u32(i32 %537, i32 16)
  %539 = add i32 %489, %484
  %540 = add i32 %538, %539
  %541 = xor i32 %533, %540
  %542 = call i32 @rotl_u32(i32 %541, i32 20)
  %543 = add i32 %536, %542
  %544 = xor i32 %543, %538
  %545 = call i32 @rotl_u32(i32 %544, i32 24)
  %546 = xor i32 %530, %545
  %547 = call i32 @rotl_u32(i32 %546, i32 16)
  %548 = xor i32 %539, %486
  %549 = call i32 @rotl_u32(i32 %548, i32 25)
  %550 = add i32 %117, %502
  %551 = add i32 %549, %550
  %552 = add i32 %551, %135
  %553 = xor i32 %470, %551
  %554 = call i32 @rotl_u32(i32 %553, i32 16)
  %555 = add i32 %554, %513
  %556 = xor i32 %549, %555
  %557 = call i32 @rotl_u32(i32 %556, i32 20)
  %558 = add i32 %552, %557
  %559 = xor i32 %558, %554
  %560 = call i32 @rotl_u32(i32 %559, i32 24)
  %561 = add i32 %560, %555
  %562 = add i32 %547, %561
  %563 = xor i32 %529, %562
  %564 = call i32 @rotl_u32(i32 %563, i32 20)
  %565 = add i32 %531, %564
  %566 = add i32 %565, %53
  %567 = xor i32 %491, %509
  %568 = call i32 @rotl_u32(i32 %567, i32 24)
  %569 = add i32 %568, %506
  %570 = xor i32 %569, %508
  %571 = call i32 @rotl_u32(i32 %570, i32 25)
  %572 = add i32 %543, %60
  %573 = add i32 %571, %572
  %574 = add i32 %573, %84
  %575 = xor i32 %573, %560
  %576 = call i32 @rotl_u32(i32 %575, i32 16)
  %577 = add i32 %576, %527
  %578 = xor i32 %577, %571
  %579 = call i32 @rotl_u32(i32 %578, i32 20)
  %580 = add i32 %574, %579
  %581 = xor i32 %580, %576
  %582 = call i32 @rotl_u32(i32 %581, i32 24)
  %583 = add i32 %582, %577
  %584 = xor i32 %583, %579
  %585 = call i32 @rotl_u32(i32 %584, i32 25)
  %586 = add i32 %566, %585
  %587 = add i32 %586, %113
  %588 = xor i32 %561, %557
  %589 = call i32 @rotl_u32(i32 %588, i32 25)
  %590 = add i32 %88, %524
  %591 = add i32 %589, %590
  %592 = add i32 %591, %15
  %593 = xor i32 %591, %568
  %594 = call i32 @rotl_u32(i32 %593, i32 16)
  %595 = add i32 %545, %540
  %596 = add i32 %594, %595
  %597 = xor i32 %589, %596
  %598 = call i32 @rotl_u32(i32 %597, i32 20)
  %599 = add i32 %592, %598
  %600 = xor i32 %599, %594
  %601 = call i32 @rotl_u32(i32 %600, i32 24)
  %602 = xor i32 %586, %601
  %603 = call i32 @rotl_u32(i32 %602, i32 16)
  %604 = xor i32 %595, %542
  %605 = call i32 @rotl_u32(i32 %604, i32 25)
  %606 = add i32 %558, %35
  %607 = add i32 %605, %606
  %608 = add i32 %607, %39
  %609 = xor i32 %526, %607
  %610 = call i32 @rotl_u32(i32 %609, i32 16)
  %611 = add i32 %610, %569
  %612 = xor i32 %605, %611
  %613 = call i32 @rotl_u32(i32 %612, i32 20)
  %614 = add i32 %608, %613
  %615 = xor i32 %614, %610
  %616 = call i32 @rotl_u32(i32 %615, i32 24)
  %617 = add i32 %616, %611
  %618 = add i32 %603, %617
  %619 = xor i32 %585, %618
  %620 = call i32 @rotl_u32(i32 %619, i32 20)
  %621 = add i32 %587, %620
  %622 = add i32 %621, %159
  %623 = xor i32 %547, %565
  %624 = call i32 @rotl_u32(i32 %623, i32 24)
  %625 = add i32 %624, %562
  %626 = xor i32 %625, %564
  %627 = call i32 @rotl_u32(i32 %626, i32 25)
  %628 = add i32 %599, %139
  %629 = add i32 %627, %628
  %630 = add i32 %629, %88
  %631 = xor i32 %629, %616
  %632 = call i32 @rotl_u32(i32 %631, i32 16)
  %633 = add i32 %632, %583
  %634 = xor i32 %633, %627
  %635 = call i32 @rotl_u32(i32 %634, i32 20)
  %636 = add i32 %630, %635
  %637 = xor i32 %636, %632
  %638 = call i32 @rotl_u32(i32 %637, i32 24)
  %639 = add i32 %638, %633
  %640 = xor i32 %639, %635
  %641 = call i32 @rotl_u32(i32 %640, i32 25)
  %642 = add i32 %622, %641
  %643 = add i32 %642, %15
  %644 = xor i32 %617, %613
  %645 = call i32 @rotl_u32(i32 %644, i32 25)
  %646 = add i32 %117, %580
  %647 = add i32 %645, %646
  %648 = add i32 %647, %39
  %649 = xor i32 %647, %624
  %650 = call i32 @rotl_u32(i32 %649, i32 16)
  %651 = add i32 %601, %596
  %652 = add i32 %650, %651
  %653 = xor i32 %645, %652
  %654 = call i32 @rotl_u32(i32 %653, i32 20)
  %655 = add i32 %648, %654
  %656 = xor i32 %655, %650
  %657 = call i32 @rotl_u32(i32 %656, i32 24)
  %658 = xor i32 %642, %657
  %659 = call i32 @rotl_u32(i32 %658, i32 16)
  %660 = xor i32 %651, %598
  %661 = call i32 @rotl_u32(i32 %660, i32 25)
  %662 = add i32 %614, %49
  %663 = add i32 %661, %662
  %664 = add i32 %663, %155
  %665 = xor i32 %582, %663
  %666 = call i32 @rotl_u32(i32 %665, i32 16)
  %667 = add i32 %666, %625
  %668 = xor i32 %661, %667
  %669 = call i32 @rotl_u32(i32 %668, i32 20)
  %670 = add i32 %664, %669
  %671 = xor i32 %670, %666
  %672 = call i32 @rotl_u32(i32 %671, i32 24)
  %673 = add i32 %672, %667
  %674 = add i32 %659, %673
  %675 = xor i32 %641, %674
  %676 = call i32 @rotl_u32(i32 %675, i32 20)
  %677 = add i32 %643, %676
  %678 = add i32 %677, %139
  %679 = xor i32 %603, %621
  %680 = call i32 @rotl_u32(i32 %679, i32 24)
  %681 = add i32 %680, %618
  %682 = xor i32 %681, %620
  %683 = call i32 @rotl_u32(i32 %682, i32 25)
  %684 = add i32 %84, %655
  %685 = add i32 %683, %684
  %686 = add i32 %685, %64
  %687 = xor i32 %685, %672
  %688 = call i32 @rotl_u32(i32 %687, i32 16)
  %689 = add i32 %688, %639
  %690 = xor i32 %689, %683
  %691 = call i32 @rotl_u32(i32 %690, i32 20)
  %692 = add i32 %686, %691
  %693 = xor i32 %692, %688
  %694 = call i32 @rotl_u32(i32 %693, i32 24)
  %695 = add i32 %694, %689
  %696 = xor i32 %695, %691
  %697 = call i32 @rotl_u32(i32 %696, i32 25)
  %698 = add i32 %678, %697
  %699 = add i32 %698, %117
  %700 = xor i32 %673, %669
  %701 = call i32 @rotl_u32(i32 %700, i32 25)
  %702 = add i32 %35, %636
  %703 = add i32 %701, %702
  %704 = add i32 %703, %135
  %705 = xor i32 %703, %680
  %706 = call i32 @rotl_u32(i32 %705, i32 16)
  %707 = add i32 %657, %652
  %708 = add i32 %706, %707
  %709 = xor i32 %701, %708
  %710 = call i32 @rotl_u32(i32 %709, i32 20)
  %711 = add i32 %704, %710
  %712 = xor i32 %711, %706
  %713 = call i32 @rotl_u32(i32 %712, i32 24)
  %714 = xor i32 %698, %713
  %715 = call i32 @rotl_u32(i32 %714, i32 16)
  %716 = xor i32 %654, %707
  %717 = call i32 @rotl_u32(i32 %716, i32 25)
  %718 = add i32 %670, %11
  %719 = add i32 %717, %718
  %720 = add i32 %719, %60
  %721 = xor i32 %638, %719
  %722 = call i32 @rotl_u32(i32 %721, i32 16)
  %723 = add i32 %722, %681
  %724 = xor i32 %717, %723
  %725 = call i32 @rotl_u32(i32 %724, i32 20)
  %726 = add i32 %720, %725
  %727 = xor i32 %726, %722
  %728 = call i32 @rotl_u32(i32 %727, i32 24)
  %729 = add i32 %728, %723
  %730 = add i32 %715, %729
  %731 = xor i32 %697, %730
  %732 = call i32 @rotl_u32(i32 %731, i32 20)
  %733 = add i32 %699, %732
  %734 = add i32 %733, %113
  %735 = xor i32 %659, %677
  %736 = call i32 @rotl_u32(i32 %735, i32 24)
  %737 = add i32 %736, %674
  %738 = xor i32 %737, %676
  %739 = call i32 @rotl_u32(i32 %738, i32 25)
  %740 = add i32 %88, %711
  %741 = add i32 %739, %740
  %742 = add i32 %35, %741
  %743 = xor i32 %741, %728
  %744 = call i32 @rotl_u32(i32 %743, i32 16)
  %745 = add i32 %744, %695
  %746 = xor i32 %745, %739
  %747 = call i32 @rotl_u32(i32 %746, i32 20)
  %748 = add i32 %742, %747
  %749 = xor i32 %748, %744
  %750 = call i32 @rotl_u32(i32 %749, i32 24)
  %751 = add i32 %750, %745
  %752 = xor i32 %751, %747
  %753 = call i32 @rotl_u32(i32 %752, i32 25)
  %754 = add i32 %734, %753
  %755 = add i32 %754, %135
  %756 = xor i32 %729, %725
  %757 = call i32 @rotl_u32(i32 %756, i32 25)
  %758 = add i32 %692, %49
  %759 = add i32 %757, %758
  %760 = add i32 %60, %759
  %761 = xor i32 %736, %759
  %762 = call i32 @rotl_u32(i32 %761, i32 16)
  %763 = add i32 %708, %713
  %764 = add i32 %762, %763
  %765 = xor i32 %757, %764
  %766 = call i32 @rotl_u32(i32 %765, i32 20)
  %767 = add i32 %760, %766
  %768 = xor i32 %767, %762
  %769 = call i32 @rotl_u32(i32 %768, i32 24)
  %770 = xor i32 %754, %769
  %771 = call i32 @rotl_u32(i32 %770, i32 16)
  %772 = xor i32 %710, %763
  %773 = call i32 @rotl_u32(i32 %772, i32 25)
  %774 = add i32 %726, %39
  %775 = add i32 %773, %774
  %776 = add i32 %775, %53
  %777 = xor i32 %694, %775
  %778 = call i32 @rotl_u32(i32 %777, i32 16)
  %779 = add i32 %737, %778
  %780 = xor i32 %779, %773
  %781 = call i32 @rotl_u32(i32 %780, i32 20)
  %782 = add i32 %776, %781
  %783 = xor i32 %782, %778
  %784 = call i32 @rotl_u32(i32 %783, i32 24)
  %785 = add i32 %784, %779
  %786 = add i32 %771, %785
  %787 = xor i32 %786, %753
  %788 = call i32 @rotl_u32(i32 %787, i32 20)
  %789 = add i32 %755, %788
  %790 = xor i32 %789, %771
  %791 = call i32 @rotl_u32(i32 %790, i32 24)
  %792 = xor i32 %791, %56
  %793 = add i32 %0, 60
  call void @set_i32(i32 %793, i32 %792)
  %794 = xor i32 %715, %733
  %795 = call i32 @rotl_u32(i32 %794, i32 24)
  %796 = add i32 %795, %730
  %797 = xor i32 %796, %732
  %798 = call i32 @rotl_u32(i32 %797, i32 25)
  %799 = add i32 %767, %64
  %800 = add i32 %798, %799
  %801 = add i32 %159, %800
  %802 = xor i32 %784, %800
  %803 = call i32 @rotl_u32(i32 %802, i32 16)
  %804 = add i32 %803, %751
  %805 = xor i32 %804, %798
  %806 = call i32 @rotl_u32(i32 %805, i32 20)
  %807 = add i32 %801, %806
  %808 = xor i32 %807, %803
  %809 = call i32 @rotl_u32(i32 %808, i32 24)
  %810 = xor i32 %80, %809
  %811 = add i32 %0, 56
  call void @set_i32(i32 %811, i32 %810)
  %812 = add i32 %769, %764
  %813 = xor i32 %812, %766
  %814 = call i32 @rotl_u32(i32 %813, i32 25)
  %815 = add i32 %15, %782
  %816 = add i32 %814, %815
  %817 = add i32 %84, %816
  %818 = xor i32 %750, %816
  %819 = call i32 @rotl_u32(i32 %818, i32 16)
  %820 = add i32 %819, %796
  %821 = xor i32 %820, %814
  %822 = call i32 @rotl_u32(i32 %821, i32 20)
  %823 = add i32 %817, %822
  %824 = xor i32 %823, %819
  %825 = call i32 @rotl_u32(i32 %824, i32 24)
  %826 = xor i32 %7, %825
  %827 = add i32 %0, 52
  call void @set_i32(i32 %827, i32 %826)
  %828 = xor i32 %781, %785
  %829 = call i32 @rotl_u32(i32 %828, i32 25)
  %830 = add i32 %748, %11
  %831 = add i32 %829, %830
  %832 = add i32 %155, %831
  %833 = xor i32 %831, %795
  %834 = call i32 @rotl_u32(i32 %833, i32 16)
  %835 = add i32 %834, %812
  %836 = xor i32 %829, %835
  %837 = call i32 @rotl_u32(i32 %836, i32 20)
  %838 = add i32 %832, %837
  %839 = xor i32 %838, %834
  %840 = call i32 @rotl_u32(i32 %839, i32 24)
  %841 = xor i32 %31, %840
  %842 = add i32 %0, 48
  call void @set_i32(i32 %842, i32 %841)
  %843 = add i32 %791, %786
  %844 = xor i32 %82, %843
  %845 = add i32 %0, 40
  call void @set_i32(i32 %845, i32 %844)
  %846 = add i32 %809, %804
  %847 = xor i32 %9, %846
  %848 = add i32 %0, 36
  call void @set_i32(i32 %848, i32 %847)
  %849 = xor i32 %823, %843
  %850 = add i32 %0, 8
  call void @set_i32(i32 %850, i32 %849)
  %851 = xor i32 %838, %846
  %852 = add i32 %0, 4
  call void @set_i32(i32 %852, i32 %851)
  %853 = add i32 %840, %835
  %854 = xor i32 %58, %853
  %855 = add i32 %0, 44
  call void @set_i32(i32 %855, i32 %854)
  %856 = add i32 %825, %820
  %857 = xor i32 %33, %856
  %858 = add i32 %0, 32
  call void @set_i32(i32 %858, i32 %857)
  %859 = xor i32 %853, %807
  %860 = add i32 %0, 12
  call void @set_i32(i32 %860, i32 %859)
  %861 = xor i32 %789, %856
  %862 = add i32 %0, 0
  call void @set_i32(i32 %862, i32 %861)
  %863 = xor i32 %788, %843
  %864 = call i32 @rotl_u32(i32 %863, i32 25)
  %865 = xor i32 %864, %825
  %866 = add i32 %0, 20
  call void @set_i32(i32 %866, i32 %865)
  %867 = xor i32 %846, %806
  %868 = call i32 @rotl_u32(i32 %867, i32 25)
  %869 = xor i32 %868, %840
  %870 = add i32 %0, 16
  call void @set_i32(i32 %870, i32 %869)
  %871 = xor i32 %822, %856
  %872 = call i32 @rotl_u32(i32 %871, i32 25)
  %873 = xor i32 %872, %791
  %874 = add i32 %0, 28
  call void @set_i32(i32 %874, i32 %873)
  %875 = xor i32 %853, %837
  %876 = call i32 @rotl_u32(i32 %875, i32 25)
  %877 = xor i32 %876, %809
  %878 = add i32 %0, 24
  call void @set_i32(i32 %878, i32 %877)
  br label %exit

exit:                                             ; preds = %entry
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_3(i32 %0, i32 %1, i32 %2, i64 %3, i32 %4) #1 {
entry:
  %5 = add i32 %0, 20
  %6 = call i32 @get_i32(i32 %5)
  %7 = add i32 %1, 8
  %8 = call i32 @get_i32(i32 %7)
  %9 = add i32 %0, 4
  %10 = call i32 @get_i32(i32 %9)
  %11 = add i32 %8, %10
  %12 = add i32 %6, %11
  %13 = add i32 %1, 12
  %14 = call i32 @get_i32(i32 %13)
  %15 = add i32 %12, %14
  %16 = lshr i64 %3, 32
  %17 = trunc i64 %16 to i32
  %18 = xor i32 %12, %17
  %19 = call i32 @rotl_u32(i32 %18, i32 16)
  %20 = add i32 %19, -1150833019
  %21 = xor i32 %6, %20
  %22 = call i32 @rotl_u32(i32 %21, i32 20)
  %23 = add i32 %15, %22
  %24 = xor i32 %23, %19
  %25 = call i32 @rotl_u32(i32 %24, i32 24)
  %26 = add i32 %25, %20
  %27 = xor i32 %26, %22
  %28 = call i32 @rotl_u32(i32 %27, i32 25)
  %29 = add i32 %0, 16
  %30 = call i32 @get_i32(i32 %29)
  %31 = add i32 %1, 0
  %32 = call i32 @get_i32(i32 %31)
  %33 = add i32 %0, 0
  %34 = call i32 @get_i32(i32 %33)
  %35 = add i32 %32, %34
  %36 = add i32 %30, %35
  %37 = add i32 %1, 4
  %38 = call i32 @get_i32(i32 %37)
  %39 = add i32 %36, %38
  %40 = trunc i64 %3 to i32
  %41 = xor i32 %36, %40
  %42 = call i32 @rotl_u32(i32 %41, i32 16)
  %43 = add i32 %42, 1779033703
  %44 = xor i32 %43, %30
  %45 = call i32 @rotl_u32(i32 %44, i32 20)
  %46 = add i32 %39, %45
  %47 = add i32 %1, 32
  %48 = call i32 @get_i32(i32 %47)
  %49 = add i32 %46, %48
  %50 = add i32 %28, %49
  %51 = add i32 %1, 36
  %52 = call i32 @get_i32(i32 %51)
  %53 = add i32 %50, %52
  %54 = add i32 %0, 28
  %55 = call i32 @get_i32(i32 %54)
  %56 = add i32 %1, 24
  %57 = call i32 @get_i32(i32 %56)
  %58 = add i32 %0, 12
  %59 = call i32 @get_i32(i32 %58)
  %60 = add i32 %57, %59
  %61 = add i32 %55, %60
  %62 = add i32 %1, 28
  %63 = call i32 @get_i32(i32 %62)
  %64 = add i32 %61, %63
  %65 = and i32 %4, 255
  %66 = xor i32 %61, %65
  %67 = shl i32 %66, 16
  %68 = lshr i32 %61, 16
  %69 = or i32 %67, %68
  %70 = add i32 %69, -1521486534
  %71 = xor i32 %55, %70
  %72 = call i32 @rotl_u32(i32 %71, i32 20)
  %73 = add i32 %64, %72
  %74 = xor i32 %73, %69
  %75 = call i32 @rotl_u32(i32 %74, i32 24)
  %76 = xor i32 %50, %75
  %77 = call i32 @rotl_u32(i32 %76, i32 16)
  %78 = add i32 %0, 24
  %79 = call i32 @get_i32(i32 %78)
  %80 = add i32 %1, 16
  %81 = call i32 @get_i32(i32 %80)
  %82 = add i32 %0, 8
  %83 = call i32 @get_i32(i32 %82)
  %84 = add i32 %81, %83
  %85 = add i32 %79, %84
  %86 = add i32 %1, 20
  %87 = call i32 @get_i32(i32 %86)
  %88 = add i32 %85, %87
  %89 = and i32 %2, 255
  %90 = xor i32 %85, %89
  %91 = shl i32 %90, 16
  %92 = lshr i32 %85, 16
  %93 = or i32 %91, %92
  %94 = add i32 %93, 1013904242
  %95 = xor i32 %94, %79
  %96 = call i32 @rotl_u32(i32 %95, i32 20)
  %97 = add i32 %88, %96
  %98 = xor i32 %97, %93
  %99 = call i32 @rotl_u32(i32 %98, i32 24)
  %100 = add i32 %99, %94
  %101 = add i32 %77, %100
  %102 = xor i32 %28, %101
  %103 = call i32 @rotl_u32(i32 %102, i32 20)
  %104 = add i32 %53, %103
  %105 = add i32 %104, %8
  %106 = xor i32 %46, %42
  %107 = call i32 @rotl_u32(i32 %106, i32 24)
  %108 = add i32 %107, %43
  %109 = xor i32 %108, %45
  %110 = call i32 @rotl_u32(i32 %109, i32 25)
  %111 = add i32 %1, 56
  %112 = call i32 @get_i32(i32 %111)
  %113 = add i32 %73, %112
  %114 = add i32 %110, %113
  %115 = add i32 %1, 60
  %116 = call i32 @get_i32(i32 %115)
  %117 = add i32 %114, %116
  %118 = xor i32 %114, %99
  %119 = call i32 @rotl_u32(i32 %118, i32 16)
  %120 = add i32 %26, %119
  %121 = xor i32 %110, %120
  %122 = call i32 @rotl_u32(i32 %121, i32 20)
  %123 = add i32 %117, %122
  %124 = xor i32 %123, %119
  %125 = call i32 @rotl_u32(i32 %124, i32 24)
  %126 = add i32 %125, %120
  %127 = xor i32 %126, %122
  %128 = call i32 @rotl_u32(i32 %127, i32 25)
  %129 = add i32 %105, %128
  %130 = add i32 %129, %57
  %131 = xor i32 %100, %96
  %132 = call i32 @rotl_u32(i32 %131, i32 25)
  %133 = add i32 %1, 40
  %134 = call i32 @get_i32(i32 %133)
  %135 = add i32 %23, %134
  %136 = add i32 %132, %135
  %137 = add i32 %1, 44
  %138 = call i32 @get_i32(i32 %137)
  %139 = add i32 %136, %138
  %140 = xor i32 %136, %107
  %141 = call i32 @rotl_u32(i32 %140, i32 16)
  %142 = add i32 %70, %75
  %143 = add i32 %141, %142
  %144 = xor i32 %143, %132
  %145 = call i32 @rotl_u32(i32 %144, i32 20)
  %146 = add i32 %139, %145
  %147 = xor i32 %146, %141
  %148 = call i32 @rotl_u32(i32 %147, i32 24)
  %149 = xor i32 %129, %148
  %150 = call i32 @rotl_u32(i32 %149, i32 16)
  %151 = xor i32 %142, %72
  %152 = call i32 @rotl_u32(i32 %151, i32 25)
  %153 = add i32 %1, 48
  %154 = call i32 @get_i32(i32 %153)
  %155 = add i32 %97, %154
  %156 = add i32 %152, %155
  %157 = add i32 %1, 52
  %158 = call i32 @get_i32(i32 %157)
  %159 = add i32 %156, %158
  %160 = xor i32 %25, %156
  %161 = call i32 @rotl_u32(i32 %160, i32 16)
  %162 = add i32 %161, %108
  %163 = xor i32 %162, %152
  %164 = call i32 @rotl_u32(i32 %163, i32 20)
  %165 = add i32 %159, %164
  %166 = xor i32 %165, %161
  %167 = call i32 @rotl_u32(i32 %166, i32 24)
  %168 = add i32 %167, %162
  %169 = add i32 %150, %168
  %170 = xor i32 %128, %169
  %171 = call i32 @rotl_u32(i32 %170, i32 20)
  %172 = add i32 %130, %171
  %173 = add i32 %172, %38
  %174 = xor i32 %77, %104
  %175 = call i32 @rotl_u32(i32 %174, i32 24)
  %176 = add i32 %175, %101
  %177 = xor i32 %176, %103
  %178 = call i32 @rotl_u32(i32 %177, i32 25)
  %179 = add i32 %146, %14
  %180 = add i32 %178, %179
  %181 = add i32 %180, %134
  %182 = xor i32 %167, %180
  %183 = call i32 @rotl_u32(i32 %182, i32 16)
  %184 = add i32 %183, %126
  %185 = xor i32 %184, %178
  %186 = call i32 @rotl_u32(i32 %185, i32 20)
  %187 = add i32 %181, %186
  %188 = xor i32 %187, %183
  %189 = call i32 @rotl_u32(i32 %188, i32 24)
  %190 = add i32 %189, %184
  %191 = xor i32 %190, %186
  %192 = call i32 @rotl_u32(i32 %191, i32 25)
  %193 = add i32 %173, %192
  %194 = add i32 %193, %138
  %195 = xor i32 %168, %164
  %196 = call i32 @rotl_u32(i32 %195, i32 25)
  %197 = add i32 %81, %123
  %198 = add i32 %196, %197
  %199 = add i32 %198, %158
  %200 = xor i32 %175, %198
  %201 = call i32 @rotl_u32(i32 %200, i32 16)
  %202 = add i32 %143, %148
  %203 = add i32 %201, %202
  %204 = xor i32 %196, %203
  %205 = call i32 @rotl_u32(i32 %204, i32 20)
  %206 = add i32 %199, %205
  %207 = xor i32 %206, %201
  %208 = call i32 @rotl_u32(i32 %207, i32 24)
  %209 = xor i32 %193, %208
  %210 = call i32 @rotl_u32(i32 %209, i32 16)
  %211 = xor i32 %202, %145
  %212 = call i32 @rotl_u32(i32 %211, i32 25)
  %213 = add i32 %165, %63
  %214 = add i32 %212, %213
  %215 = add i32 %214, %32
  %216 = xor i32 %214, %125
  %217 = call i32 @rotl_u32(i32 %216, i32 16)
  %218 = add i32 %217, %176
  %219 = xor i32 %212, %218
  %220 = call i32 @rotl_u32(i32 %219, i32 20)
  %221 = add i32 %215, %220
  %222 = xor i32 %221, %217
  %223 = call i32 @rotl_u32(i32 %222, i32 24)
  %224 = add i32 %223, %218
  %225 = add i32 %210, %224
  %226 = xor i32 %192, %225
  %227 = call i32 @rotl_u32(i32 %226, i32 20)
  %228 = add i32 %194, %227
  %229 = add i32 %228, %14
  %230 = xor i32 %150, %172
  %231 = call i32 @rotl_u32(i32 %230, i32 24)
  %232 = add i32 %231, %169
  %233 = xor i32 %232, %171
  %234 = call i32 @rotl_u32(i32 %233, i32 25)
  %235 = add i32 %206, %116
  %236 = add i32 %234, %235
  %237 = add i32 %236, %48
  %238 = xor i32 %236, %223
  %239 = call i32 @rotl_u32(i32 %238, i32 16)
  %240 = add i32 %190, %239
  %241 = xor i32 %240, %234
  %242 = call i32 @rotl_u32(i32 %241, i32 20)
  %243 = add i32 %237, %242
  %244 = xor i32 %243, %239
  %245 = call i32 @rotl_u32(i32 %244, i32 24)
  %246 = add i32 %245, %240
  %247 = xor i32 %246, %242
  %248 = call i32 @rotl_u32(i32 %247, i32 25)
  %249 = add i32 %229, %248
  %250 = add i32 %249, %81
  %251 = xor i32 %224, %220
  %252 = call i32 @rotl_u32(i32 %251, i32 25)
  %253 = add i32 %187, %154
  %254 = add i32 %252, %253
  %255 = add i32 %254, %87
  %256 = xor i32 %254, %231
  %257 = call i32 @rotl_u32(i32 %256, i32 16)
  %258 = add i32 %208, %203
  %259 = add i32 %257, %258
  %260 = xor i32 %252, %259
  %261 = call i32 @rotl_u32(i32 %260, i32 20)
  %262 = add i32 %255, %261
  %263 = xor i32 %262, %257
  %264 = call i32 @rotl_u32(i32 %263, i32 24)
  %265 = xor i32 %249, %264
  %266 = call i32 @rotl_u32(i32 %265, i32 16)
  %267 = xor i32 %258, %205
  %268 = call i32 @rotl_u32(i32 %267, i32 25)
  %269 = add i32 %221, %52
  %270 = add i32 %268, %269
  %271 = add i32 %270, %112
  %272 = xor i32 %189, %270
  %273 = call i32 @rotl_u32(i32 %272, i32 16)
  %274 = add i32 %273, %232
  %275 = xor i32 %268, %274
  %276 = call i32 @rotl_u32(i32 %275, i32 20)
  %277 = add i32 %271, %276
  %278 = xor i32 %277, %273
  %279 = call i32 @rotl_u32(i32 %278, i32 24)
  %280 = add i32 %279, %274
  %281 = add i32 %266, %280
  %282 = xor i32 %248, %281
  %283 = call i32 @rotl_u32(i32 %282, i32 20)
  %284 = add i32 %250, %283
  %285 = add i32 %284, %57
  %286 = xor i32 %210, %228
  %287 = call i32 @rotl_u32(i32 %286, i32 24)
  %288 = add i32 %287, %225
  %289 = xor i32 %288, %227
  %290 = call i32 @rotl_u32(i32 %289, i32 25)
  %291 = add i32 %262, %134
  %292 = add i32 %290, %291
  %293 = add i32 %292, %154
  %294 = xor i32 %292, %279
  %295 = call i32 @rotl_u32(i32 %294, i32 16)
  %296 = add i32 %295, %246
  %297 = xor i32 %296, %290
  %298 = call i32 @rotl_u32(i32 %297, i32 20)
  %299 = add i32 %293, %298
  %300 = xor i32 %299, %295
  %301 = call i32 @rotl_u32(i32 %300, i32 24)
  %302 = add i32 %301, %296
  %303 = xor i32 %302, %298
  %304 = call i32 @rotl_u32(i32 %303, i32 25)
  %305 = add i32 %285, %304
  %306 = add i32 %305, %87
  %307 = xor i32 %280, %276
  %308 = call i32 @rotl_u32(i32 %307, i32 25)
  %309 = add i32 %243, %63
  %310 = add i32 %308, %309
  %311 = add i32 %310, %112
  %312 = xor i32 %310, %287
  %313 = call i32 @rotl_u32(i32 %312, i32 16)
  %314 = add i32 %264, %259
  %315 = add i32 %313, %314
  %316 = xor i32 %308, %315
  %317 = call i32 @rotl_u32(i32 %316, i32 20)
  %318 = add i32 %311, %317
  %319 = xor i32 %318, %313
  %320 = call i32 @rotl_u32(i32 %319, i32 24)
  %321 = xor i32 %305, %320
  %322 = call i32 @rotl_u32(i32 %321, i32 16)
  %323 = xor i32 %314, %261
  %324 = call i32 @rotl_u32(i32 %323, i32 25)
  %325 = add i32 %158, %277
  %326 = add i32 %324, %325
  %327 = add i32 %326, %8
  %328 = xor i32 %245, %326
  %329 = call i32 @rotl_u32(i32 %328, i32 16)
  %330 = add i32 %329, %288
  %331 = xor i32 %324, %330
  %332 = call i32 @rotl_u32(i32 %331, i32 20)
  %333 = add i32 %327, %332
  %334 = xor i32 %333, %329
  %335 = call i32 @rotl_u32(i32 %334, i32 24)
  %336 = add i32 %335, %330
  %337 = add i32 %322, %336
  %338 = xor i32 %304, %337
  %339 = call i32 @rotl_u32(i32 %338, i32 20)
  %340 = add i32 %306, %339
  %341 = add i32 %340, %134
  %342 = xor i32 %266, %284
  %343 = call i32 @rotl_u32(i32 %342, i32 24)
  %344 = add i32 %343, %281
  %345 = xor i32 %344, %283
  %346 = call i32 @rotl_u32(i32 %345, i32 25)
  %347 = add i32 %318, %48
  %348 = add i32 %346, %347
  %349 = add i32 %348, %38
  %350 = xor i32 %348, %335
  %351 = call i32 @rotl_u32(i32 %350, i32 16)
  %352 = add i32 %351, %302
  %353 = xor i32 %352, %346
  %354 = call i32 @rotl_u32(i32 %353, i32 20)
  %355 = add i32 %349, %354
  %356 = xor i32 %355, %351
  %357 = call i32 @rotl_u32(i32 %356, i32 24)
  %358 = add i32 %357, %352
  %359 = xor i32 %358, %354
  %360 = call i32 @rotl_u32(i32 %359, i32 25)
  %361 = add i32 %341, %360
  %362 = add i32 %361, %63
  %363 = xor i32 %336, %332
  %364 = call i32 @rotl_u32(i32 %363, i32 25)
  %365 = add i32 %299, %52
  %366 = add i32 %364, %365
  %367 = add i32 %366, %32
  %368 = xor i32 %366, %343
  %369 = call i32 @rotl_u32(i32 %368, i32 16)
  %370 = add i32 %320, %315
  %371 = add i32 %369, %370
  %372 = xor i32 %364, %371
  %373 = call i32 @rotl_u32(i32 %372, i32 20)
  %374 = add i32 %367, %373
  %375 = xor i32 %374, %369
  %376 = call i32 @rotl_u32(i32 %375, i32 24)
  %377 = xor i32 %361, %376
  %378 = call i32 @rotl_u32(i32 %377, i32 16)
  %379 = xor i32 %370, %317
  %380 = call i32 @rotl_u32(i32 %379, i32 25)
  %381 = add i32 %333, %138
  %382 = add i32 %380, %381
  %383 = add i32 %382, %116
  %384 = xor i32 %301, %382
  %385 = call i32 @rotl_u32(i32 %384, i32 16)
  %386 = add i32 %385, %344
  %387 = xor i32 %380, %386
  %388 = call i32 @rotl_u32(i32 %387, i32 20)
  %389 = add i32 %383, %388
  %390 = xor i32 %389, %385
  %391 = call i32 @rotl_u32(i32 %390, i32 24)
  %392 = add i32 %391, %386
  %393 = add i32 %378, %392
  %394 = xor i32 %360, %393
  %395 = call i32 @rotl_u32(i32 %394, i32 20)
  %396 = add i32 %362, %395
  %397 = add i32 %396, %81
  %398 = xor i32 %322, %340
  %399 = call i32 @rotl_u32(i32 %398, i32 24)
  %400 = add i32 %399, %337
  %401 = xor i32 %400, %339
  %402 = call i32 @rotl_u32(i32 %401, i32 25)
  %403 = add i32 %374, %154
  %404 = add i32 %402, %403
  %405 = add i32 %404, %52
  %406 = xor i32 %404, %391
  %407 = call i32 @rotl_u32(i32 %406, i32 16)
  %408 = add i32 %407, %358
  %409 = xor i32 %408, %402
  %410 = call i32 @rotl_u32(i32 %409, i32 20)
  %411 = add i32 %405, %410
  %412 = xor i32 %411, %407
  %413 = call i32 @rotl_u32(i32 %412, i32 24)
  %414 = add i32 %413, %408
  %415 = xor i32 %414, %410
  %416 = call i32 @rotl_u32(i32 %415, i32 25)
  %417 = add i32 %397, %416
  %418 = add i32 %417, %32
  %419 = xor i32 %392, %388
  %420 = call i32 @rotl_u32(i32 %419, i32 25)
  %421 = add i32 %158, %355
  %422 = add i32 %420, %421
  %423 = add i32 %422, %116
  %424 = xor i32 %422, %399
  %425 = call i32 @rotl_u32(i32 %424, i32 16)
  %426 = add i32 %376, %371
  %427 = add i32 %425, %426
  %428 = xor i32 %420, %427
  %429 = call i32 @rotl_u32(i32 %428, i32 20)
  %430 = add i32 %423, %429
  %431 = xor i32 %430, %425
  %432 = call i32 @rotl_u32(i32 %431, i32 24)
  %433 = xor i32 %417, %432
  %434 = call i32 @rotl_u32(i32 %433, i32 16)
  %435 = xor i32 %426, %373
  %436 = call i32 @rotl_u32(i32 %435, i32 25)
  %437 = add i32 %112, %389
  %438 = add i32 %436, %437
  %439 = add i32 %438, %14
  %440 = xor i32 %357, %438
  %441 = call i32 @rotl_u32(i32 %440, i32 16)
  %442 = add i32 %441, %400
  %443 = xor i32 %436, %442
  %444 = call i32 @rotl_u32(i32 %443, i32 20)
  %445 = add i32 %439, %444
  %446 = xor i32 %445, %441
  %447 = call i32 @rotl_u32(i32 %446, i32 24)
  %448 = add i32 %447, %442
  %449 = add i32 %434, %448
  %450 = xor i32 %416, %449
  %451 = call i32 @rotl_u32(i32 %450, i32 20)
  %452 = add i32 %418, %451
  %453 = add i32 %452, %154
  %454 = xor i32 %378, %396
  %455 = call i32 @rotl_u32(i32 %454, i32 24)
  %456 = add i32 %455, %393
  %457 = xor i32 %456, %395
  %458 = call i32 @rotl_u32(i32 %457, i32 25)
  %459 = add i32 %430, %38
  %460 = add i32 %458, %459
  %461 = add i32 %460, %57
  %462 = xor i32 %460, %447
  %463 = call i32 @rotl_u32(i32 %462, i32 16)
  %464 = add i32 %463, %414
  %465 = xor i32 %464, %458
  %466 = call i32 @rotl_u32(i32 %465, i32 20)
  %467 = add i32 %461, %466
  %468 = xor i32 %467, %463
  %469 = call i32 @rotl_u32(i32 %468, i32 24)
  %470 = add i32 %469, %464
  %471 = xor i32 %470, %466
  %472 = call i32 @rotl_u32(i32 %471, i32 25)
  %473 = add i32 %453, %472
  %474 = add i32 %473, %158
  %475 = xor i32 %448, %444
  %476 = call i32 @rotl_u32(i32 %475, i32 25)
  %477 = add i32 %138, %411
  %478 = add i32 %476, %477
  %479 = add i32 %478, %8
  %480 = xor i32 %478, %455
  %481 = call i32 @rotl_u32(i32 %480, i32 16)
  %482 = add i32 %432, %427
  %483 = add i32 %481, %482
  %484 = xor i32 %476, %483
  %485 = call i32 @rotl_u32(i32 %484, i32 20)
  %486 = add i32 %479, %485
  %487 = xor i32 %486, %481
  %488 = call i32 @rotl_u32(i32 %487, i32 24)
  %489 = xor i32 %473, %488
  %490 = call i32 @rotl_u32(i32 %489, i32 16)
  %491 = xor i32 %482, %429
  %492 = call i32 @rotl_u32(i32 %491, i32 25)
  %493 = add i32 %445, %87
  %494 = add i32 %492, %493
  %495 = add i32 %494, %48
  %496 = xor i32 %413, %494
  %497 = call i32 @rotl_u32(i32 %496, i32 16)
  %498 = add i32 %497, %456
  %499 = xor i32 %492, %498
  %500 = call i32 @rotl_u32(i32 %499, i32 20)
  %501 = add i32 %495, %500
  %502 = xor i32 %501, %497
  %503 = call i32 @rotl_u32(i32 %502, i32 24)
  %504 = add i32 %503, %498
  %505 = add i32 %490, %504
  %506 = xor i32 %472, %505
  %507 = call i32 @rotl_u32(i32 %506, i32 20)
  %508 = add i32 %474, %507
  %509 = add i32 %508, %63
  %510 = xor i32 %434, %452
  %511 = call i32 @rotl_u32(i32 %510, i32 24)
  %512 = add i32 %511, %449
  %513 = xor i32 %512, %451
  %514 = call i32 @rotl_u32(i32 %513, i32 25)
  %515 = add i32 %486, %52
  %516 = add i32 %514, %515
  %517 = add i32 %516, %138
  %518 = xor i32 %516, %503
  %519 = call i32 @rotl_u32(i32 %518, i32 16)
  %520 = add i32 %519, %470
  %521 = xor i32 %520, %514
  %522 = call i32 @rotl_u32(i32 %521, i32 20)
  %523 = add i32 %517, %522
  %524 = xor i32 %523, %519
  %525 = call i32 @rotl_u32(i32 %524, i32 24)
  %526 = add i32 %525, %520
  %527 = xor i32 %526, %522
  %528 = call i32 @rotl_u32(i32 %527, i32 25)
  %529 = add i32 %509, %528
  %530 = add i32 %529, %8
  %531 = xor i32 %504, %500
  %532 = call i32 @rotl_u32(i32 %531, i32 25)
  %533 = add i32 %112, %467
  %534 = add i32 %532, %533
  %535 = add i32 %534, %48
  %536 = xor i32 %534, %511
  %537 = call i32 @rotl_u32(i32 %536, i32 16)
  %538 = add i32 %488, %483
  %539 = add i32 %537, %538
  %540 = xor i32 %532, %539
  %541 = call i32 @rotl_u32(i32 %540, i32 20)
  %542 = add i32 %535, %541
  %543 = xor i32 %542, %537
  %544 = call i32 @rotl_u32(i32 %543, i32 24)
  %545 = xor i32 %529, %544
  %546 = call i32 @rotl_u32(i32 %545, i32 16)
  %547 = xor i32 %538, %485
  %548 = call i32 @rotl_u32(i32 %547, i32 25)
  %549 = add i32 %116, %501
  %550 = add i32 %548, %549
  %551 = add i32 %550, %134
  %552 = xor i32 %469, %550
  %553 = call i32 @rotl_u32(i32 %552, i32 16)
  %554 = add i32 %553, %512
  %555 = xor i32 %548, %554
  %556 = call i32 @rotl_u32(i32 %555, i32 20)
  %557 = add i32 %551, %556
  %558 = xor i32 %557, %553
  %559 = call i32 @rotl_u32(i32 %558, i32 24)
  %560 = add i32 %559, %554
  %561 = add i32 %546, %560
  %562 = xor i32 %528, %561
  %563 = call i32 @rotl_u32(i32 %562, i32 20)
  %564 = add i32 %530, %563
  %565 = add i32 %564, %52
  %566 = xor i32 %490, %508
  %567 = call i32 @rotl_u32(i32 %566, i32 24)
  %568 = add i32 %567, %505
  %569 = xor i32 %568, %507
  %570 = call i32 @rotl_u32(i32 %569, i32 25)
  %571 = add i32 %542, %57
  %572 = add i32 %570, %571
  %573 = add i32 %572, %81
  %574 = xor i32 %572, %559
  %575 = call i32 @rotl_u32(i32 %574, i32 16)
  %576 = add i32 %575, %526
  %577 = xor i32 %576, %570
  %578 = call i32 @rotl_u32(i32 %577, i32 20)
  %579 = add i32 %573, %578
  %580 = xor i32 %579, %575
  %581 = call i32 @rotl_u32(i32 %580, i32 24)
  %582 = add i32 %581, %576
  %583 = xor i32 %582, %578
  %584 = call i32 @rotl_u32(i32 %583, i32 25)
  %585 = add i32 %565, %584
  %586 = add i32 %585, %112
  %587 = xor i32 %560, %556
  %588 = call i32 @rotl_u32(i32 %587, i32 25)
  %589 = add i32 %523, %87
  %590 = add i32 %588, %589
  %591 = add i32 %590, %14
  %592 = xor i32 %590, %567
  %593 = call i32 @rotl_u32(i32 %592, i32 16)
  %594 = add i32 %544, %539
  %595 = add i32 %593, %594
  %596 = xor i32 %588, %595
  %597 = call i32 @rotl_u32(i32 %596, i32 20)
  %598 = add i32 %591, %597
  %599 = xor i32 %598, %593
  %600 = call i32 @rotl_u32(i32 %599, i32 24)
  %601 = xor i32 %585, %600
  %602 = call i32 @rotl_u32(i32 %601, i32 16)
  %603 = xor i32 %594, %541
  %604 = call i32 @rotl_u32(i32 %603, i32 25)
  %605 = add i32 %557, %32
  %606 = add i32 %604, %605
  %607 = add i32 %606, %38
  %608 = xor i32 %525, %606
  %609 = call i32 @rotl_u32(i32 %608, i32 16)
  %610 = add i32 %609, %568
  %611 = xor i32 %604, %610
  %612 = call i32 @rotl_u32(i32 %611, i32 20)
  %613 = add i32 %607, %612
  %614 = xor i32 %613, %609
  %615 = call i32 @rotl_u32(i32 %614, i32 24)
  %616 = add i32 %615, %610
  %617 = add i32 %602, %616
  %618 = xor i32 %584, %617
  %619 = call i32 @rotl_u32(i32 %618, i32 20)
  %620 = add i32 %586, %619
  %621 = add i32 %620, %158
  %622 = xor i32 %546, %564
  %623 = call i32 @rotl_u32(i32 %622, i32 24)
  %624 = add i32 %623, %561
  %625 = xor i32 %624, %563
  %626 = call i32 @rotl_u32(i32 %625, i32 25)
  %627 = add i32 %598, %138
  %628 = add i32 %626, %627
  %629 = add i32 %628, %87
  %630 = xor i32 %628, %615
  %631 = call i32 @rotl_u32(i32 %630, i32 16)
  %632 = add i32 %631, %582
  %633 = xor i32 %632, %626
  %634 = call i32 @rotl_u32(i32 %633, i32 20)
  %635 = add i32 %629, %634
  %636 = xor i32 %635, %631
  %637 = call i32 @rotl_u32(i32 %636, i32 24)
  %638 = add i32 %637, %632
  %639 = xor i32 %638, %634
  %640 = call i32 @rotl_u32(i32 %639, i32 25)
  %641 = add i32 %621, %640
  %642 = add i32 %641, %14
  %643 = xor i32 %616, %612
  %644 = call i32 @rotl_u32(i32 %643, i32 25)
  %645 = add i32 %116, %579
  %646 = add i32 %644, %645
  %647 = add i32 %646, %38
  %648 = xor i32 %646, %623
  %649 = call i32 @rotl_u32(i32 %648, i32 16)
  %650 = add i32 %600, %595
  %651 = add i32 %649, %650
  %652 = xor i32 %644, %651
  %653 = call i32 @rotl_u32(i32 %652, i32 20)
  %654 = add i32 %647, %653
  %655 = xor i32 %654, %649
  %656 = call i32 @rotl_u32(i32 %655, i32 24)
  %657 = xor i32 %641, %656
  %658 = call i32 @rotl_u32(i32 %657, i32 16)
  %659 = xor i32 %650, %597
  %660 = call i32 @rotl_u32(i32 %659, i32 25)
  %661 = add i32 %613, %48
  %662 = add i32 %660, %661
  %663 = add i32 %662, %154
  %664 = xor i32 %581, %662
  %665 = call i32 @rotl_u32(i32 %664, i32 16)
  %666 = add i32 %665, %624
  %667 = xor i32 %660, %666
  %668 = call i32 @rotl_u32(i32 %667, i32 20)
  %669 = add i32 %663, %668
  %670 = xor i32 %669, %665
  %671 = call i32 @rotl_u32(i32 %670, i32 24)
  %672 = add i32 %671, %666
  %673 = add i32 %658, %672
  %674 = xor i32 %640, %673
  %675 = call i32 @rotl_u32(i32 %674, i32 20)
  %676 = add i32 %642, %675
  %677 = add i32 %676, %138
  %678 = xor i32 %602, %620
  %679 = call i32 @rotl_u32(i32 %678, i32 24)
  %680 = add i32 %679, %617
  %681 = xor i32 %680, %619
  %682 = call i32 @rotl_u32(i32 %681, i32 25)
  %683 = add i32 %81, %654
  %684 = add i32 %682, %683
  %685 = add i32 %684, %63
  %686 = xor i32 %684, %671
  %687 = call i32 @rotl_u32(i32 %686, i32 16)
  %688 = add i32 %687, %638
  %689 = xor i32 %688, %682
  %690 = call i32 @rotl_u32(i32 %689, i32 20)
  %691 = add i32 %685, %690
  %692 = xor i32 %691, %687
  %693 = call i32 @rotl_u32(i32 %692, i32 24)
  %694 = add i32 %693, %688
  %695 = xor i32 %694, %690
  %696 = call i32 @rotl_u32(i32 %695, i32 25)
  %697 = add i32 %677, %696
  %698 = add i32 %697, %116
  %699 = xor i32 %672, %668
  %700 = call i32 @rotl_u32(i32 %699, i32 25)
  %701 = add i32 %635, %32
  %702 = add i32 %700, %701
  %703 = add i32 %702, %134
  %704 = xor i32 %702, %679
  %705 = call i32 @rotl_u32(i32 %704, i32 16)
  %706 = add i32 %656, %651
  %707 = add i32 %705, %706
  %708 = xor i32 %700, %707
  %709 = call i32 @rotl_u32(i32 %708, i32 20)
  %710 = add i32 %703, %709
  %711 = xor i32 %710, %705
  %712 = call i32 @rotl_u32(i32 %711, i32 24)
  %713 = xor i32 %697, %712
  %714 = call i32 @rotl_u32(i32 %713, i32 16)
  %715 = xor i32 %653, %706
  %716 = call i32 @rotl_u32(i32 %715, i32 25)
  %717 = add i32 %669, %8
  %718 = add i32 %716, %717
  %719 = add i32 %718, %57
  %720 = xor i32 %637, %718
  %721 = call i32 @rotl_u32(i32 %720, i32 16)
  %722 = add i32 %721, %680
  %723 = xor i32 %716, %722
  %724 = call i32 @rotl_u32(i32 %723, i32 20)
  %725 = add i32 %719, %724
  %726 = xor i32 %725, %721
  %727 = call i32 @rotl_u32(i32 %726, i32 24)
  %728 = add i32 %727, %722
  %729 = add i32 %714, %728
  %730 = xor i32 %696, %729
  %731 = call i32 @rotl_u32(i32 %730, i32 20)
  %732 = add i32 %698, %731
  %733 = add i32 %732, %112
  %734 = xor i32 %658, %676
  %735 = call i32 @rotl_u32(i32 %734, i32 24)
  %736 = add i32 %735, %673
  %737 = xor i32 %736, %675
  %738 = call i32 @rotl_u32(i32 %737, i32 25)
  %739 = add i32 %710, %87
  %740 = add i32 %738, %739
  %741 = add i32 %32, %740
  %742 = xor i32 %727, %740
  %743 = call i32 @rotl_u32(i32 %742, i32 16)
  %744 = add i32 %743, %694
  %745 = xor i32 %744, %738
  %746 = call i32 @rotl_u32(i32 %745, i32 20)
  %747 = add i32 %741, %746
  %748 = xor i32 %747, %743
  %749 = call i32 @rotl_u32(i32 %748, i32 24)
  %750 = add i32 %749, %744
  %751 = xor i32 %750, %746
  %752 = call i32 @rotl_u32(i32 %751, i32 25)
  %753 = add i32 %733, %752
  %754 = add i32 %753, %134
  %755 = xor i32 %728, %724
  %756 = call i32 @rotl_u32(i32 %755, i32 25)
  %757 = add i32 %691, %48
  %758 = add i32 %756, %757
  %759 = add i32 %57, %758
  %760 = xor i32 %735, %758
  %761 = call i32 @rotl_u32(i32 %760, i32 16)
  %762 = add i32 %707, %712
  %763 = add i32 %761, %762
  %764 = xor i32 %756, %763
  %765 = call i32 @rotl_u32(i32 %764, i32 20)
  %766 = add i32 %759, %765
  %767 = xor i32 %766, %761
  %768 = call i32 @rotl_u32(i32 %767, i32 24)
  %769 = xor i32 %753, %768
  %770 = call i32 @rotl_u32(i32 %769, i32 16)
  %771 = xor i32 %709, %762
  %772 = call i32 @rotl_u32(i32 %771, i32 25)
  %773 = add i32 %725, %38
  %774 = add i32 %772, %773
  %775 = add i32 %774, %52
  %776 = xor i32 %693, %774
  %777 = call i32 @rotl_u32(i32 %776, i32 16)
  %778 = add i32 %736, %777
  %779 = xor i32 %778, %772
  %780 = call i32 @rotl_u32(i32 %779, i32 20)
  %781 = add i32 %775, %780
  %782 = xor i32 %781, %777
  %783 = call i32 @rotl_u32(i32 %782, i32 24)
  %784 = add i32 %783, %778
  %785 = add i32 %770, %784
  %786 = xor i32 %785, %752
  %787 = call i32 @rotl_u32(i32 %786, i32 20)
  %788 = add i32 %754, %787
  %789 = xor i32 %788, %770
  %790 = call i32 @rotl_u32(i32 %789, i32 24)
  %791 = add i32 %790, %785
  %792 = add i32 %768, %763
  %793 = xor i32 %792, %765
  %794 = call i32 @rotl_u32(i32 %793, i32 25)
  %795 = add i32 %781, %14
  %796 = add i32 %794, %795
  %797 = add i32 %81, %796
  %798 = xor i32 %749, %796
  %799 = call i32 @rotl_u32(i32 %798, i32 16)
  %800 = xor i32 %714, %732
  %801 = call i32 @rotl_u32(i32 %800, i32 24)
  %802 = add i32 %801, %729
  %803 = add i32 %799, %802
  %804 = xor i32 %794, %803
  %805 = call i32 @rotl_u32(i32 %804, i32 20)
  %806 = add i32 %797, %805
  %807 = xor i32 %791, %806
  %808 = add i32 %0, 8
  call void @set_i32(i32 %808, i32 %807)
  %809 = xor i32 %731, %802
  %810 = call i32 @rotl_u32(i32 %809, i32 25)
  %811 = add i32 %766, %63
  %812 = add i32 %810, %811
  %813 = add i32 %158, %812
  %814 = xor i32 %783, %812
  %815 = call i32 @rotl_u32(i32 %814, i32 16)
  %816 = add i32 %815, %750
  %817 = xor i32 %816, %810
  %818 = call i32 @rotl_u32(i32 %817, i32 20)
  %819 = add i32 %813, %818
  %820 = xor i32 %819, %815
  %821 = call i32 @rotl_u32(i32 %820, i32 24)
  %822 = add i32 %821, %816
  %823 = xor i32 %784, %780
  %824 = call i32 @rotl_u32(i32 %823, i32 25)
  %825 = add i32 %747, %8
  %826 = add i32 %824, %825
  %827 = add i32 %154, %826
  %828 = xor i32 %826, %801
  %829 = call i32 @rotl_u32(i32 %828, i32 16)
  %830 = add i32 %792, %829
  %831 = xor i32 %830, %824
  %832 = call i32 @rotl_u32(i32 %831, i32 20)
  %833 = add i32 %827, %832
  %834 = xor i32 %822, %833
  %835 = add i32 %0, 4
  call void @set_i32(i32 %835, i32 %834)
  %836 = xor i32 %829, %833
  %837 = call i32 @rotl_u32(i32 %836, i32 24)
  %838 = add i32 %837, %830
  %839 = xor i32 %838, %819
  %840 = add i32 %0, 12
  call void @set_i32(i32 %840, i32 %839)
  %841 = xor i32 %799, %806
  %842 = call i32 @rotl_u32(i32 %841, i32 24)
  %843 = add i32 %842, %803
  %844 = xor i32 %843, %788
  %845 = add i32 %0, 0
  call void @set_i32(i32 %845, i32 %844)
  %846 = xor i32 %791, %787
  %847 = call i32 @rotl_u32(i32 %846, i32 25)
  %848 = xor i32 %847, %842
  %849 = add i32 %0, 20
  call void @set_i32(i32 %849, i32 %848)
  %850 = xor i32 %822, %818
  %851 = call i32 @rotl_u32(i32 %850, i32 25)
  %852 = xor i32 %851, %837
  %853 = add i32 %0, 16
  call void @set_i32(i32 %853, i32 %852)
  %854 = xor i32 %843, %805
  %855 = call i32 @rotl_u32(i32 %854, i32 25)
  %856 = xor i32 %855, %790
  %857 = add i32 %0, 28
  call void @set_i32(i32 %857, i32 %856)
  %858 = xor i32 %838, %832
  %859 = call i32 @rotl_u32(i32 %858, i32 25)
  %860 = xor i32 %859, %821
  %861 = add i32 %0, 24
  call void @set_i32(i32 %861, i32 %860)
  br label %exit

exit:                                             ; preds = %entry
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_4(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = load i32, i32* @wasmg_internal_0, align 4
  %4 = sub i32 %3, 256
  store i32 %4, i32* @wasmg_internal_0, align 4
  br label %b_0

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_31, %b_30
  %5 = phi i32 [ %359, %b_30 ], [ %359, %b_31 ]
  %6 = phi i32 [ %360, %b_30 ], [ %360, %b_31 ]
  %7 = phi i32 [ %361, %b_30 ], [ %361, %b_31 ]
  %8 = phi i32 [ %362, %b_30 ], [ %362, %b_31 ]
  %9 = phi i32 [ %383, %b_30 ], [ %602, %b_31 ]
  %10 = phi i32 [ %592, %b_30 ], [ %631, %b_31 ]
  %11 = phi i32 [ %584, %b_30 ], [ %623, %b_31 ]
  %12 = phi i32 [ %582, %b_30 ], [ %621, %b_31 ]
  %13 = phi i32 [ %363, %b_30 ], [ %363, %b_31 ]
  %14 = phi i32 [ %368, %b_30 ], [ %368, %b_31 ]
  %15 = phi i32 [ %580, %b_30 ], [ %619, %b_31 ]
  %16 = phi i32 [ %586, %b_30 ], [ %625, %b_31 ]
  %17 = phi i32 [ %371, %b_30 ], [ %371, %b_31 ]
  %18 = phi i32 [ %372, %b_30 ], [ %372, %b_31 ]
  %19 = phi i32 [ %373, %b_30 ], [ %373, %b_31 ]
  %20 = phi i32 [ %374, %b_30 ], [ %374, %b_31 ]
  %21 = phi i32 [ %588, %b_30 ], [ %627, %b_31 ]
  %22 = phi i32 [ %590, %b_30 ], [ %629, %b_31 ]
  %23 = phi i32 [ %594, %b_30 ], [ %633, %b_31 ]
  %24 = phi i32 [ %597, %b_30 ], [ %636, %b_31 ]
  %25 = phi i32 [ %379, %b_30 ], [ %379, %b_31 ]
  %26 = phi i32 [ %380, %b_30 ], [ %380, %b_31 ]
  %27 = phi i64 [ %381, %b_30 ], [ %381, %b_31 ]
  %28 = phi i64 [ %391, %b_30 ], [ %391, %b_31 ]
  %29 = add i32 %8, 28
  call void @set_i32(i32 %29, i32 %15)
  %30 = add i32 %8, 24
  call void @set_i32(i32 %30, i32 %12)
  %31 = add i32 %8, 20
  call void @set_i32(i32 %31, i32 %11)
  %32 = add i32 %8, 16
  call void @set_i32(i32 %32, i32 %16)
  %33 = add i32 %8, 12
  call void @set_i32(i32 %33, i32 %21)
  %34 = add i32 %8, 8
  call void @set_i32(i32 %34, i32 %22)
  %35 = add i32 %8, 4
  call void @set_i32(i32 %35, i32 %10)
  %36 = add i32 %8, 0
  call void @set_i32(i32 %36, i32 %23)
  call void @wasmf_internal_35(i32 %8, i32 1049364)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_26
  call void @wasmf_internal_38(i32 %403, i32 %397, i32 1049128)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_29
  %37 = add i32 %362, 252
  call void @set_i32(i32 %37, i32 %556)
  %38 = add i32 %362, 248
  call void @set_i32(i32 %38, i32 %550)
  %39 = add i32 %362, 244
  call void @set_i32(i32 %39, i32 %558)
  %40 = add i32 %362, 240
  call void @set_i32(i32 %40, i32 %552)
  %41 = add i32 %362, 236
  call void @set_i32(i32 %41, i32 %560)
  %42 = add i32 %362, 232
  call void @set_i32(i32 %42, i32 %554)
  %43 = add i32 %362, 228
  call void @set_i32(i32 %43, i32 %562)
  %44 = add i32 %362, 224
  call void @set_i32(i32 %44, i32 %564)
  %45 = add i32 %362, 224
  call void @wasmf_internal_35(i32 %45, i32 1049364)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_6:                                              ; preds = %b_4
  br label %b_8

b_7:                                              ; preds = %b_27
  call void @wasmf_internal_37(i32 %363, i32 %361, i32 1049112)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_8:                                              ; preds = %b_6
  br label %b_10

b_9:                                              ; preds = %b_15
  %46 = add i32 %4, 140
  call void @set_i32(i32 %46, i32 %228)
  %47 = add i32 %4, 136
  call void @set_i32(i32 %47, i32 %222)
  %48 = add i32 %4, 132
  call void @set_i32(i32 %48, i32 %230)
  %49 = add i32 %4, 128
  call void @set_i32(i32 %49, i32 %224)
  %50 = add i32 %4, 124
  call void @set_i32(i32 %50, i32 %232)
  %51 = add i32 %4, 120
  call void @set_i32(i32 %51, i32 %226)
  %52 = add i32 %4, 116
  call void @set_i32(i32 %52, i32 %234)
  %53 = add i32 %4, 112
  call void @set_i32(i32 %53, i32 %236)
  %54 = add i32 %4, 112
  call void @wasmf_internal_35(i32 %54, i32 1049364)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_10:                                             ; preds = %b_8
  %55 = add i32 %0, 104
  %56 = call i8 @get_i8(i32 %55)
  %57 = zext i8 %56 to i32
  %58 = add i32 %0, 105
  %59 = add i32 %58, 0
  %60 = call i8 @get_i8(i32 %59)
  %61 = zext i8 %60 to i32
  %62 = shl i32 %61, 6
  %63 = add i32 %57, %62
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %b_12, label %b_13

b_11:                                             ; preds = %b_36, %b_19, %b_12
  %65 = phi i32 [ %0, %b_12 ], [ %302, %b_19 ], [ %302, %b_36 ]
  %66 = phi i32 [ %1, %b_12 ], [ %303, %b_19 ], [ %303, %b_36 ]
  %67 = phi i32 [ %96, %b_12 ], [ %304, %b_19 ], [ %304, %b_36 ]
  %68 = phi i32 [ %4, %b_12 ], [ %305, %b_19 ], [ %305, %b_36 ]
  %69 = phi i32 [ %90, %b_12 ], [ %306, %b_19 ], [ %306, %b_36 ]
  %70 = phi i32 [ 0, %b_12 ], [ %307, %b_19 ], [ %307, %b_36 ]
  %71 = phi i32 [ 0, %b_12 ], [ %308, %b_19 ], [ %308, %b_36 ]
  %72 = phi i32 [ 0, %b_12 ], [ %309, %b_19 ], [ %309, %b_36 ]
  %73 = phi i32 [ %94, %b_12 ], [ %310, %b_19 ], [ %310, %b_36 ]
  %74 = phi i32 [ 0, %b_12 ], [ %311, %b_19 ], [ %311, %b_36 ]
  %75 = phi i32 [ 0, %b_12 ], [ %312, %b_19 ], [ %312, %b_36 ]
  %76 = phi i32 [ 0, %b_12 ], [ %313, %b_19 ], [ %313, %b_36 ]
  %77 = phi i32 [ 0, %b_12 ], [ %314, %b_19 ], [ %314, %b_36 ]
  %78 = phi i32 [ 0, %b_12 ], [ %315, %b_19 ], [ %315, %b_36 ]
  %79 = phi i32 [ 0, %b_12 ], [ %316, %b_19 ], [ %316, %b_36 ]
  %80 = phi i32 [ 0, %b_12 ], [ %317, %b_19 ], [ %317, %b_36 ]
  %81 = phi i32 [ 0, %b_12 ], [ %318, %b_19 ], [ %318, %b_36 ]
  %82 = phi i32 [ 0, %b_12 ], [ %319, %b_19 ], [ %319, %b_36 ]
  %83 = phi i32 [ 0, %b_12 ], [ %320, %b_19 ], [ %320, %b_36 ]
  %84 = phi i32 [ 0, %b_12 ], [ %321, %b_19 ], [ %321, %b_36 ]
  %85 = phi i32 [ 0, %b_12 ], [ %322, %b_19 ], [ %322, %b_36 ]
  %86 = phi i32 [ 0, %b_12 ], [ %323, %b_19 ], [ %323, %b_36 ]
  %87 = phi i64 [ 0, %b_12 ], [ %324, %b_19 ], [ %324, %b_36 ]
  %88 = phi i64 [ 0, %b_12 ], [ %325, %b_19 ], [ %325, %b_36 ]
  %89 = add i32 %68, 256
  store i32 %89, i32* @wasmg_internal_0, align 4
  ret void

b_12:                                             ; preds = %b_10
  %90 = sub i32 1024, %63
  %91 = icmp ugt i32 %90, %2
  %92 = zext i1 %91 to i32
  %93 = icmp ne i32 %92, 0
  %94 = select i1 %93, i32 %2, i32 %90
  %95 = call i32 @wasmf_internal_21(i32 %0, i32 %1, i32 %94)
  %96 = sub i32 %2, %94
  %97 = icmp eq i32 0, %96
  %98 = zext i1 %97 to i32
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %b_11, label %b_15

b_13:                                             ; preds = %b_10
  br label %b_14

b_14:                                             ; preds = %b_16, %b_13
  %100 = phi i32 [ %0, %b_16 ], [ %0, %b_13 ]
  %101 = phi i32 [ %292, %b_16 ], [ %1, %b_13 ]
  %102 = phi i32 [ %96, %b_16 ], [ %2, %b_13 ]
  %103 = phi i32 [ %4, %b_16 ], [ %4, %b_13 ]
  %104 = phi i32 [ %271, %b_16 ], [ %63, %b_13 ]
  %105 = phi i32 [ %226, %b_16 ], [ 0, %b_13 ]
  %106 = phi i32 [ %242, %b_16 ], [ 0, %b_13 ]
  %107 = phi i32 [ %236, %b_16 ], [ 0, %b_13 ]
  %108 = phi i32 [ %94, %b_16 ], [ 0, %b_13 ]
  %109 = phi i32 [ %222, %b_16 ], [ 0, %b_13 ]
  %110 = phi i32 [ %234, %b_16 ], [ 0, %b_13 ]
  %111 = phi i32 [ %239, %b_16 ], [ 0, %b_13 ]
  %112 = phi i32 [ %228, %b_16 ], [ 0, %b_13 ]
  %113 = phi i32 [ %230, %b_16 ], [ 0, %b_13 ]
  %114 = phi i32 [ %224, %b_16 ], [ 0, %b_13 ]
  %115 = phi i32 [ %232, %b_16 ], [ 0, %b_13 ]
  %116 = phi i32 [ 0, %b_16 ], [ 0, %b_13 ]
  %117 = phi i32 [ 0, %b_16 ], [ 0, %b_13 ]
  %118 = phi i32 [ 0, %b_16 ], [ 0, %b_13 ]
  %119 = phi i32 [ 0, %b_16 ], [ 0, %b_13 ]
  %120 = phi i32 [ 0, %b_16 ], [ 0, %b_13 ]
  %121 = phi i32 [ 0, %b_16 ], [ 0, %b_13 ]
  %122 = phi i64 [ %194, %b_16 ], [ 0, %b_13 ]
  %123 = phi i64 [ 0, %b_16 ], [ 0, %b_13 ]
  %124 = icmp uge i32 %102, 1025
  %125 = zext i1 %124 to i32
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %b_17, label %b_18

b_15:                                             ; preds = %b_12
  %127 = add i32 %4, 128
  %128 = add i32 %0, 16
  %129 = add i32 %128, 0
  %130 = call i64 @get_i64(i32 %129)
  %131 = add i32 %127, 0
  call void @set_i64(i32 %131, i64 %130)
  %132 = add i32 %4, 136
  %133 = add i32 %0, 24
  %134 = add i32 %133, 0
  %135 = call i64 @get_i64(i32 %134)
  %136 = add i32 %132, 0
  call void @set_i64(i32 %136, i64 %135)
  %137 = add i32 %4, 144
  %138 = add i32 %0, 32
  %139 = add i32 %138, 0
  %140 = call i64 @get_i64(i32 %139)
  %141 = add i32 %137, 0
  call void @set_i64(i32 %141, i64 %140)
  %142 = add i32 %4, 160
  %143 = add i32 %0, 48
  %144 = add i32 %143, 0
  %145 = call i64 @get_i64(i32 %144)
  %146 = add i32 %142, 0
  call void @set_i64(i32 %146, i64 %145)
  %147 = add i32 %4, 168
  %148 = add i32 %0, 56
  %149 = add i32 %148, 0
  %150 = call i64 @get_i64(i32 %149)
  %151 = add i32 %147, 0
  call void @set_i64(i32 %151, i64 %150)
  %152 = add i32 %4, 176
  %153 = sub i32 %0, -64
  %154 = add i32 %153, 0
  %155 = call i64 @get_i64(i32 %154)
  %156 = add i32 %152, 0
  call void @set_i64(i32 %156, i64 %155)
  %157 = add i32 %4, 184
  %158 = add i32 %0, 72
  %159 = add i32 %158, 0
  %160 = call i64 @get_i64(i32 %159)
  %161 = add i32 %157, 0
  call void @set_i64(i32 %161, i64 %160)
  %162 = add i32 %4, 192
  %163 = add i32 %0, 80
  %164 = add i32 %163, 0
  %165 = call i64 @get_i64(i32 %164)
  %166 = add i32 %162, 0
  call void @set_i64(i32 %166, i64 %165)
  %167 = add i32 %4, 200
  %168 = add i32 %0, 88
  %169 = add i32 %168, 0
  %170 = call i64 @get_i64(i32 %169)
  %171 = add i32 %167, 0
  call void @set_i64(i32 %171, i64 %170)
  %172 = add i32 %4, 208
  %173 = add i32 %0, 96
  %174 = add i32 %173, 0
  %175 = call i64 @get_i64(i32 %174)
  %176 = add i32 %172, 0
  call void @set_i64(i32 %176, i64 %175)
  %177 = add i32 %0, 8
  %178 = call i64 @get_i64(i32 %177)
  %179 = add i32 %4, 120
  call void @set_i64(i32 %179, i64 %178)
  %180 = add i32 %0, 40
  %181 = call i64 @get_i64(i32 %180)
  %182 = add i32 %4, 152
  call void @set_i64(i32 %182, i64 %181)
  %183 = add i32 %0, 105
  %184 = add i32 %183, 0
  %185 = call i8 @get_i8(i32 %184)
  %186 = zext i8 %185 to i32
  %187 = add i32 %0, 106
  %188 = call i8 @get_i8(i32 %187)
  %189 = zext i8 %188 to i32
  %190 = add i32 %0, 104
  %191 = call i8 @get_i8(i32 %190)
  %192 = zext i8 %191 to i32
  %193 = add i32 %0, 0
  %194 = call i64 @get_i64(i32 %193)
  %195 = add i32 %4, 112
  call void @set_i64(i32 %195, i64 %194)
  %196 = trunc i32 %192 to i8
  %197 = add i32 %4, 216
  call void @set_i8(i32 %197, i8 %196)
  %198 = icmp eq i32 0, %186
  %199 = zext i1 %198 to i32
  %200 = or i32 %189, %199
  %201 = or i32 %200, 2
  %202 = trunc i32 %201 to i8
  %203 = add i32 %4, 217
  call void @set_i8(i32 %203, i8 %202)
  %204 = add i32 %4, 248
  %205 = add i32 %138, 0
  %206 = call i64 @get_i64(i32 %205)
  %207 = add i32 %204, 0
  call void @set_i64(i32 %207, i64 %206)
  %208 = add i32 %4, 240
  %209 = add i32 %133, 0
  %210 = call i64 @get_i64(i32 %209)
  %211 = add i32 %208, 0
  call void @set_i64(i32 %211, i64 %210)
  %212 = add i32 %4, 232
  %213 = add i32 %128, 0
  %214 = call i64 @get_i64(i32 %213)
  %215 = add i32 %212, 0
  call void @set_i64(i32 %215, i64 %214)
  %216 = add i32 %0, 8
  %217 = call i64 @get_i64(i32 %216)
  %218 = add i32 %4, 224
  call void @set_i64(i32 %218, i64 %217)
  %219 = add i32 %4, 224
  %220 = add i32 %4, 152
  call void @wasmf_internal_3(i32 %219, i32 %220, i32 %192, i64 %194, i32 %201)
  %221 = add i32 %204, 0
  %222 = call i32 @get_i32(i32 %221)
  %223 = add i32 %208, 0
  %224 = call i32 @get_i32(i32 %223)
  %225 = add i32 %212, 0
  %226 = call i32 @get_i32(i32 %225)
  %227 = add i32 %4, 252
  %228 = call i32 @get_i32(i32 %227)
  %229 = add i32 %4, 244
  %230 = call i32 @get_i32(i32 %229)
  %231 = add i32 %4, 236
  %232 = call i32 @get_i32(i32 %231)
  %233 = add i32 %4, 228
  %234 = call i32 @get_i32(i32 %233)
  %235 = add i32 %4, 224
  %236 = call i32 @get_i32(i32 %235)
  %237 = add i32 %0, 0
  %238 = call i64 @get_i64(i32 %237)
  call void @wasmf_internal_9(i32 %0, i64 %238)
  %239 = add i32 %0, 1904
  %240 = add i32 %239, 0
  %241 = call i8 @get_i8(i32 %240)
  %242 = zext i8 %241 to i32
  %243 = icmp uge i32 %242, 55
  %244 = zext i1 %243 to i32
  %245 = icmp ne i32 %244, 0
  br i1 %245, label %b_9, label %b_16

b_16:                                             ; preds = %b_15
  %246 = shl i32 %242, 5
  %247 = add i32 %0, %246
  %248 = add i32 %247, 144
  %249 = add i32 %248, 0
  call void @set_i32(i32 %249, i32 %236)
  %250 = add i32 %247, 156
  %251 = add i32 %250, 0
  call void @set_i32(i32 %251, i32 %232)
  %252 = add i32 %247, 152
  %253 = add i32 %252, 0
  call void @set_i32(i32 %253, i32 %226)
  %254 = add i32 %247, 148
  %255 = add i32 %254, 0
  call void @set_i32(i32 %255, i32 %234)
  %256 = add i32 %247, 164
  %257 = add i32 %256, 0
  call void @set_i32(i32 %257, i32 %230)
  %258 = add i32 %247, 160
  %259 = add i32 %258, 0
  call void @set_i32(i32 %259, i32 %224)
  %260 = add i32 %247, 172
  %261 = add i32 %260, 0
  call void @set_i32(i32 %261, i32 %228)
  %262 = add i32 %247, 168
  %263 = add i32 %262, 0
  call void @set_i32(i32 %263, i32 %222)
  %264 = add i32 %0, 0
  %265 = call i64 @get_i64(i32 %264)
  %266 = add i64 %265, 1
  %267 = add i32 %0, 0
  call void @set_i64(i32 %267, i64 %266)
  %268 = add i32 %242, 1
  %269 = trunc i32 %268 to i8
  %270 = add i32 %239, 0
  call void @set_i8(i32 %270, i8 %269)
  %271 = add i32 %0, 8
  %272 = add i32 %271, 24
  %273 = add i32 %0, 136
  %274 = add i32 %273, 0
  %275 = call i64 @get_i64(i32 %274)
  %276 = add i32 %272, 0
  call void @set_i64(i32 %276, i64 %275)
  %277 = add i32 %271, 8
  %278 = add i32 %0, 120
  %279 = add i32 %278, 0
  %280 = call i64 @get_i64(i32 %279)
  %281 = add i32 %277, 0
  call void @set_i64(i32 %281, i64 %280)
  %282 = add i32 %271, 16
  %283 = add i32 %0, 128
  %284 = add i32 %283, 0
  %285 = call i64 @get_i64(i32 %284)
  %286 = add i32 %282, 0
  call void @set_i64(i32 %286, i64 %285)
  %287 = add i32 %0, 112
  %288 = call i64 @get_i64(i32 %287)
  %289 = add i32 %271, 0
  call void @set_i64(i32 %289, i64 %288)
  %290 = add i32 %0, 40
  %291 = call i32 @wasmf_internal_59(i32 %290, i32 66)
  %292 = add i32 %1, %94
  br label %b_14

b_17:                                             ; preds = %b_14
  %293 = add i32 %100, 144
  %294 = add i32 %100, 112
  %295 = add i32 %100, 0
  %296 = call i64 @get_i64(i32 %295)
  %297 = add i32 %103, 40
  %298 = add i32 %103, 8
  %299 = add i32 %103, 152
  %300 = add i32 %103, 120
  %301 = add i32 %100, 1904
  br label %b_20

b_18:                                             ; preds = %b_14
  br label %b_19

b_19:                                             ; preds = %b_21, %b_18
  %302 = phi i32 [ %395, %b_21 ], [ %100, %b_18 ]
  %303 = phi i32 [ %658, %b_21 ], [ %101, %b_18 ]
  %304 = phi i32 [ %659, %b_21 ], [ %102, %b_18 ]
  %305 = phi i32 [ %398, %b_21 ], [ %103, %b_18 ]
  %306 = phi i32 [ %399, %b_21 ], [ %104, %b_18 ]
  %307 = phi i32 [ %400, %b_21 ], [ %105, %b_18 ]
  %308 = phi i32 [ %401, %b_21 ], [ %106, %b_18 ]
  %309 = phi i32 [ %402, %b_21 ], [ %107, %b_18 ]
  %310 = phi i32 [ %403, %b_21 ], [ %108, %b_18 ]
  %311 = phi i32 [ %404, %b_21 ], [ %109, %b_18 ]
  %312 = phi i32 [ %405, %b_21 ], [ %110, %b_18 ]
  %313 = phi i32 [ %406, %b_21 ], [ %111, %b_18 ]
  %314 = phi i32 [ %407, %b_21 ], [ %112, %b_18 ]
  %315 = phi i32 [ %408, %b_21 ], [ %113, %b_18 ]
  %316 = phi i32 [ %409, %b_21 ], [ %114, %b_18 ]
  %317 = phi i32 [ %410, %b_21 ], [ %115, %b_18 ]
  %318 = phi i32 [ %411, %b_21 ], [ %116, %b_18 ]
  %319 = phi i32 [ %412, %b_21 ], [ %117, %b_18 ]
  %320 = phi i32 [ %413, %b_21 ], [ %118, %b_18 ]
  %321 = phi i32 [ %414, %b_21 ], [ %119, %b_18 ]
  %322 = phi i32 [ %415, %b_21 ], [ %120, %b_18 ]
  %323 = phi i32 [ %416, %b_21 ], [ %121, %b_18 ]
  %324 = phi i64 [ %425, %b_21 ], [ %122, %b_18 ]
  %325 = phi i64 [ %418, %b_21 ], [ %123, %b_18 ]
  %326 = icmp eq i32 0, %304
  %327 = zext i1 %326 to i32
  %328 = icmp ne i32 %327, 0
  br i1 %328, label %b_11, label %b_36

b_20:                                             ; preds = %b_34, %b_17
  %329 = phi i32 [ %100, %b_17 ], [ %395, %b_34 ]
  %330 = phi i32 [ %101, %b_17 ], [ %658, %b_34 ]
  %331 = phi i32 [ %102, %b_17 ], [ %659, %b_34 ]
  %332 = phi i32 [ %103, %b_17 ], [ %398, %b_34 ]
  %333 = phi i32 [ %104, %b_17 ], [ %399, %b_34 ]
  %334 = phi i32 [ %105, %b_17 ], [ %400, %b_34 ]
  %335 = phi i32 [ %106, %b_17 ], [ %401, %b_34 ]
  %336 = phi i32 [ %107, %b_17 ], [ %402, %b_34 ]
  %337 = phi i32 [ %108, %b_17 ], [ %403, %b_34 ]
  %338 = phi i32 [ %297, %b_17 ], [ %404, %b_34 ]
  %339 = phi i32 [ %110, %b_17 ], [ %405, %b_34 ]
  %340 = phi i32 [ %111, %b_17 ], [ %406, %b_34 ]
  %341 = phi i32 [ %294, %b_17 ], [ %407, %b_34 ]
  %342 = phi i32 [ %301, %b_17 ], [ %408, %b_34 ]
  %343 = phi i32 [ %300, %b_17 ], [ %409, %b_34 ]
  %344 = phi i32 [ %298, %b_17 ], [ %410, %b_34 ]
  %345 = phi i32 [ %116, %b_17 ], [ %411, %b_34 ]
  %346 = phi i32 [ %117, %b_17 ], [ %412, %b_34 ]
  %347 = phi i32 [ %118, %b_17 ], [ %413, %b_34 ]
  %348 = phi i32 [ %119, %b_17 ], [ %414, %b_34 ]
  %349 = phi i32 [ %293, %b_17 ], [ %415, %b_34 ]
  %350 = phi i32 [ %299, %b_17 ], [ %416, %b_34 ]
  %351 = phi i64 [ %296, %b_17 ], [ %425, %b_34 ]
  %352 = phi i64 [ %123, %b_17 ], [ %418, %b_34 ]
  %353 = shl i64 %351, 10
  %354 = lshr i32 %331, 1
  %355 = call i32 @llvm.ctlz.i32(i32 %354, i1 false)
  %356 = urem i32 %355, 32
  %357 = lshr i32 -1, %356
  %358 = add i32 %357, 1
  br label %b_22

b_21:                                             ; preds = %b_35
  br label %b_19

b_22:                                             ; preds = %b_22, %b_20
  %359 = phi i32 [ %329, %b_20 ], [ %359, %b_22 ]
  %360 = phi i32 [ %330, %b_20 ], [ %360, %b_22 ]
  %361 = phi i32 [ %331, %b_20 ], [ %361, %b_22 ]
  %362 = phi i32 [ %332, %b_20 ], [ %362, %b_22 ]
  %363 = phi i32 [ %358, %b_20 ], [ %383, %b_22 ]
  %364 = phi i32 [ %334, %b_20 ], [ %364, %b_22 ]
  %365 = phi i32 [ %335, %b_20 ], [ %365, %b_22 ]
  %366 = phi i32 [ %336, %b_20 ], [ %366, %b_22 ]
  %367 = phi i32 [ %337, %b_20 ], [ %363, %b_22 ]
  %368 = phi i32 [ %338, %b_20 ], [ %368, %b_22 ]
  %369 = phi i32 [ %339, %b_20 ], [ %369, %b_22 ]
  %370 = phi i32 [ %340, %b_20 ], [ %370, %b_22 ]
  %371 = phi i32 [ %341, %b_20 ], [ %371, %b_22 ]
  %372 = phi i32 [ %342, %b_20 ], [ %372, %b_22 ]
  %373 = phi i32 [ %343, %b_20 ], [ %373, %b_22 ]
  %374 = phi i32 [ %344, %b_20 ], [ %374, %b_22 ]
  %375 = phi i32 [ %345, %b_20 ], [ %375, %b_22 ]
  %376 = phi i32 [ %346, %b_20 ], [ %376, %b_22 ]
  %377 = phi i32 [ %347, %b_20 ], [ %377, %b_22 ]
  %378 = phi i32 [ %348, %b_20 ], [ %378, %b_22 ]
  %379 = phi i32 [ %349, %b_20 ], [ %379, %b_22 ]
  %380 = phi i32 [ %350, %b_20 ], [ %380, %b_22 ]
  %381 = phi i64 [ %351, %b_20 ], [ %381, %b_22 ]
  %382 = phi i64 [ %353, %b_20 ], [ %382, %b_22 ]
  %383 = lshr i32 %363, 1
  %384 = add i32 %363, -1
  %385 = zext i32 %384 to i64
  %386 = and i64 %382, %385
  %387 = icmp ne i64 %386, 0
  %388 = zext i1 %387 to i32
  %389 = icmp ne i32 %388, 0
  br i1 %389, label %b_22, label %b_24

b_23:                                             ; preds = %b_24
  %390 = lshr i32 %363, 10
  %391 = zext i32 %390 to i64
  br label %b_25

b_24:                                             ; preds = %b_22
  br label %b_23

b_25:                                             ; preds = %b_23
  %392 = icmp uge i32 %363, 1025
  %393 = zext i1 %392 to i32
  %394 = icmp ne i32 %393, 0
  br i1 %394, label %b_27, label %b_28

b_26:                                             ; preds = %b_33, %b_32
  %395 = phi i32 [ %359, %b_32 ], [ %359, %b_33 ]
  %396 = phi i32 [ %360, %b_32 ], [ %360, %b_33 ]
  %397 = phi i32 [ %361, %b_32 ], [ %361, %b_33 ]
  %398 = phi i32 [ %362, %b_32 ], [ %362, %b_33 ]
  %399 = phi i32 [ %641, %b_32 ], [ %650, %b_33 ]
  %400 = phi i32 [ %631, %b_32 ], [ %562, %b_33 ]
  %401 = phi i32 [ %623, %b_32 ], [ %554, %b_33 ]
  %402 = phi i32 [ %621, %b_32 ], [ %552, %b_33 ]
  %403 = phi i32 [ %363, %b_32 ], [ %363, %b_33 ]
  %404 = phi i32 [ %368, %b_32 ], [ %368, %b_33 ]
  %405 = phi i32 [ %619, %b_32 ], [ %550, %b_33 ]
  %406 = phi i32 [ %625, %b_32 ], [ %556, %b_33 ]
  %407 = phi i32 [ %371, %b_32 ], [ %371, %b_33 ]
  %408 = phi i32 [ %372, %b_32 ], [ %372, %b_33 ]
  %409 = phi i32 [ %373, %b_32 ], [ %373, %b_33 ]
  %410 = phi i32 [ %374, %b_32 ], [ %374, %b_33 ]
  %411 = phi i32 [ %627, %b_32 ], [ %558, %b_33 ]
  %412 = phi i32 [ %629, %b_32 ], [ %560, %b_33 ]
  %413 = phi i32 [ %633, %b_32 ], [ %564, %b_33 ]
  %414 = phi i32 [ %636, %b_32 ], [ %569, %b_33 ]
  %415 = phi i32 [ %379, %b_32 ], [ %379, %b_33 ]
  %416 = phi i32 [ %380, %b_32 ], [ %380, %b_33 ]
  %417 = phi i64 [ %381, %b_32 ], [ %523, %b_33 ]
  %418 = phi i64 [ %391, %b_32 ], [ %391, %b_33 ]
  %419 = add i32 %399, 4
  call void @set_i32(i32 %419, i32 %400)
  %420 = add i32 %414, 1
  %421 = trunc i32 %420 to i8
  %422 = add i32 %408, 0
  call void @set_i8(i32 %422, i8 %421)
  %423 = add i32 %395, 0
  %424 = call i64 @get_i64(i32 %423)
  %425 = add i64 %424, %418
  %426 = add i32 %395, 0
  call void @set_i64(i32 %426, i64 %425)
  %427 = icmp ult i32 %397, %403
  %428 = zext i1 %427 to i32
  %429 = icmp ne i32 %428, 0
  br i1 %429, label %b_3, label %b_34

b_27:                                             ; preds = %b_25
  %430 = icmp ult i32 %361, %363
  %431 = zext i1 %430 to i32
  %432 = icmp ne i32 %431, 0
  br i1 %432, label %b_7, label %b_30

b_28:                                             ; preds = %b_25
  br label %b_29

b_29:                                             ; preds = %b_28
  %433 = add i32 %371, 0
  %434 = call i64 @get_i64(i32 %433)
  %435 = add i32 %373, 0
  call void @set_i64(i32 %435, i64 %434)
  %436 = add i32 %373, 8
  %437 = add i32 %371, 8
  %438 = add i32 %437, 0
  %439 = call i64 @get_i64(i32 %438)
  %440 = add i32 %436, 0
  call void @set_i64(i32 %440, i64 %439)
  %441 = add i32 %373, 16
  %442 = add i32 %371, 16
  %443 = add i32 %442, 0
  %444 = call i64 @get_i64(i32 %443)
  %445 = add i32 %441, 0
  call void @set_i64(i32 %445, i64 %444)
  %446 = add i32 %373, 24
  %447 = add i32 %371, 24
  %448 = add i32 %447, 0
  %449 = call i64 @get_i64(i32 %448)
  %450 = add i32 %446, 0
  call void @set_i64(i32 %450, i64 %449)
  %451 = add i32 %362, 112
  call void @set_i64(i32 %451, i64 %381)
  %452 = add i32 %359, 106
  %453 = call i8 @get_i8(i32 %452)
  %454 = zext i8 %453 to i32
  %455 = call i32 @wasmf_internal_59(i32 %380, i32 66)
  %456 = trunc i32 %454 to i8
  %457 = add i32 %362, 218
  call void @set_i8(i32 %457, i8 %456)
  %458 = add i32 %362, 112
  %459 = call i32 @wasmf_internal_21(i32 %458, i32 %360, i32 %363)
  %460 = add i32 %373, 0
  %461 = call i64 @get_i64(i32 %460)
  %462 = add i32 %374, 0
  call void @set_i64(i32 %462, i64 %461)
  %463 = add i32 %374, 8
  %464 = add i32 %436, 0
  %465 = call i64 @get_i64(i32 %464)
  %466 = add i32 %463, 0
  call void @set_i64(i32 %466, i64 %465)
  %467 = add i32 %374, 16
  %468 = add i32 %441, 0
  %469 = call i64 @get_i64(i32 %468)
  %470 = add i32 %467, 0
  call void @set_i64(i32 %470, i64 %469)
  %471 = add i32 %374, 24
  %472 = add i32 %446, 0
  %473 = call i64 @get_i64(i32 %472)
  %474 = add i32 %471, 0
  call void @set_i64(i32 %474, i64 %473)
  %475 = add i32 %455, 0
  %476 = call i64 @get_i64(i32 %475)
  %477 = add i32 %368, 0
  call void @set_i64(i32 %477, i64 %476)
  %478 = add i32 %368, 8
  %479 = add i32 %455, 8
  %480 = add i32 %479, 0
  %481 = call i64 @get_i64(i32 %480)
  %482 = add i32 %478, 0
  call void @set_i64(i32 %482, i64 %481)
  %483 = add i32 %368, 16
  %484 = add i32 %455, 16
  %485 = add i32 %484, 0
  %486 = call i64 @get_i64(i32 %485)
  %487 = add i32 %483, 0
  call void @set_i64(i32 %487, i64 %486)
  %488 = add i32 %368, 24
  %489 = add i32 %455, 24
  %490 = add i32 %489, 0
  %491 = call i64 @get_i64(i32 %490)
  %492 = add i32 %488, 0
  call void @set_i64(i32 %492, i64 %491)
  %493 = add i32 %368, 32
  %494 = add i32 %455, 32
  %495 = add i32 %494, 0
  %496 = call i64 @get_i64(i32 %495)
  %497 = add i32 %493, 0
  call void @set_i64(i32 %497, i64 %496)
  %498 = add i32 %368, 40
  %499 = add i32 %455, 40
  %500 = add i32 %499, 0
  %501 = call i64 @get_i64(i32 %500)
  %502 = add i32 %498, 0
  call void @set_i64(i32 %502, i64 %501)
  %503 = add i32 %368, 48
  %504 = add i32 %455, 48
  %505 = add i32 %504, 0
  %506 = call i64 @get_i64(i32 %505)
  %507 = add i32 %503, 0
  call void @set_i64(i32 %507, i64 %506)
  %508 = add i32 %368, 56
  %509 = add i32 %455, 56
  %510 = add i32 %509, 0
  %511 = call i64 @get_i64(i32 %510)
  %512 = add i32 %508, 0
  call void @set_i64(i32 %512, i64 %511)
  %513 = add i32 %362, 218
  %514 = call i8 @get_i8(i32 %513)
  %515 = zext i8 %514 to i32
  %516 = add i32 %362, 217
  %517 = call i8 @get_i8(i32 %516)
  %518 = zext i8 %517 to i32
  %519 = add i32 %362, 216
  %520 = call i8 @get_i8(i32 %519)
  %521 = zext i8 %520 to i32
  %522 = add i32 %362, 112
  %523 = call i64 @get_i64(i32 %522)
  %524 = add i32 %362, 0
  call void @set_i64(i32 %524, i64 %523)
  %525 = trunc i32 %521 to i8
  %526 = add i32 %362, 104
  call void @set_i8(i32 %526, i8 %525)
  %527 = icmp eq i32 0, %518
  %528 = zext i1 %527 to i32
  %529 = or i32 %515, %528
  %530 = or i32 %529, 2
  %531 = trunc i32 %530 to i8
  %532 = add i32 %362, 105
  call void @set_i8(i32 %532, i8 %531)
  %533 = add i32 %362, 248
  %534 = add i32 %446, 0
  %535 = call i64 @get_i64(i32 %534)
  %536 = add i32 %533, 0
  call void @set_i64(i32 %536, i64 %535)
  %537 = add i32 %362, 240
  %538 = add i32 %441, 0
  %539 = call i64 @get_i64(i32 %538)
  %540 = add i32 %537, 0
  call void @set_i64(i32 %540, i64 %539)
  %541 = add i32 %362, 232
  %542 = add i32 %436, 0
  %543 = call i64 @get_i64(i32 %542)
  %544 = add i32 %541, 0
  call void @set_i64(i32 %544, i64 %543)
  %545 = add i32 %373, 0
  %546 = call i64 @get_i64(i32 %545)
  %547 = add i32 %362, 224
  call void @set_i64(i32 %547, i64 %546)
  %548 = add i32 %362, 224
  call void @wasmf_internal_3(i32 %548, i32 %368, i32 %521, i64 %523, i32 %530)
  %549 = add i32 %533, 0
  %550 = call i32 @get_i32(i32 %549)
  %551 = add i32 %537, 0
  %552 = call i32 @get_i32(i32 %551)
  %553 = add i32 %541, 0
  %554 = call i32 @get_i32(i32 %553)
  %555 = add i32 %362, 252
  %556 = call i32 @get_i32(i32 %555)
  %557 = add i32 %362, 244
  %558 = call i32 @get_i32(i32 %557)
  %559 = add i32 %362, 236
  %560 = call i32 @get_i32(i32 %559)
  %561 = add i32 %362, 228
  %562 = call i32 @get_i32(i32 %561)
  %563 = add i32 %362, 224
  %564 = call i32 @get_i32(i32 %563)
  %565 = add i32 %359, 0
  %566 = call i64 @get_i64(i32 %565)
  call void @wasmf_internal_9(i32 %359, i64 %566)
  %567 = add i32 %372, 0
  %568 = call i8 @get_i8(i32 %567)
  %569 = zext i8 %568 to i32
  %570 = icmp uge i32 %569, 55
  %571 = zext i1 %570 to i32
  %572 = icmp ne i32 %571, 0
  br i1 %572, label %b_5, label %b_33

b_30:                                             ; preds = %b_27
  %573 = add i32 %362, 112
  %574 = add i32 %359, 106
  %575 = call i8 @get_i8(i32 %574)
  %576 = zext i8 %575 to i32
  call void @wasmf_internal_19(i32 %573, i32 %360, i32 %363, i32 %371, i64 %381, i32 %576)
  %577 = add i32 %359, 0
  %578 = call i64 @get_i64(i32 %577)
  call void @wasmf_internal_9(i32 %359, i64 %578)
  %579 = add i32 %362, 140
  %580 = call i32 @get_i32(i32 %579)
  %581 = add i32 %362, 136
  %582 = call i32 @get_i32(i32 %581)
  %583 = add i32 %362, 132
  %584 = call i32 @get_i32(i32 %583)
  %585 = add i32 %362, 128
  %586 = call i32 @get_i32(i32 %585)
  %587 = add i32 %362, 124
  %588 = call i32 @get_i32(i32 %587)
  %589 = add i32 %362, 120
  %590 = call i32 @get_i32(i32 %589)
  %591 = add i32 %362, 116
  %592 = call i32 @get_i32(i32 %591)
  %593 = add i32 %362, 112
  %594 = call i32 @get_i32(i32 %593)
  %595 = add i32 %372, 0
  %596 = call i8 @get_i8(i32 %595)
  %597 = zext i8 %596 to i32
  %598 = icmp uge i32 %597, 55
  %599 = zext i1 %598 to i32
  %600 = icmp ne i32 %599, 0
  br i1 %600, label %b_1, label %b_31

b_31:                                             ; preds = %b_30
  %601 = shl i32 %597, 5
  %602 = add i32 %379, %601
  %603 = add i32 %602, 0
  call void @set_i32(i32 %603, i32 %594)
  %604 = add i32 %602, 28
  call void @set_i32(i32 %604, i32 %580)
  %605 = add i32 %602, 24
  call void @set_i32(i32 %605, i32 %582)
  %606 = add i32 %602, 20
  call void @set_i32(i32 %606, i32 %584)
  %607 = add i32 %602, 16
  call void @set_i32(i32 %607, i32 %586)
  %608 = add i32 %602, 12
  call void @set_i32(i32 %608, i32 %588)
  %609 = add i32 %602, 8
  call void @set_i32(i32 %609, i32 %590)
  %610 = add i32 %602, 4
  call void @set_i32(i32 %610, i32 %592)
  %611 = add i32 %597, 1
  %612 = trunc i32 %611 to i8
  %613 = add i32 %372, 0
  call void @set_i8(i32 %613, i8 %612)
  %614 = add i32 %359, 0
  %615 = call i64 @get_i64(i32 %614)
  %616 = lshr i64 %391, 1
  %617 = add i64 %615, %616
  call void @wasmf_internal_9(i32 %359, i64 %617)
  %618 = add i32 %362, 172
  %619 = call i32 @get_i32(i32 %618)
  %620 = add i32 %362, 168
  %621 = call i32 @get_i32(i32 %620)
  %622 = add i32 %362, 164
  %623 = call i32 @get_i32(i32 %622)
  %624 = add i32 %362, 160
  %625 = call i32 @get_i32(i32 %624)
  %626 = add i32 %362, 156
  %627 = call i32 @get_i32(i32 %626)
  %628 = add i32 %362, 152
  %629 = call i32 @get_i32(i32 %628)
  %630 = add i32 %362, 148
  %631 = call i32 @get_i32(i32 %630)
  %632 = add i32 %362, 144
  %633 = call i32 @get_i32(i32 %632)
  %634 = add i32 %372, 0
  %635 = call i8 @get_i8(i32 %634)
  %636 = zext i8 %635 to i32
  %637 = icmp uge i32 %636, 55
  %638 = zext i1 %637 to i32
  %639 = icmp ne i32 %638, 0
  br i1 %639, label %b_1, label %b_32

b_32:                                             ; preds = %b_31
  %640 = shl i32 %636, 5
  %641 = add i32 %379, %640
  %642 = add i32 %641, 0
  call void @set_i32(i32 %642, i32 %633)
  %643 = add i32 %641, 28
  call void @set_i32(i32 %643, i32 %619)
  %644 = add i32 %641, 24
  call void @set_i32(i32 %644, i32 %621)
  %645 = add i32 %641, 20
  call void @set_i32(i32 %645, i32 %623)
  %646 = add i32 %641, 16
  call void @set_i32(i32 %646, i32 %625)
  %647 = add i32 %641, 12
  call void @set_i32(i32 %647, i32 %627)
  %648 = add i32 %641, 8
  call void @set_i32(i32 %648, i32 %629)
  br label %b_26

b_33:                                             ; preds = %b_29
  %649 = shl i32 %569, 5
  %650 = add i32 %379, %649
  %651 = add i32 %650, 0
  call void @set_i32(i32 %651, i32 %564)
  %652 = add i32 %650, 28
  call void @set_i32(i32 %652, i32 %556)
  %653 = add i32 %650, 24
  call void @set_i32(i32 %653, i32 %550)
  %654 = add i32 %650, 20
  call void @set_i32(i32 %654, i32 %558)
  %655 = add i32 %650, 16
  call void @set_i32(i32 %655, i32 %552)
  %656 = add i32 %650, 12
  call void @set_i32(i32 %656, i32 %560)
  %657 = add i32 %650, 8
  call void @set_i32(i32 %657, i32 %554)
  br label %b_26

b_34:                                             ; preds = %b_26
  %658 = add i32 %396, %403
  %659 = sub i32 %397, %403
  %660 = icmp ugt i32 %659, 1024
  %661 = zext i1 %660 to i32
  %662 = icmp ne i32 %661, 0
  br i1 %662, label %b_20, label %b_35

b_35:                                             ; preds = %b_34
  br label %b_21

b_36:                                             ; preds = %b_19
  %663 = call i32 @wasmf_internal_21(i32 %302, i32 %303, i32 %304)
  %664 = add i32 %302, 0
  %665 = call i64 @get_i64(i32 %664)
  call void @wasmf_internal_9(i32 %302, i64 %665)
  br label %b_11
}

; Function Attrs: nounwind
define void @wasmf_internal_5(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 160
  store i32 %3, i32* @wasmg_internal_0, align 4
  br label %b_0

exit:                                             ; preds = %b_1
  ret void

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_14, %b_7
  %4 = phi i32 [ %0, %b_14 ], [ %29, %b_7 ]
  %5 = phi i32 [ %1, %b_14 ], [ %30, %b_7 ]
  %6 = phi i32 [ %3, %b_14 ], [ %31, %b_7 ]
  %7 = phi i32 [ %241, %b_14 ], [ %32, %b_7 ]
  %8 = phi i32 [ %238, %b_14 ], [ %33, %b_7 ]
  %9 = phi i32 [ %235, %b_14 ], [ %34, %b_7 ]
  %10 = phi i32 [ %89, %b_14 ], [ %35, %b_7 ]
  %11 = phi i32 [ 0, %b_14 ], [ %36, %b_7 ]
  %12 = phi i32 [ 0, %b_14 ], [ %37, %b_7 ]
  %13 = phi i32 [ 0, %b_14 ], [ %38, %b_7 ]
  %14 = phi i32 [ 0, %b_14 ], [ %39, %b_7 ]
  %15 = phi i32 [ 0, %b_14 ], [ %40, %b_7 ]
  %16 = phi i32 [ 0, %b_14 ], [ %41, %b_7 ]
  %17 = phi i32 [ 0, %b_14 ], [ %42, %b_7 ]
  %18 = phi i32 [ 0, %b_14 ], [ %43, %b_7 ]
  %19 = phi i32 [ 0, %b_14 ], [ %44, %b_7 ]
  %20 = phi i32 [ 0, %b_14 ], [ %45, %b_7 ]
  %21 = phi i32 [ 0, %b_14 ], [ %46, %b_7 ]
  %22 = phi i64 [ 0, %b_14 ], [ %47, %b_7 ]
  %23 = phi i64 [ 0, %b_14 ], [ %48, %b_7 ]
  %24 = phi i64 [ 0, %b_14 ], [ %49, %b_7 ]
  %25 = phi i64 [ 0, %b_14 ], [ %50, %b_7 ]
  %26 = phi i64 [ 0, %b_14 ], [ %51, %b_7 ]
  %27 = phi i64 [ 0, %b_14 ], [ %52, %b_7 ]
  %28 = add i32 %6, 160
  store i32 %28, i32* @wasmg_internal_0, align 4
  br label %exit

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_18
  call void @wasmf_internal_36(i32 %364, i32 %357, i32 1049160)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_15
  call void @wasmf_internal_36(i32 %253, i32 %89, i32 1049144)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_6:                                              ; preds = %b_4
  br label %b_8

b_7:                                              ; preds = %b_19, %b_16
  %29 = phi i32 [ %0, %b_16 ], [ %351, %b_19 ]
  %30 = phi i32 [ %1, %b_16 ], [ %468, %b_19 ]
  %31 = phi i32 [ %3, %b_16 ], [ %353, %b_19 ]
  %32 = phi i32 [ %307, %b_16 ], [ %355, %b_19 ]
  %33 = phi i32 [ %337, %b_16 ], [ %355, %b_19 ]
  %34 = phi i32 [ %253, %b_16 ], [ %389, %b_19 ]
  %35 = phi i32 [ %89, %b_16 ], [ %357, %b_19 ]
  %36 = phi i32 [ %163, %b_16 ], [ %388, %b_19 ]
  %37 = phi i32 [ %298, %b_16 ], [ %359, %b_19 ]
  %38 = phi i32 [ 0, %b_16 ], [ %360, %b_19 ]
  %39 = phi i32 [ 0, %b_16 ], [ %361, %b_19 ]
  %40 = phi i32 [ 64, %b_16 ], [ 64, %b_19 ]
  %41 = phi i32 [ 0, %b_16 ], [ %363, %b_19 ]
  %42 = phi i32 [ 0, %b_16 ], [ %469, %b_19 ]
  %43 = phi i32 [ %272, %b_16 ], [ %379, %b_19 ]
  %44 = phi i32 [ %279, %b_16 ], [ %384, %b_19 ]
  %45 = phi i32 [ 0, %b_16 ], [ %378, %b_19 ]
  %46 = phi i32 [ 0, %b_16 ], [ %383, %b_19 ]
  %47 = phi i64 [ 0, %b_16 ], [ 0, %b_19 ]
  %48 = phi i64 [ %300, %b_16 ], [ %402, %b_19 ]
  %49 = phi i64 [ %302, %b_16 ], [ %404, %b_19 ]
  %50 = phi i64 [ %304, %b_16 ], [ %418, %b_19 ]
  %51 = phi i64 [ 0, %b_16 ], [ %398, %b_19 ]
  %52 = phi i64 [ 0, %b_16 ], [ %400, %b_19 ]
  %53 = add i32 %31, 8
  %54 = call i32 @wasmf_internal_53(i32 %29, i32 %53, i32 112)
  br label %b_1

b_8:                                              ; preds = %b_6
  br label %b_10

b_9:                                              ; preds = %b_17, %b_11
  %55 = phi i32 [ %0, %b_17 ], [ %0, %b_11 ]
  %56 = phi i32 [ %1, %b_17 ], [ %1, %b_11 ]
  %57 = phi i32 [ %3, %b_17 ], [ %3, %b_11 ]
  %58 = phi i32 [ %337, %b_17 ], [ %156, %b_11 ]
  %59 = phi i32 [ %337, %b_17 ], [ %161, %b_11 ]
  %60 = phi i32 [ %253, %b_17 ], [ %89, %b_11 ]
  %61 = phi i32 [ %89, %b_17 ], [ %89, %b_11 ]
  %62 = phi i32 [ %163, %b_17 ], [ %163, %b_11 ]
  %63 = phi i32 [ %298, %b_17 ], [ 0, %b_11 ]
  %64 = phi i32 [ 0, %b_17 ], [ 0, %b_11 ]
  %65 = phi i32 [ 0, %b_17 ], [ 0, %b_11 ]
  %66 = phi i32 [ 64, %b_17 ], [ %166, %b_11 ]
  %67 = phi i32 [ 0, %b_17 ], [ 0, %b_11 ]
  %68 = phi i32 [ 0, %b_17 ], [ 0, %b_11 ]
  %69 = phi i32 [ %272, %b_17 ], [ 0, %b_11 ]
  %70 = phi i32 [ %279, %b_17 ], [ 0, %b_11 ]
  %71 = phi i32 [ 0, %b_17 ], [ 0, %b_11 ]
  %72 = phi i32 [ 0, %b_17 ], [ 0, %b_11 ]
  %73 = phi i64 [ 0, %b_17 ], [ %142, %b_11 ]
  %74 = phi i64 [ %300, %b_17 ], [ 0, %b_11 ]
  %75 = phi i64 [ %302, %b_17 ], [ 0, %b_11 ]
  %76 = phi i64 [ %304, %b_17 ], [ 0, %b_11 ]
  %77 = phi i64 [ 0, %b_17 ], [ 0, %b_11 ]
  %78 = phi i64 [ 0, %b_17 ], [ 0, %b_11 ]
  %79 = phi i32 [ %350, %b_17 ], [ %162, %b_11 ]
  %80 = add i32 %56, 112
  %81 = add i32 %60, -1
  %82 = shl i32 %81, 5
  %83 = add i32 %62, %82
  %84 = add i32 %57, 48
  %85 = add i32 %57, 114
  br label %b_18

b_10:                                             ; preds = %b_8
  %86 = add i32 %1, 1904
  %87 = add i32 %86, 0
  %88 = call i8 @get_i8(i32 %87)
  %89 = zext i8 %88 to i32
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %b_12, label %b_13

b_11:                                             ; preds = %b_12
  %91 = add i32 %3, 24
  %92 = add i32 %1, 16
  %93 = add i32 %92, 0
  %94 = call i64 @get_i64(i32 %93)
  %95 = add i32 %91, 0
  call void @set_i64(i32 %95, i64 %94)
  %96 = add i32 %3, 32
  %97 = add i32 %1, 24
  %98 = add i32 %97, 0
  %99 = call i64 @get_i64(i32 %98)
  %100 = add i32 %96, 0
  call void @set_i64(i32 %100, i64 %99)
  %101 = add i32 %3, 40
  %102 = add i32 %1, 32
  %103 = add i32 %102, 0
  %104 = call i64 @get_i64(i32 %103)
  %105 = add i32 %101, 0
  call void @set_i64(i32 %105, i64 %104)
  %106 = add i32 %3, 56
  %107 = add i32 %1, 48
  %108 = add i32 %107, 0
  %109 = call i64 @get_i64(i32 %108)
  %110 = add i32 %106, 0
  call void @set_i64(i32 %110, i64 %109)
  %111 = sub i32 %3, -64
  %112 = add i32 %1, 56
  %113 = add i32 %112, 0
  %114 = call i64 @get_i64(i32 %113)
  %115 = add i32 %111, 0
  call void @set_i64(i32 %115, i64 %114)
  %116 = add i32 %3, 72
  %117 = sub i32 %1, -64
  %118 = add i32 %117, 0
  %119 = call i64 @get_i64(i32 %118)
  %120 = add i32 %116, 0
  call void @set_i64(i32 %120, i64 %119)
  %121 = add i32 %3, 80
  %122 = add i32 %1, 72
  %123 = add i32 %122, 0
  %124 = call i64 @get_i64(i32 %123)
  %125 = add i32 %121, 0
  call void @set_i64(i32 %125, i64 %124)
  %126 = add i32 %3, 88
  %127 = add i32 %1, 80
  %128 = add i32 %127, 0
  %129 = call i64 @get_i64(i32 %128)
  %130 = add i32 %126, 0
  call void @set_i64(i32 %130, i64 %129)
  %131 = add i32 %3, 96
  %132 = add i32 %1, 88
  %133 = add i32 %132, 0
  %134 = call i64 @get_i64(i32 %133)
  %135 = add i32 %131, 0
  call void @set_i64(i32 %135, i64 %134)
  %136 = add i32 %3, 104
  %137 = add i32 %1, 96
  %138 = add i32 %137, 0
  %139 = call i64 @get_i64(i32 %138)
  %140 = add i32 %136, 0
  call void @set_i64(i32 %140, i64 %139)
  %141 = add i32 %1, 0
  %142 = call i64 @get_i64(i32 %141)
  %143 = add i32 %3, 8
  call void @set_i64(i32 %143, i64 %142)
  %144 = add i32 %1, 8
  %145 = call i64 @get_i64(i32 %144)
  %146 = add i32 %3, 16
  call void @set_i64(i32 %146, i64 %145)
  %147 = add i32 %1, 40
  %148 = call i64 @get_i64(i32 %147)
  %149 = add i32 %3, 48
  call void @set_i64(i32 %149, i64 %148)
  %150 = add i32 %1, 106
  %151 = call i8 @get_i8(i32 %150)
  %152 = zext i8 %151 to i32
  %153 = icmp eq i32 0, %171
  %154 = zext i1 %153 to i32
  %155 = or i32 %152, %154
  %156 = or i32 %155, 2
  %157 = trunc i32 %156 to i8
  %158 = add i32 %3, 113
  call void @set_i8(i32 %158, i8 %157)
  %159 = trunc i32 %166 to i8
  %160 = add i32 %3, 112
  call void @set_i8(i32 %160, i8 %159)
  %161 = or i32 %152, 4
  %162 = add i32 %3, 16
  br label %b_9

b_12:                                             ; preds = %b_10
  %163 = add i32 %1, 144
  %164 = add i32 %1, 104
  %165 = call i8 @get_i8(i32 %164)
  %166 = zext i8 %165 to i32
  %167 = sub i32 0, %166
  %168 = add i32 %1, 105
  %169 = add i32 %168, 0
  %170 = call i8 @get_i8(i32 %169)
  %171 = zext i8 %170 to i32
  %172 = shl i32 %171, 6
  %173 = icmp ne i32 %167, %172
  %174 = zext i1 %173 to i32
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %b_11, label %b_15

b_13:                                             ; preds = %b_10
  br label %b_14

b_14:                                             ; preds = %b_13
  %176 = add i32 %1, 8
  %177 = call i64 @get_i64(i32 %176)
  %178 = add i32 %0, 8
  call void @set_i64(i32 %178, i64 %177)
  %179 = add i32 %1, 40
  %180 = call i64 @get_i64(i32 %179)
  %181 = add i32 %0, 40
  call void @set_i64(i32 %181, i64 %180)
  %182 = add i32 %0, 16
  %183 = add i32 %1, 16
  %184 = add i32 %183, 0
  %185 = call i64 @get_i64(i32 %184)
  %186 = add i32 %182, 0
  call void @set_i64(i32 %186, i64 %185)
  %187 = add i32 %0, 24
  %188 = add i32 %1, 24
  %189 = add i32 %188, 0
  %190 = call i64 @get_i64(i32 %189)
  %191 = add i32 %187, 0
  call void @set_i64(i32 %191, i64 %190)
  %192 = add i32 %0, 32
  %193 = add i32 %1, 32
  %194 = add i32 %193, 0
  %195 = call i64 @get_i64(i32 %194)
  %196 = add i32 %192, 0
  call void @set_i64(i32 %196, i64 %195)
  %197 = add i32 %0, 48
  %198 = add i32 %1, 48
  %199 = add i32 %198, 0
  %200 = call i64 @get_i64(i32 %199)
  %201 = add i32 %197, 0
  call void @set_i64(i32 %201, i64 %200)
  %202 = add i32 %0, 56
  %203 = add i32 %1, 56
  %204 = add i32 %203, 0
  %205 = call i64 @get_i64(i32 %204)
  %206 = add i32 %202, 0
  call void @set_i64(i32 %206, i64 %205)
  %207 = sub i32 %0, -64
  %208 = sub i32 %1, -64
  %209 = add i32 %208, 0
  %210 = call i64 @get_i64(i32 %209)
  %211 = add i32 %207, 0
  call void @set_i64(i32 %211, i64 %210)
  %212 = add i32 %0, 72
  %213 = add i32 %1, 72
  %214 = add i32 %213, 0
  %215 = call i64 @get_i64(i32 %214)
  %216 = add i32 %212, 0
  call void @set_i64(i32 %216, i64 %215)
  %217 = add i32 %0, 80
  %218 = add i32 %1, 80
  %219 = add i32 %218, 0
  %220 = call i64 @get_i64(i32 %219)
  %221 = add i32 %217, 0
  call void @set_i64(i32 %221, i64 %220)
  %222 = add i32 %0, 88
  %223 = add i32 %1, 88
  %224 = add i32 %223, 0
  %225 = call i64 @get_i64(i32 %224)
  %226 = add i32 %222, 0
  call void @set_i64(i32 %226, i64 %225)
  %227 = add i32 %0, 96
  %228 = add i32 %1, 96
  %229 = add i32 %228, 0
  %230 = call i64 @get_i64(i32 %229)
  %231 = add i32 %227, 0
  call void @set_i64(i32 %231, i64 %230)
  %232 = add i32 %1, 105
  %233 = add i32 %232, 0
  %234 = call i8 @get_i8(i32 %233)
  %235 = zext i8 %234 to i32
  %236 = add i32 %1, 106
  %237 = call i8 @get_i8(i32 %236)
  %238 = zext i8 %237 to i32
  %239 = add i32 %1, 104
  %240 = call i8 @get_i8(i32 %239)
  %241 = zext i8 %240 to i32
  %242 = add i32 %1, 0
  %243 = call i64 @get_i64(i32 %242)
  %244 = add i32 %0, 0
  call void @set_i64(i32 %244, i64 %243)
  %245 = trunc i32 %241 to i8
  %246 = add i32 %0, 104
  call void @set_i8(i32 %246, i8 %245)
  %247 = icmp eq i32 0, %235
  %248 = zext i1 %247 to i32
  %249 = or i32 %238, %248
  %250 = or i32 %249, 2
  %251 = trunc i32 %250 to i8
  %252 = add i32 %0, 105
  call void @set_i8(i32 %252, i8 %251)
  br label %b_1

b_15:                                             ; preds = %b_12
  %253 = add i32 %89, -2
  %254 = icmp ule i32 %89, 1
  %255 = zext i1 %254 to i32
  %256 = icmp ne i32 %255, 0
  br i1 %256, label %b_5, label %b_16

b_16:                                             ; preds = %b_15
  %257 = add i32 %3, 24
  %258 = add i32 %1, 120
  %259 = add i32 %258, 0
  %260 = call i64 @get_i64(i32 %259)
  %261 = add i32 %257, 0
  call void @set_i64(i32 %261, i64 %260)
  %262 = add i32 %3, 32
  %263 = add i32 %1, 128
  %264 = add i32 %263, 0
  %265 = call i64 @get_i64(i32 %264)
  %266 = add i32 %262, 0
  call void @set_i64(i32 %266, i64 %265)
  %267 = add i32 %3, 40
  %268 = add i32 %1, 136
  %269 = add i32 %268, 0
  %270 = call i64 @get_i64(i32 %269)
  %271 = add i32 %267, 0
  call void @set_i64(i32 %271, i64 %270)
  %272 = add i32 %3, 136
  %273 = shl i32 %253, 5
  %274 = add i32 %163, %273
  %275 = add i32 %274, 8
  %276 = add i32 %275, 0
  %277 = call i64 @get_i64(i32 %276)
  %278 = add i32 %272, 0
  call void @set_i64(i32 %278, i64 %277)
  %279 = add i32 %3, 144
  %280 = add i32 %274, 16
  %281 = add i32 %280, 0
  %282 = call i64 @get_i64(i32 %281)
  %283 = add i32 %279, 0
  call void @set_i64(i32 %283, i64 %282)
  %284 = add i32 %3, 152
  %285 = add i32 %274, 24
  %286 = add i32 %285, 0
  %287 = call i64 @get_i64(i32 %286)
  %288 = add i32 %284, 0
  call void @set_i64(i32 %288, i64 %287)
  %289 = add i32 %3, 8
  call void @set_i64(i32 %289, i64 0)
  %290 = add i32 %1, 112
  %291 = call i64 @get_i64(i32 %290)
  %292 = add i32 %3, 16
  call void @set_i64(i32 %292, i64 %291)
  %293 = add i32 %274, 0
  %294 = call i64 @get_i64(i32 %293)
  %295 = add i32 %3, 128
  call void @set_i64(i32 %295, i64 %294)
  %296 = shl i32 %89, 5
  %297 = add i32 %296, %163
  %298 = add i32 %297, -32
  %299 = add i32 %298, 24
  %300 = call i64 @get_i64(i32 %299)
  %301 = add i32 %298, 16
  %302 = call i64 @get_i64(i32 %301)
  %303 = add i32 %298, 8
  %304 = call i64 @get_i64(i32 %303)
  %305 = add i32 %1, 106
  %306 = call i8 @get_i8(i32 %305)
  %307 = zext i8 %306 to i32
  %308 = add i32 %3, 80
  %309 = add i32 %298, 0
  %310 = call i64 @get_i64(i32 %309)
  %311 = add i32 %308, 0
  call void @set_i64(i32 %311, i64 %310)
  %312 = add i32 %3, 88
  %313 = add i32 %312, 0
  call void @set_i64(i32 %313, i64 %304)
  %314 = add i32 %3, 96
  %315 = add i32 %314, 0
  call void @set_i64(i32 %315, i64 %302)
  %316 = add i32 %3, 104
  %317 = add i32 %316, 0
  call void @set_i64(i32 %317, i64 %300)
  %318 = add i32 %3, 72
  %319 = add i32 %284, 0
  %320 = call i64 @get_i64(i32 %319)
  %321 = add i32 %318, 0
  call void @set_i64(i32 %321, i64 %320)
  %322 = sub i32 %3, -64
  %323 = add i32 %279, 0
  %324 = call i64 @get_i64(i32 %323)
  %325 = add i32 %322, 0
  call void @set_i64(i32 %325, i64 %324)
  %326 = add i32 %3, 56
  %327 = add i32 %272, 0
  %328 = call i64 @get_i64(i32 %327)
  %329 = add i32 %326, 0
  call void @set_i64(i32 %329, i64 %328)
  %330 = add i32 %3, 118
  %331 = add i32 %3, 126
  %332 = add i32 %331, 0
  %333 = call i16 @get_i16(i32 %332)
  %334 = zext i16 %333 to i32
  %335 = trunc i32 %334 to i16
  %336 = add i32 %330, 0
  call void @set_i16(i32 %336, i16 %335)
  %337 = or i32 %307, 4
  %338 = trunc i32 %337 to i8
  %339 = add i32 %3, 113
  call void @set_i8(i32 %339, i8 %338)
  %340 = add i32 %3, 112
  call void @set_i8(i32 %340, i8 64)
  %341 = add i32 %3, 128
  %342 = call i64 @get_i64(i32 %341)
  %343 = add i32 %3, 48
  call void @set_i64(i32 %343, i64 %342)
  %344 = add i32 %3, 122
  %345 = call i32 @get_i32(i32 %344)
  %346 = add i32 %3, 114
  call void @set_i32(i32 %346, i32 %345)
  %347 = icmp eq i32 0, %253
  %348 = zext i1 %347 to i32
  %349 = icmp ne i32 %348, 0
  br i1 %349, label %b_7, label %b_17

b_17:                                             ; preds = %b_16
  %350 = add i32 %3, 16
  br label %b_9

b_18:                                             ; preds = %b_20, %b_9
  %351 = phi i32 [ %55, %b_9 ], [ %351, %b_20 ]
  %352 = phi i32 [ %83, %b_9 ], [ %468, %b_20 ]
  %353 = phi i32 [ %57, %b_9 ], [ %353, %b_20 ]
  %354 = phi i32 [ %58, %b_9 ], [ %355, %b_20 ]
  %355 = phi i32 [ %59, %b_9 ], [ %355, %b_20 ]
  %356 = phi i32 [ %60, %b_9 ], [ %389, %b_20 ]
  %357 = phi i32 [ %61, %b_9 ], [ %357, %b_20 ]
  %358 = phi i32 [ %62, %b_9 ], [ %388, %b_20 ]
  %359 = phi i32 [ %85, %b_9 ], [ %359, %b_20 ]
  %360 = phi i32 [ %79, %b_9 ], [ %360, %b_20 ]
  %361 = phi i32 [ %84, %b_9 ], [ %361, %b_20 ]
  %362 = phi i32 [ %66, %b_9 ], [ 64, %b_20 ]
  %363 = phi i32 [ %80, %b_9 ], [ %363, %b_20 ]
  %364 = phi i32 [ %81, %b_9 ], [ %469, %b_20 ]
  %365 = phi i32 [ %69, %b_9 ], [ %379, %b_20 ]
  %366 = phi i32 [ %70, %b_9 ], [ %384, %b_20 ]
  %367 = phi i32 [ %71, %b_9 ], [ %378, %b_20 ]
  %368 = phi i32 [ %72, %b_9 ], [ %383, %b_20 ]
  %369 = phi i64 [ %73, %b_9 ], [ 0, %b_20 ]
  %370 = phi i64 [ %74, %b_9 ], [ %402, %b_20 ]
  %371 = phi i64 [ %75, %b_9 ], [ %404, %b_20 ]
  %372 = phi i64 [ %76, %b_9 ], [ %418, %b_20 ]
  %373 = phi i64 [ %77, %b_9 ], [ %398, %b_20 ]
  %374 = phi i64 [ %78, %b_9 ], [ %400, %b_20 ]
  %375 = icmp uge i32 %364, %357
  %376 = zext i1 %375 to i32
  %377 = icmp ne i32 %376, 0
  br i1 %377, label %b_3, label %b_20

b_19:                                             ; preds = %b_21
  br label %b_7

b_20:                                             ; preds = %b_18
  %378 = add i32 %353, 152
  %379 = add i32 %360, 24
  %380 = add i32 %379, 0
  %381 = call i64 @get_i64(i32 %380)
  %382 = add i32 %378, 0
  call void @set_i64(i32 %382, i64 %381)
  %383 = add i32 %353, 144
  %384 = add i32 %360, 16
  %385 = add i32 %384, 0
  %386 = call i64 @get_i64(i32 %385)
  %387 = add i32 %383, 0
  call void @set_i64(i32 %387, i64 %386)
  %388 = add i32 %353, 136
  %389 = add i32 %360, 8
  %390 = add i32 %389, 0
  %391 = call i64 @get_i64(i32 %390)
  %392 = add i32 %388, 0
  call void @set_i64(i32 %392, i64 %391)
  %393 = add i32 %360, 0
  %394 = call i64 @get_i64(i32 %393)
  %395 = add i32 %353, 128
  call void @set_i64(i32 %395, i64 %394)
  %396 = add i32 %353, 128
  call void @wasmf_internal_3(i32 %396, i32 %361, i32 %362, i64 %369, i32 %354)
  %397 = add i32 %388, 0
  %398 = call i64 @get_i64(i32 %397)
  %399 = add i32 %383, 0
  %400 = call i64 @get_i64(i32 %399)
  %401 = add i32 %378, 0
  %402 = call i64 @get_i64(i32 %401)
  %403 = add i32 %353, 128
  %404 = call i64 @get_i64(i32 %403)
  %405 = add i32 %352, 8
  %406 = add i32 %405, 0
  %407 = call i64 @get_i64(i32 %406)
  %408 = add i32 %388, 0
  call void @set_i64(i32 %408, i64 %407)
  %409 = add i32 %352, 16
  %410 = add i32 %409, 0
  %411 = call i64 @get_i64(i32 %410)
  %412 = add i32 %383, 0
  call void @set_i64(i32 %412, i64 %411)
  %413 = add i32 %352, 24
  %414 = add i32 %413, 0
  %415 = call i64 @get_i64(i32 %414)
  %416 = add i32 %378, 0
  call void @set_i64(i32 %416, i64 %415)
  %417 = add i32 %352, 0
  %418 = call i64 @get_i64(i32 %417)
  %419 = add i32 %363, 0
  %420 = call i64 @get_i64(i32 %419)
  %421 = add i32 %360, 0
  call void @set_i64(i32 %421, i64 %420)
  %422 = add i32 %363, 8
  %423 = add i32 %422, 0
  %424 = call i64 @get_i64(i32 %423)
  %425 = add i32 %389, 0
  call void @set_i64(i32 %425, i64 %424)
  %426 = add i32 %363, 16
  %427 = add i32 %426, 0
  %428 = call i64 @get_i64(i32 %427)
  %429 = add i32 %384, 0
  call void @set_i64(i32 %429, i64 %428)
  %430 = add i32 %363, 24
  %431 = add i32 %430, 0
  %432 = call i64 @get_i64(i32 %431)
  %433 = add i32 %379, 0
  call void @set_i64(i32 %433, i64 %432)
  %434 = add i32 %353, 128
  call void @set_i64(i32 %434, i64 %418)
  %435 = add i32 %353, 8
  call void @set_i64(i32 %435, i64 0)
  %436 = add i32 %353, 128
  %437 = call i64 @get_i64(i32 %436)
  %438 = add i32 %361, 0
  call void @set_i64(i32 %438, i64 %437)
  %439 = add i32 %361, 8
  %440 = add i32 %388, 0
  %441 = call i64 @get_i64(i32 %440)
  %442 = add i32 %439, 0
  call void @set_i64(i32 %442, i64 %441)
  %443 = add i32 %361, 16
  %444 = add i32 %383, 0
  %445 = call i64 @get_i64(i32 %444)
  %446 = add i32 %443, 0
  call void @set_i64(i32 %446, i64 %445)
  %447 = add i32 %361, 24
  %448 = add i32 %378, 0
  %449 = call i64 @get_i64(i32 %448)
  %450 = add i32 %447, 0
  call void @set_i64(i32 %450, i64 %449)
  %451 = trunc i32 %355 to i8
  %452 = add i32 %353, 113
  call void @set_i8(i32 %452, i8 %451)
  %453 = add i32 %353, 112
  call void @set_i8(i32 %453, i8 64)
  %454 = add i32 %353, 104
  call void @set_i64(i32 %454, i64 %402)
  %455 = add i32 %353, 96
  call void @set_i64(i32 %455, i64 %400)
  %456 = add i32 %353, 88
  call void @set_i64(i32 %456, i64 %398)
  %457 = add i32 %353, 80
  call void @set_i64(i32 %457, i64 %404)
  %458 = add i32 %359, 4
  %459 = add i32 %353, 126
  %460 = add i32 %459, 0
  %461 = call i16 @get_i16(i32 %460)
  %462 = zext i16 %461 to i32
  %463 = trunc i32 %462 to i16
  %464 = add i32 %458, 0
  call void @set_i16(i32 %464, i16 %463)
  %465 = add i32 %353, 122
  %466 = call i32 @get_i32(i32 %465)
  %467 = add i32 %359, 0
  call void @set_i32(i32 %467, i32 %466)
  %468 = add i32 %352, -32
  %469 = add i32 %364, -1
  %470 = icmp ne i32 %469, -1
  %471 = zext i1 %470 to i32
  %472 = icmp ne i32 %471, 0
  br i1 %472, label %b_18, label %b_21

b_21:                                             ; preds = %b_20
  br label %b_19
}

; Function Attrs: nounwind
define void @wasmf_internal_6(i32 %0) #1 {
entry:
  %1 = add i32 %0, -8
  %2 = add i32 %0, -4
  %3 = add i32 %2, 0
  %4 = call i32 @get_i32(i32 %3)
  %5 = and i32 %4, -8
  %6 = add i32 %1, %5
  br label %b_0

exit:                                             ; preds = %b_81
  ret void

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_54
  %7 = call i32 @get_i32(i32 1050940)
  %8 = icmp eq i32 0, %7
  %9 = zext i1 %8 to i32
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %b_77, label %b_78

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_15
  %11 = lshr i32 %59, 3
  %12 = shl i32 %11, 3
  %13 = add i32 %12, 1050516
  br label %b_72

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_71, %b_42, %b_29, %b_28, %b_8
  %14 = phi i32 [ %5, %b_8 ], [ %106, %b_28 ], [ %116, %b_29 ], [ %160, %b_42 ], [ %219, %b_71 ]
  %15 = phi i32 [ %1, %b_8 ], [ %107, %b_28 ], [ %107, %b_29 ], [ %161, %b_42 ], [ %213, %b_71 ]
  %16 = phi i32 [ %6, %b_8 ], [ %112, %b_28 ], [ %112, %b_29 ], [ %162, %b_42 ], [ %214, %b_71 ]
  %17 = phi i32 [ %4, %b_8 ], [ %109, %b_28 ], [ %109, %b_29 ], [ %163, %b_42 ], [ %215, %b_71 ]
  %18 = phi i32 [ 0, %b_8 ], [ %110, %b_28 ], [ %110, %b_29 ], [ %164, %b_42 ], [ %216, %b_71 ]
  %19 = phi i32 [ 0, %b_8 ], [ %111, %b_28 ], [ %111, %b_29 ], [ %165, %b_42 ], [ %217, %b_71 ]
  ret void

b_6:                                              ; preds = %b_4
  %20 = and i32 %4, 1
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %b_7, label %b_8

b_7:                                              ; preds = %b_12, %b_10, %b_6
  %22 = phi i32 [ %5, %b_6 ], [ %34, %b_10 ], [ %34, %b_12 ]
  %23 = phi i32 [ %1, %b_6 ], [ %35, %b_10 ], [ %35, %b_12 ]
  %24 = phi i32 [ %6, %b_6 ], [ %6, %b_10 ], [ %6, %b_12 ]
  %25 = phi i32 [ %4, %b_6 ], [ %33, %b_10 ], [ %33, %b_12 ]
  %26 = phi i32 [ 0, %b_6 ], [ 0, %b_10 ], [ 0, %b_12 ]
  %27 = phi i32 [ 0, %b_6 ], [ 0, %b_10 ], [ 0, %b_12 ]
  br label %b_14

b_8:                                              ; preds = %b_6
  %28 = and i32 %4, 3
  %29 = icmp eq i32 0, %28
  %30 = zext i1 %29 to i32
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %b_5, label %b_9

b_9:                                              ; preds = %b_8
  %32 = add i32 %1, 0
  %33 = call i32 @get_i32(i32 %32)
  %34 = add i32 %33, %5
  %35 = sub i32 %1, %33
  %36 = call i32 @get_i32(i32 1050916)
  %37 = icmp eq i32 %35, %36
  %38 = zext i1 %37 to i32
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %b_10, label %b_11

b_10:                                             ; preds = %b_9
  %40 = add i32 %6, 4
  %41 = call i32 @get_i32(i32 %40)
  %42 = and i32 %41, 3
  %43 = icmp ne i32 %42, 3
  %44 = zext i1 %43 to i32
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %b_7, label %b_13

b_11:                                             ; preds = %b_9
  br label %b_12

b_12:                                             ; preds = %b_11
  call void @wasmf_internal_20(i32 %35, i32 %33)
  br label %b_7

b_13:                                             ; preds = %b_10
  call void @set_i32(i32 1050908, i32 %34)
  %46 = add i32 %6, 4
  %47 = call i32 @get_i32(i32 %46)
  %48 = and i32 %47, -2
  %49 = add i32 %6, 4
  call void @set_i32(i32 %49, i32 %48)
  %50 = or i32 %34, 1
  %51 = add i32 %35, 4
  call void @set_i32(i32 %51, i32 %50)
  %52 = add i32 %34, %35
  %53 = add i32 %52, 0
  call void @set_i32(i32 %53, i32 %34)
  ret void

b_14:                                             ; preds = %b_7
  %54 = add i32 %24, 4
  %55 = add i32 %54, 0
  %56 = call i32 @get_i32(i32 %55)
  %57 = and i32 %56, 2
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %b_16, label %b_17

b_15:                                             ; preds = %b_24, %b_16
  %59 = phi i32 [ %22, %b_16 ], [ %97, %b_24 ]
  %60 = phi i32 [ %23, %b_16 ], [ %23, %b_24 ]
  %61 = phi i32 [ %24, %b_16 ], [ %96, %b_24 ]
  %62 = phi i32 [ %56, %b_16 ], [ %56, %b_24 ]
  %63 = phi i32 [ %54, %b_16 ], [ %54, %b_24 ]
  %64 = phi i32 [ %27, %b_16 ], [ %27, %b_24 ]
  %65 = icmp ult i32 %59, 256
  %66 = zext i1 %65 to i32
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %b_3, label %b_48

b_16:                                             ; preds = %b_14
  %68 = and i32 %56, -2
  %69 = add i32 %54, 0
  call void @set_i32(i32 %69, i32 %68)
  %70 = or i32 %22, 1
  %71 = add i32 %23, 4
  call void @set_i32(i32 %71, i32 %70)
  %72 = add i32 %22, %23
  %73 = add i32 %72, 0
  call void @set_i32(i32 %73, i32 %22)
  br label %b_15

b_17:                                             ; preds = %b_14
  br label %b_18

b_18:                                             ; preds = %b_17
  br label %b_19

b_19:                                             ; preds = %b_18
  %74 = call i32 @get_i32(i32 1050920)
  %75 = icmp ne i32 %24, %74
  %76 = zext i1 %75 to i32
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %b_21, label %b_22

b_20:                                             ; preds = %b_21
  call void @set_i32(i32 1050916, i32 %23)
  %78 = call i32 @get_i32(i32 1050908)
  %79 = add i32 %78, %22
  call void @set_i32(i32 1050908, i32 %79)
  %80 = or i32 %79, 1
  %81 = add i32 %23, 4
  call void @set_i32(i32 %81, i32 %80)
  %82 = add i32 %79, %23
  %83 = add i32 %82, 0
  call void @set_i32(i32 %83, i32 %79)
  ret void

b_21:                                             ; preds = %b_19
  %84 = call i32 @get_i32(i32 1050916)
  %85 = icmp eq i32 %84, %24
  %86 = zext i1 %85 to i32
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %b_20, label %b_24

b_22:                                             ; preds = %b_19
  br label %b_23

b_23:                                             ; preds = %b_22
  call void @set_i32(i32 1050920, i32 %23)
  %88 = call i32 @get_i32(i32 1050912)
  %89 = add i32 %88, %22
  call void @set_i32(i32 1050912, i32 %89)
  %90 = or i32 %89, 1
  %91 = add i32 %23, 4
  call void @set_i32(i32 %91, i32 %90)
  %92 = call i32 @get_i32(i32 1050916)
  %93 = icmp eq i32 %92, %23
  %94 = zext i1 %93 to i32
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %b_26, label %b_27

b_24:                                             ; preds = %b_21
  %96 = and i32 %56, -8
  call void @wasmf_internal_20(i32 %24, i32 %96)
  %97 = add i32 %22, %96
  %98 = or i32 %97, 1
  %99 = add i32 %23, 4
  call void @set_i32(i32 %99, i32 %98)
  %100 = add i32 %97, %23
  %101 = add i32 %100, 0
  call void @set_i32(i32 %101, i32 %97)
  %102 = call i32 @get_i32(i32 1050916)
  %103 = icmp ne i32 %23, %102
  %104 = zext i1 %103 to i32
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %b_15, label %b_25

b_25:                                             ; preds = %b_24
  call void @set_i32(i32 1050908, i32 %97)
  ret void

b_26:                                             ; preds = %b_23
  call void @set_i32(i32 1050908, i32 0)
  call void @set_i32(i32 1050916, i32 0)
  br label %b_28

b_27:                                             ; preds = %b_23
  br label %b_28

b_28:                                             ; preds = %b_27, %b_26
  %106 = phi i32 [ %89, %b_26 ], [ %89, %b_27 ]
  %107 = phi i32 [ %23, %b_26 ], [ %23, %b_27 ]
  %108 = phi i32 [ %24, %b_26 ], [ %24, %b_27 ]
  %109 = phi i32 [ %56, %b_26 ], [ %56, %b_27 ]
  %110 = phi i32 [ %54, %b_26 ], [ %54, %b_27 ]
  %111 = phi i32 [ %27, %b_26 ], [ %27, %b_27 ]
  %112 = call i32 @get_i32(i32 1050948)
  %113 = icmp uge i32 %112, %106
  %114 = zext i1 %113 to i32
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %b_5, label %b_29

b_29:                                             ; preds = %b_28
  %116 = call i32 @get_i32(i32 1050920)
  %117 = icmp eq i32 0, %116
  %118 = zext i1 %117 to i32
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %b_5, label %b_30

b_30:                                             ; preds = %b_29
  br label %b_31

b_31:                                             ; preds = %b_30
  %120 = call i32 @get_i32(i32 1050912)
  %121 = icmp ult i32 %120, 41
  %122 = zext i1 %121 to i32
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %b_32, label %b_33

b_32:                                             ; preds = %b_36, %b_35, %b_31
  %124 = phi i32 [ %116, %b_31 ], [ %130, %b_36 ], [ %147, %b_35 ]
  %125 = phi i32 [ %107, %b_31 ], [ %131, %b_36 ], [ %154, %b_35 ]
  %126 = phi i32 [ %112, %b_31 ], [ %132, %b_36 ], [ %149, %b_35 ]
  %127 = phi i32 [ %120, %b_31 ], [ %133, %b_36 ], [ %150, %b_35 ]
  %128 = phi i32 [ %110, %b_31 ], [ %137, %b_36 ], [ %151, %b_35 ]
  %129 = phi i32 [ %111, %b_31 ], [ %135, %b_36 ], [ %152, %b_35 ]
  br label %b_41

b_33:                                             ; preds = %b_31
  br label %b_34

b_34:                                             ; preds = %b_38, %b_33
  %130 = phi i32 [ %116, %b_33 ], [ %147, %b_38 ]
  %131 = phi i32 [ 1050932, %b_33 ], [ %154, %b_38 ]
  %132 = phi i32 [ %112, %b_33 ], [ %149, %b_38 ]
  %133 = phi i32 [ %120, %b_33 ], [ %150, %b_38 ]
  %134 = phi i32 [ %110, %b_33 ], [ %151, %b_38 ]
  %135 = phi i32 [ %111, %b_33 ], [ %152, %b_38 ]
  %136 = add i32 %131, 0
  %137 = call i32 @get_i32(i32 %136)
  %138 = icmp ule i32 %137, %130
  %139 = zext i1 %138 to i32
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %b_36, label %b_37

b_35:                                             ; preds = %b_40
  br label %b_32

b_36:                                             ; preds = %b_34
  %141 = add i32 %131, 4
  %142 = call i32 @get_i32(i32 %141)
  %143 = add i32 %137, %142
  %144 = icmp ugt i32 %143, %130
  %145 = zext i1 %144 to i32
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %b_32, label %b_39

b_37:                                             ; preds = %b_34
  br label %b_38

b_38:                                             ; preds = %b_39, %b_37
  %147 = phi i32 [ %130, %b_39 ], [ %130, %b_37 ]
  %148 = phi i32 [ %131, %b_39 ], [ %131, %b_37 ]
  %149 = phi i32 [ %132, %b_39 ], [ %132, %b_37 ]
  %150 = phi i32 [ %133, %b_39 ], [ %133, %b_37 ]
  %151 = phi i32 [ %137, %b_39 ], [ %137, %b_37 ]
  %152 = phi i32 [ %135, %b_39 ], [ %135, %b_37 ]
  %153 = add i32 %148, 8
  %154 = call i32 @get_i32(i32 %153)
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %b_34, label %b_40

b_39:                                             ; preds = %b_36
  br label %b_38

b_40:                                             ; preds = %b_38
  br label %b_35

b_41:                                             ; preds = %b_32
  %156 = call i32 @get_i32(i32 1050940)
  %157 = icmp eq i32 0, %156
  %158 = zext i1 %157 to i32
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %b_42, label %b_43

b_42:                                             ; preds = %b_45, %b_41
  %160 = phi i32 [ %156, %b_41 ], [ %178, %b_45 ]
  %161 = phi i32 [ %125, %b_41 ], [ %176, %b_45 ]
  %162 = phi i32 [ %126, %b_41 ], [ %172, %b_45 ]
  %163 = phi i32 [ %127, %b_41 ], [ %173, %b_45 ]
  %164 = phi i32 [ %128, %b_41 ], [ %174, %b_45 ]
  %165 = phi i32 [ %129, %b_41 ], [ %175, %b_45 ]
  %166 = phi i32 [ 4095, %b_41 ], [ %183, %b_45 ]
  call void @set_i32(i32 1050956, i32 %166)
  %167 = icmp ule i32 %163, %162
  %168 = zext i1 %167 to i32
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %b_5, label %b_47

b_43:                                             ; preds = %b_41
  br label %b_44

b_44:                                             ; preds = %b_44, %b_43
  %170 = phi i32 [ %156, %b_43 ], [ %178, %b_44 ]
  %171 = phi i32 [ 0, %b_43 ], [ %176, %b_44 ]
  %172 = phi i32 [ %126, %b_43 ], [ %172, %b_44 ]
  %173 = phi i32 [ %127, %b_43 ], [ %173, %b_44 ]
  %174 = phi i32 [ %128, %b_43 ], [ %174, %b_44 ]
  %175 = phi i32 [ %129, %b_43 ], [ %175, %b_44 ]
  %176 = add i32 %171, 1
  %177 = add i32 %170, 8
  %178 = call i32 @get_i32(i32 %177)
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %b_44, label %b_46

b_45:                                             ; preds = %b_46
  %180 = icmp ugt i32 %176, 4095
  %181 = zext i1 %180 to i32
  %182 = icmp ne i32 %181, 0
  %183 = select i1 %182, i32 %176, i32 4095
  br label %b_42

b_46:                                             ; preds = %b_44
  br label %b_45

b_47:                                             ; preds = %b_42
  call void @set_i32(i32 1050948, i32 -1)
  ret void

b_48:                                             ; preds = %b_15
  %184 = add i32 %60, 16
  call void @set_i64(i32 %184, i64 0)
  %185 = add i32 %60, 28
  br label %b_49

b_49:                                             ; preds = %b_48
  %186 = lshr i32 %59, 8
  %187 = icmp eq i32 0, %186
  %188 = zext i1 %187 to i32
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %b_50, label %b_51

b_50:                                             ; preds = %b_52, %b_51, %b_49
  %190 = phi i32 [ %59, %b_49 ], [ %59, %b_51 ], [ %59, %b_52 ]
  %191 = phi i32 [ %60, %b_49 ], [ %60, %b_51 ], [ %60, %b_52 ]
  %192 = phi i32 [ %186, %b_49 ], [ %186, %b_51 ], [ %203, %b_52 ]
  %193 = phi i32 [ %62, %b_49 ], [ %62, %b_51 ], [ %62, %b_52 ]
  %194 = phi i32 [ %63, %b_49 ], [ %63, %b_51 ], [ %63, %b_52 ]
  %195 = phi i32 [ %64, %b_49 ], [ %64, %b_51 ], [ %64, %b_52 ]
  %196 = phi i32 [ 0, %b_49 ], [ 31, %b_51 ], [ %211, %b_52 ]
  %197 = add i32 %185, 0
  call void @set_i32(i32 %197, i32 %196)
  %198 = shl i32 %196, 2
  %199 = add i32 %198, 1050780
  br label %b_53

b_51:                                             ; preds = %b_49
  %200 = icmp ugt i32 %59, 16777215
  %201 = zext i1 %200 to i32
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %b_50, label %b_52

b_52:                                             ; preds = %b_51
  %203 = call i32 @llvm.ctlz.i32(i32 %186, i1 false)
  %204 = sub i32 6, %203
  %205 = and i32 %204, 31
  %206 = urem i32 %205, 32
  %207 = lshr i32 %59, %206
  %208 = and i32 %207, 1
  %209 = shl i32 %203, 1
  %210 = sub i32 %208, %209
  %211 = add i32 %210, 62
  br label %b_50

b_53:                                             ; preds = %b_50
  br label %b_55

b_54:                                             ; preds = %b_60, %b_56
  %212 = phi i32 [ %241, %b_60 ], [ %223, %b_56 ]
  %213 = phi i32 [ %235, %b_60 ], [ %224, %b_56 ]
  %214 = phi i32 [ %236, %b_60 ], [ %225, %b_56 ]
  %215 = phi i32 [ %237, %b_60 ], [ %226, %b_56 ]
  %216 = phi i32 [ %238, %b_60 ], [ %227, %b_56 ]
  %217 = phi i32 [ %239, %b_60 ], [ %228, %b_56 ]
  %218 = call i32 @get_i32(i32 1050956)
  %219 = add i32 %218, -1
  call void @set_i32(i32 1050956, i32 %219)
  %220 = icmp eq i32 0, %219
  %221 = zext i1 %220 to i32
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %b_1, label %b_71

b_55:                                             ; preds = %b_53
  br label %b_57

b_56:                                             ; preds = %b_65, %b_58
  %223 = phi i32 [ %190, %b_65 ], [ %274, %b_58 ]
  %224 = phi i32 [ %191, %b_65 ], [ %275, %b_58 ]
  %225 = phi i32 [ %199, %b_65 ], [ %276, %b_58 ]
  %226 = phi i32 [ %196, %b_65 ], [ %285, %b_58 ]
  %227 = phi i32 [ %248, %b_65 ], [ %278, %b_58 ]
  %228 = phi i32 [ %251, %b_65 ], [ %283, %b_58 ]
  %229 = add i32 %224, 24
  %230 = add i32 %229, 0
  call void @set_i32(i32 %230, i32 %225)
  %231 = add i32 %224, 12
  call void @set_i32(i32 %231, i32 %224)
  %232 = add i32 %224, 8
  call void @set_i32(i32 %232, i32 %224)
  br label %b_54

b_57:                                             ; preds = %b_55
  br label %b_59

b_58:                                             ; preds = %b_67
  %233 = add i32 %283, 0
  call void @set_i32(i32 %233, i32 %275)
  br label %b_56

b_59:                                             ; preds = %b_57
  br label %b_61

b_60:                                             ; preds = %b_68, %b_66
  %234 = phi i32 [ %190, %b_66 ], [ %274, %b_68 ]
  %235 = phi i32 [ %191, %b_66 ], [ %275, %b_68 ]
  %236 = phi i32 [ %264, %b_66 ], [ %285, %b_68 ]
  %237 = phi i32 [ %264, %b_66 ], [ %285, %b_68 ]
  %238 = phi i32 [ %248, %b_66 ], [ %289, %b_68 ]
  %239 = phi i32 [ %251, %b_66 ], [ %283, %b_68 ]
  %240 = add i32 %237, 8
  %241 = call i32 @get_i32(i32 %240)
  %242 = add i32 %241, 12
  call void @set_i32(i32 %242, i32 %235)
  %243 = add i32 %237, 8
  call void @set_i32(i32 %243, i32 %235)
  %244 = add i32 %235, 24
  %245 = add i32 %244, 0
  call void @set_i32(i32 %245, i32 0)
  %246 = add i32 %235, 12
  call void @set_i32(i32 %246, i32 %237)
  %247 = add i32 %235, 8
  call void @set_i32(i32 %247, i32 %241)
  br label %b_54

b_61:                                             ; preds = %b_59
  %248 = call i32 @get_i32(i32 1050512)
  %249 = and i32 %196, 31
  %250 = urem i32 %249, 32
  %251 = shl i32 1, %250
  %252 = and i32 %248, %251
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %b_63, label %b_64

b_62:                                             ; preds = %b_63
  %254 = lshr i32 %196, 1
  %255 = sub i32 25, %254
  %256 = and i32 %255, 31
  %257 = icmp eq i32 %196, 31
  %258 = zext i1 %257 to i32
  %259 = icmp ne i32 %258, 0
  %260 = select i1 %259, i32 0, i32 %256
  %261 = urem i32 %260, 32
  %262 = shl i32 %190, %261
  br label %b_67

b_63:                                             ; preds = %b_61
  %263 = add i32 %199, 0
  %264 = call i32 @get_i32(i32 %263)
  %265 = add i32 %264, 4
  %266 = add i32 %265, 0
  %267 = call i32 @get_i32(i32 %266)
  %268 = and i32 %267, -8
  %269 = icmp ne i32 %268, %190
  %270 = zext i1 %269 to i32
  %271 = icmp ne i32 %270, 0
  br i1 %271, label %b_62, label %b_66

b_64:                                             ; preds = %b_61
  br label %b_65

b_65:                                             ; preds = %b_64
  %272 = or i32 %248, %251
  call void @set_i32(i32 1050512, i32 %272)
  %273 = add i32 %199, 0
  call void @set_i32(i32 %273, i32 %191)
  br label %b_56

b_66:                                             ; preds = %b_63
  br label %b_60

b_67:                                             ; preds = %b_69, %b_62
  %274 = phi i32 [ %190, %b_62 ], [ %274, %b_69 ]
  %275 = phi i32 [ %191, %b_62 ], [ %275, %b_69 ]
  %276 = phi i32 [ %264, %b_62 ], [ %285, %b_69 ]
  %277 = phi i32 [ %196, %b_62 ], [ %285, %b_69 ]
  %278 = phi i32 [ %262, %b_62 ], [ %289, %b_69 ]
  %279 = phi i32 [ %251, %b_62 ], [ %283, %b_69 ]
  %280 = lshr i32 %278, 29
  %281 = and i32 %280, 4
  %282 = add i32 %276, %281
  %283 = add i32 %282, 16
  %284 = add i32 %283, 0
  %285 = call i32 @get_i32(i32 %284)
  %286 = icmp eq i32 0, %285
  %287 = zext i1 %286 to i32
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %b_58, label %b_69

b_68:                                             ; preds = %b_70
  br label %b_60

b_69:                                             ; preds = %b_67
  %289 = shl i32 %278, 1
  %290 = add i32 %285, 4
  %291 = add i32 %290, 0
  %292 = call i32 @get_i32(i32 %291)
  %293 = and i32 %292, -8
  %294 = icmp ne i32 %293, %274
  %295 = zext i1 %294 to i32
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %b_67, label %b_70

b_70:                                             ; preds = %b_69
  br label %b_68

b_71:                                             ; preds = %b_54
  br label %b_5

b_72:                                             ; preds = %b_3
  %297 = call i32 @get_i32(i32 1050508)
  %298 = urem i32 %11, 32
  %299 = shl i32 1, %298
  %300 = and i32 %297, %299
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %b_74, label %b_75

b_73:                                             ; preds = %b_76, %b_74
  %302 = phi i32 [ %13, %b_74 ], [ %13, %b_76 ]
  %303 = phi i32 [ %60, %b_74 ], [ %60, %b_76 ]
  %304 = phi i32 [ %299, %b_74 ], [ %299, %b_76 ]
  %305 = phi i32 [ %297, %b_74 ], [ %297, %b_76 ]
  %306 = phi i32 [ %63, %b_74 ], [ %63, %b_76 ]
  %307 = phi i32 [ %64, %b_74 ], [ %64, %b_76 ]
  %308 = phi i32 [ %314, %b_74 ], [ %13, %b_76 ]
  %309 = add i32 %302, 8
  call void @set_i32(i32 %309, i32 %303)
  %310 = add i32 %308, 12
  call void @set_i32(i32 %310, i32 %303)
  %311 = add i32 %303, 12
  call void @set_i32(i32 %311, i32 %302)
  %312 = add i32 %303, 8
  call void @set_i32(i32 %312, i32 %308)
  ret void

b_74:                                             ; preds = %b_72
  %313 = add i32 %13, 8
  %314 = call i32 @get_i32(i32 %313)
  br label %b_73

b_75:                                             ; preds = %b_72
  br label %b_76

b_76:                                             ; preds = %b_75
  %315 = or i32 %299, %297
  call void @set_i32(i32 1050508, i32 %315)
  br label %b_73

b_77:                                             ; preds = %b_1
  call void @set_i32(i32 1050956, i32 4095)
  ret void

b_78:                                             ; preds = %b_1
  br label %b_79

b_79:                                             ; preds = %b_78
  br label %b_80

b_80:                                             ; preds = %b_80, %b_79
  %316 = phi i32 [ %7, %b_79 ], [ %324, %b_80 ]
  %317 = phi i32 [ 0, %b_79 ], [ %322, %b_80 ]
  %318 = phi i32 [ %214, %b_79 ], [ %318, %b_80 ]
  %319 = phi i32 [ %215, %b_79 ], [ %319, %b_80 ]
  %320 = phi i32 [ %216, %b_79 ], [ %320, %b_80 ]
  %321 = phi i32 [ %217, %b_79 ], [ %321, %b_80 ]
  %322 = add i32 %317, 1
  %323 = add i32 %316, 8
  %324 = call i32 @get_i32(i32 %323)
  %325 = icmp ne i32 %324, 0
  br i1 %325, label %b_80, label %b_82

b_81:                                             ; preds = %b_82
  %326 = icmp ugt i32 %322, 4095
  %327 = zext i1 %326 to i32
  %328 = icmp ne i32 %327, 0
  %329 = select i1 %328, i32 %322, i32 4095
  call void @set_i32(i32 1050956, i32 %329)
  br label %exit

b_82:                                             ; preds = %b_80
  br label %b_81
}

; Function Attrs: nounwind
define i32 @wasmf_internal_7(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = add i32 %0, 16
  %4 = call i32 @get_i32(i32 %3)
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 %27

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_83, %b_77, %b_70
  %5 = phi i32 [ %89, %b_70 ], [ %421, %b_77 ], [ %41, %b_83 ]
  %6 = phi i32 [ %90, %b_70 ], [ %422, %b_77 ], [ %42, %b_83 ]
  %7 = phi i32 [ %91, %b_70 ], [ %423, %b_77 ], [ %43, %b_83 ]
  %8 = phi i32 [ %92, %b_70 ], [ %441, %b_77 ], [ %44, %b_83 ]
  %9 = phi i32 [ %93, %b_70 ], [ %440, %b_77 ], [ 0, %b_83 ]
  %10 = phi i32 [ %94, %b_70 ], [ %442, %b_77 ], [ %46, %b_83 ]
  %11 = phi i32 [ %95, %b_70 ], [ %446, %b_77 ], [ %419, %b_83 ]
  %12 = phi i32 [ %96, %b_70 ], [ %428, %b_77 ], [ %48, %b_83 ]
  %13 = phi i32 [ %97, %b_70 ], [ %429, %b_77 ], [ %49, %b_83 ]
  %14 = phi i32 [ %98, %b_70 ], [ %430, %b_77 ], [ %50, %b_83 ]
  %15 = phi i32 [ %99, %b_70 ], [ %431, %b_77 ], [ %51, %b_83 ]
  %16 = phi i32 [ %100, %b_70 ], [ %432, %b_77 ], [ %52, %b_83 ]
  %17 = phi i32 [ %101, %b_70 ], [ %433, %b_77 ], [ %53, %b_83 ]
  %18 = add i32 %5, 24
  %19 = call i32 @get_i32(i32 %18)
  %20 = add i32 %5, 28
  %21 = add i32 %20, 0
  %22 = call i32 @get_i32(i32 %21)
  %23 = add i32 %22, 12
  %24 = call i32 @get_i32(i32 %23)
  %25 = call i8* @get_function_from_table(i32 %24, i32 1)
  %26 = bitcast i8* %25 to i32 (i32, i32, i32)*
  %27 = call i32 %26(i32 %19, i32 %6, i32 %7)
  br label %exit

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_91, %b_11
  %28 = phi i32 [ %0, %b_11 ], [ %524, %b_91 ]
  %29 = phi i32 [ %1, %b_11 ], [ %525, %b_91 ]
  %30 = phi i32 [ %2, %b_11 ], [ %526, %b_91 ]
  %31 = phi i32 [ %88, %b_11 ], [ 1, %b_91 ]
  %32 = phi i32 [ 0, %b_11 ], [ %513, %b_91 ]
  %33 = phi i32 [ 0, %b_11 ], [ %529, %b_91 ]
  %34 = phi i32 [ 0, %b_11 ], [ %530, %b_91 ]
  %35 = phi i32 [ 0, %b_11 ], [ %531, %b_91 ]
  %36 = phi i32 [ 0, %b_11 ], [ %532, %b_91 ]
  %37 = phi i32 [ 0, %b_11 ], [ %533, %b_91 ]
  %38 = phi i32 [ 0, %b_11 ], [ %534, %b_91 ]
  %39 = phi i32 [ 0, %b_11 ], [ %535, %b_91 ]
  %40 = phi i32 [ %55, %b_11 ], [ %536, %b_91 ]
  ret i32 %31

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_14, %b_10
  %41 = phi i32 [ %0, %b_10 ], [ %89, %b_14 ]
  %42 = phi i32 [ %1, %b_10 ], [ %90, %b_14 ]
  %43 = phi i32 [ %2, %b_10 ], [ %91, %b_14 ]
  %44 = phi i32 [ %4, %b_10 ], [ %92, %b_14 ]
  %45 = phi i32 [ 0, %b_10 ], [ %93, %b_14 ]
  %46 = phi i32 [ 0, %b_10 ], [ %94, %b_14 ]
  %47 = phi i32 [ 0, %b_10 ], [ %95, %b_14 ]
  %48 = phi i32 [ 0, %b_10 ], [ %96, %b_14 ]
  %49 = phi i32 [ 0, %b_10 ], [ %97, %b_14 ]
  %50 = phi i32 [ 0, %b_10 ], [ %98, %b_14 ]
  %51 = phi i32 [ 0, %b_10 ], [ %99, %b_14 ]
  %52 = phi i32 [ 0, %b_10 ], [ %100, %b_14 ]
  %53 = phi i32 [ %55, %b_10 ], [ %101, %b_14 ]
  br label %b_71

b_6:                                              ; preds = %b_4
  %54 = add i32 %0, 8
  %55 = call i32 @get_i32(i32 %54)
  %56 = icmp ne i32 %55, 1
  %57 = zext i1 %56 to i32
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %b_8, label %b_9

b_7:                                              ; preds = %b_12, %b_8
  %59 = phi i32 [ %0, %b_8 ], [ %0, %b_12 ]
  %60 = phi i32 [ %1, %b_8 ], [ %1, %b_12 ]
  %61 = phi i32 [ %2, %b_8 ], [ %2, %b_12 ]
  %62 = phi i32 [ %4, %b_8 ], [ %4, %b_12 ]
  %63 = phi i32 [ 0, %b_8 ], [ 0, %b_12 ]
  %64 = phi i32 [ 0, %b_8 ], [ 0, %b_12 ]
  %65 = phi i32 [ 0, %b_8 ], [ 0, %b_12 ]
  %66 = phi i32 [ 0, %b_8 ], [ 0, %b_12 ]
  %67 = phi i32 [ 0, %b_8 ], [ 0, %b_12 ]
  %68 = phi i32 [ 0, %b_8 ], [ 0, %b_12 ]
  %69 = phi i32 [ 0, %b_8 ], [ 0, %b_12 ]
  %70 = phi i32 [ 0, %b_8 ], [ 0, %b_12 ]
  %71 = phi i32 [ %55, %b_8 ], [ %55, %b_12 ]
  %72 = add i32 %60, %61
  br label %b_13

b_8:                                              ; preds = %b_6
  %73 = icmp eq i32 %4, 1
  %74 = zext i1 %73 to i32
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %b_7, label %b_11

b_9:                                              ; preds = %b_6
  br label %b_10

b_10:                                             ; preds = %b_9
  %76 = icmp ne i32 %4, 1
  %77 = zext i1 %76 to i32
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %b_5, label %b_12

b_11:                                             ; preds = %b_8
  %79 = add i32 %0, 24
  %80 = call i32 @get_i32(i32 %79)
  %81 = add i32 %0, 28
  %82 = add i32 %81, 0
  %83 = call i32 @get_i32(i32 %82)
  %84 = add i32 %83, 12
  %85 = call i32 @get_i32(i32 %84)
  %86 = call i8* @get_function_from_table(i32 %85, i32 1)
  %87 = bitcast i8* %86 to i32 (i32, i32, i32)*
  %88 = call i32 %87(i32 %80, i32 %1, i32 %2)
  br label %b_3

b_12:                                             ; preds = %b_10
  br label %b_7

b_13:                                             ; preds = %b_7
  br label %b_15

b_14:                                             ; preds = %b_64, %b_61, %b_40, %b_20, %b_16
  %89 = phi i32 [ %127, %b_20 ], [ %226, %b_40 ], [ %111, %b_16 ], [ %332, %b_61 ], [ %362, %b_64 ]
  %90 = phi i32 [ %128, %b_20 ], [ %227, %b_40 ], [ %112, %b_16 ], [ %333, %b_61 ], [ %378, %b_64 ]
  %91 = phi i32 [ %129, %b_20 ], [ %228, %b_40 ], [ %113, %b_16 ], [ %334, %b_61 ], [ %376, %b_64 ]
  %92 = phi i32 [ %130, %b_20 ], [ %229, %b_40 ], [ %114, %b_16 ], [ %335, %b_61 ], [ %365, %b_64 ]
  %93 = phi i32 [ %131, %b_20 ], [ %230, %b_40 ], [ %115, %b_16 ], [ %336, %b_61 ], [ %366, %b_64 ]
  %94 = phi i32 [ %132, %b_20 ], [ %231, %b_40 ], [ %116, %b_16 ], [ %337, %b_61 ], [ %367, %b_64 ]
  %95 = phi i32 [ %133, %b_20 ], [ %232, %b_40 ], [ %117, %b_16 ], [ %338, %b_61 ], [ %368, %b_64 ]
  %96 = phi i32 [ %131, %b_20 ], [ %233, %b_40 ], [ %118, %b_16 ], [ %339, %b_61 ], [ %369, %b_64 ]
  %97 = phi i32 [ %135, %b_20 ], [ %234, %b_40 ], [ %119, %b_16 ], [ %340, %b_61 ], [ %370, %b_64 ]
  %98 = phi i32 [ %136, %b_20 ], [ %235, %b_40 ], [ %120, %b_16 ], [ %341, %b_61 ], [ %371, %b_64 ]
  %99 = phi i32 [ %137, %b_20 ], [ %236, %b_40 ], [ %121, %b_16 ], [ %342, %b_61 ], [ %372, %b_64 ]
  %100 = phi i32 [ %138, %b_20 ], [ %237, %b_40 ], [ %122, %b_16 ], [ %343, %b_61 ], [ %373, %b_64 ]
  %101 = phi i32 [ %139, %b_20 ], [ %238, %b_40 ], [ %123, %b_16 ], [ %344, %b_61 ], [ %374, %b_64 ]
  %102 = icmp eq i32 %101, 1
  %103 = zext i1 %102 to i32
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %b_5, label %b_70

b_15:                                             ; preds = %b_13
  %105 = add i32 %59, 20
  %106 = add i32 %105, 0
  %107 = call i32 @get_i32(i32 %106)
  %108 = icmp eq i32 0, %107
  %109 = zext i1 %108 to i32
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %b_17, label %b_18

b_16:                                             ; preds = %b_21, %b_17
  %111 = phi i32 [ %59, %b_17 ], [ %150, %b_21 ]
  %112 = phi i32 [ %60, %b_17 ], [ %151, %b_21 ]
  %113 = phi i32 [ %61, %b_17 ], [ %152, %b_21 ]
  %114 = phi i32 [ %72, %b_17 ], [ %153, %b_21 ]
  %115 = phi i32 [ %60, %b_17 ], [ %154, %b_21 ]
  %116 = phi i32 [ %64, %b_17 ], [ %164, %b_21 ]
  %117 = phi i32 [ %65, %b_17 ], [ %156, %b_21 ]
  %118 = phi i32 [ %66, %b_17 ], [ %157, %b_21 ]
  %119 = phi i32 [ %107, %b_17 ], [ %165, %b_21 ]
  %120 = phi i32 [ %68, %b_17 ], [ %159, %b_21 ]
  %121 = phi i32 [ %69, %b_17 ], [ %160, %b_21 ]
  %122 = phi i32 [ %70, %b_17 ], [ %161, %b_21 ]
  %123 = phi i32 [ %71, %b_17 ], [ %162, %b_21 ]
  %124 = icmp eq i32 %114, %115
  %125 = zext i1 %124 to i32
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %b_14, label %b_43

b_17:                                             ; preds = %b_15
  br label %b_16

b_18:                                             ; preds = %b_15
  br label %b_19

b_19:                                             ; preds = %b_18
  br label %b_20

b_20:                                             ; preds = %b_24, %b_19
  %127 = phi i32 [ %59, %b_19 ], [ %150, %b_24 ]
  %128 = phi i32 [ %60, %b_19 ], [ %151, %b_24 ]
  %129 = phi i32 [ %61, %b_19 ], [ %152, %b_24 ]
  %130 = phi i32 [ %72, %b_19 ], [ %153, %b_24 ]
  %131 = phi i32 [ %60, %b_19 ], [ %154, %b_24 ]
  %132 = phi i32 [ %64, %b_19 ], [ %164, %b_24 ]
  %133 = phi i32 [ %65, %b_19 ], [ %156, %b_24 ]
  %134 = phi i32 [ %66, %b_19 ], [ %157, %b_24 ]
  %135 = phi i32 [ %107, %b_19 ], [ %165, %b_24 ]
  %136 = phi i32 [ %68, %b_19 ], [ %159, %b_24 ]
  %137 = phi i32 [ %69, %b_19 ], [ %160, %b_24 ]
  %138 = phi i32 [ %70, %b_19 ], [ %161, %b_24 ]
  %139 = phi i32 [ %71, %b_19 ], [ %162, %b_24 ]
  %140 = icmp eq i32 %130, %131
  %141 = zext i1 %140 to i32
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %b_14, label %b_22

b_21:                                             ; preds = %b_42
  br label %b_16

b_22:                                             ; preds = %b_20
  %143 = add i32 %131, 1
  br label %b_23

b_23:                                             ; preds = %b_22
  %144 = add i32 %131, 0
  %145 = call i8 @get_i8(i32 %144)
  %146 = sext i8 %145 to i32
  %147 = icmp sgt i32 %146, -1
  %148 = zext i1 %147 to i32
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %b_24, label %b_25

b_24:                                             ; preds = %b_41, %b_33, %b_27, %b_23
  %150 = phi i32 [ %127, %b_23 ], [ %171, %b_27 ], [ %196, %b_33 ], [ %226, %b_41 ]
  %151 = phi i32 [ %128, %b_23 ], [ %172, %b_27 ], [ %197, %b_33 ], [ %227, %b_41 ]
  %152 = phi i32 [ %129, %b_23 ], [ %173, %b_27 ], [ %198, %b_33 ], [ %228, %b_41 ]
  %153 = phi i32 [ %130, %b_23 ], [ %174, %b_27 ], [ %199, %b_33 ], [ %229, %b_41 ]
  %154 = phi i32 [ %143, %b_23 ], [ %175, %b_27 ], [ %200, %b_33 ], [ %230, %b_41 ]
  %155 = phi i32 [ %132, %b_23 ], [ %176, %b_27 ], [ %201, %b_33 ], [ %231, %b_41 ]
  %156 = phi i32 [ %146, %b_23 ], [ %184, %b_27 ], [ %209, %b_33 ], [ %232, %b_41 ]
  %157 = phi i32 [ %131, %b_23 ], [ %178, %b_27 ], [ %203, %b_33 ], [ %233, %b_41 ]
  %158 = phi i32 [ %135, %b_23 ], [ %179, %b_27 ], [ %204, %b_33 ], [ %234, %b_41 ]
  %159 = phi i32 [ %136, %b_23 ], [ %180, %b_27 ], [ %205, %b_33 ], [ %235, %b_41 ]
  %160 = phi i32 [ %137, %b_23 ], [ %181, %b_27 ], [ %206, %b_33 ], [ %236, %b_41 ]
  %161 = phi i32 [ %138, %b_23 ], [ %182, %b_27 ], [ %207, %b_33 ], [ %237, %b_41 ]
  %162 = phi i32 [ %139, %b_23 ], [ %183, %b_27 ], [ %208, %b_33 ], [ %238, %b_41 ]
  %163 = sub i32 %154, %157
  %164 = add i32 %163, %155
  %165 = add i32 %158, -1
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %b_20, label %b_42

b_25:                                             ; preds = %b_23
  %167 = and i32 %146, 255
  br label %b_26

b_26:                                             ; preds = %b_25
  %168 = icmp eq i32 %130, %143
  %169 = zext i1 %168 to i32
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %b_28, label %b_29

b_27:                                             ; preds = %b_30, %b_28
  %171 = phi i32 [ %127, %b_28 ], [ %127, %b_30 ]
  %172 = phi i32 [ %128, %b_28 ], [ %128, %b_30 ]
  %173 = phi i32 [ %129, %b_28 ], [ %129, %b_30 ]
  %174 = phi i32 [ %130, %b_28 ], [ %130, %b_30 ]
  %175 = phi i32 [ %143, %b_28 ], [ %192, %b_30 ]
  %176 = phi i32 [ %132, %b_28 ], [ %132, %b_30 ]
  %177 = phi i32 [ %146, %b_28 ], [ %146, %b_30 ]
  %178 = phi i32 [ %131, %b_28 ], [ %131, %b_30 ]
  %179 = phi i32 [ %135, %b_28 ], [ %135, %b_30 ]
  %180 = phi i32 [ %167, %b_28 ], [ %167, %b_30 ]
  %181 = phi i32 [ 0, %b_28 ], [ %191, %b_30 ]
  %182 = phi i32 [ %138, %b_28 ], [ %138, %b_30 ]
  %183 = phi i32 [ %139, %b_28 ], [ %139, %b_30 ]
  %184 = phi i32 [ %130, %b_28 ], [ %192, %b_30 ]
  %185 = icmp ult i32 %180, 224
  %186 = zext i1 %185 to i32
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %b_24, label %b_31

b_28:                                             ; preds = %b_26
  br label %b_27

b_29:                                             ; preds = %b_26
  br label %b_30

b_30:                                             ; preds = %b_29
  %188 = add i32 %131, 1
  %189 = call i8 @get_i8(i32 %188)
  %190 = zext i8 %189 to i32
  %191 = and i32 %190, 63
  %192 = add i32 %131, 2
  br label %b_27

b_31:                                             ; preds = %b_27
  br label %b_32

b_32:                                             ; preds = %b_31
  %193 = icmp eq i32 %174, %184
  %194 = zext i1 %193 to i32
  %195 = icmp ne i32 %194, 0
  br i1 %195, label %b_34, label %b_35

b_33:                                             ; preds = %b_36, %b_34
  %196 = phi i32 [ %171, %b_34 ], [ %171, %b_36 ]
  %197 = phi i32 [ %172, %b_34 ], [ %172, %b_36 ]
  %198 = phi i32 [ %173, %b_34 ], [ %173, %b_36 ]
  %199 = phi i32 [ %174, %b_34 ], [ %174, %b_36 ]
  %200 = phi i32 [ %175, %b_34 ], [ %217, %b_36 ]
  %201 = phi i32 [ %176, %b_34 ], [ %176, %b_36 ]
  %202 = phi i32 [ %184, %b_34 ], [ %184, %b_36 ]
  %203 = phi i32 [ %178, %b_34 ], [ %178, %b_36 ]
  %204 = phi i32 [ %179, %b_34 ], [ %179, %b_36 ]
  %205 = phi i32 [ %180, %b_34 ], [ %180, %b_36 ]
  %206 = phi i32 [ %181, %b_34 ], [ %181, %b_36 ]
  %207 = phi i32 [ 0, %b_34 ], [ %216, %b_36 ]
  %208 = phi i32 [ %183, %b_34 ], [ %183, %b_36 ]
  %209 = phi i32 [ %174, %b_34 ], [ %217, %b_36 ]
  %210 = icmp ult i32 %205, 240
  %211 = zext i1 %210 to i32
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %b_24, label %b_37

b_34:                                             ; preds = %b_32
  br label %b_33

b_35:                                             ; preds = %b_32
  br label %b_36

b_36:                                             ; preds = %b_35
  %213 = add i32 %184, 0
  %214 = call i8 @get_i8(i32 %213)
  %215 = zext i8 %214 to i32
  %216 = and i32 %215, 63
  %217 = add i32 %184, 1
  br label %b_33

b_37:                                             ; preds = %b_33
  %218 = icmp eq i32 %199, %209
  %219 = zext i1 %218 to i32
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %b_38, label %b_39

b_38:                                             ; preds = %b_37
  br label %b_40

b_39:                                             ; preds = %b_37
  %221 = add i32 %209, 1
  %222 = add i32 %209, 0
  %223 = call i8 @get_i8(i32 %222)
  %224 = zext i8 %223 to i32
  %225 = and i32 %224, 63
  br label %b_40

b_40:                                             ; preds = %b_39, %b_38
  %226 = phi i32 [ %196, %b_38 ], [ %196, %b_39 ]
  %227 = phi i32 [ %197, %b_38 ], [ %197, %b_39 ]
  %228 = phi i32 [ %198, %b_38 ], [ %198, %b_39 ]
  %229 = phi i32 [ %199, %b_38 ], [ %199, %b_39 ]
  %230 = phi i32 [ %200, %b_38 ], [ %221, %b_39 ]
  %231 = phi i32 [ %201, %b_38 ], [ %201, %b_39 ]
  %232 = phi i32 [ %209, %b_38 ], [ %209, %b_39 ]
  %233 = phi i32 [ %203, %b_38 ], [ %203, %b_39 ]
  %234 = phi i32 [ %204, %b_38 ], [ %204, %b_39 ]
  %235 = phi i32 [ %205, %b_38 ], [ %205, %b_39 ]
  %236 = phi i32 [ %206, %b_38 ], [ %206, %b_39 ]
  %237 = phi i32 [ %207, %b_38 ], [ %207, %b_39 ]
  %238 = phi i32 [ %208, %b_38 ], [ %208, %b_39 ]
  %239 = phi i32 [ 0, %b_38 ], [ %225, %b_39 ]
  %240 = shl i32 %235, 18
  %241 = and i32 %240, 1835008
  %242 = shl i32 %236, 12
  %243 = or i32 %241, %242
  %244 = shl i32 %237, 6
  %245 = or i32 %243, %244
  %246 = or i32 %239, %245
  %247 = icmp eq i32 %246, 1114112
  %248 = zext i1 %247 to i32
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %b_14, label %b_41

b_41:                                             ; preds = %b_40
  br label %b_24

b_42:                                             ; preds = %b_24
  br label %b_21

b_43:                                             ; preds = %b_16
  br label %b_44

b_44:                                             ; preds = %b_43
  %250 = add i32 %115, 0
  %251 = call i8 @get_i8(i32 %250)
  %252 = sext i8 %251 to i32
  %253 = icmp sgt i32 %252, -1
  %254 = zext i1 %253 to i32
  %255 = icmp ne i32 %254, 0
  br i1 %255, label %b_45, label %b_46

b_45:                                             ; preds = %b_62, %b_54, %b_48, %b_44
  %256 = phi i32 [ %111, %b_44 ], [ %273, %b_48 ], [ %300, %b_54 ], [ %332, %b_62 ]
  %257 = phi i32 [ %112, %b_44 ], [ %274, %b_48 ], [ %301, %b_54 ], [ %333, %b_62 ]
  %258 = phi i32 [ %113, %b_44 ], [ %275, %b_48 ], [ %302, %b_54 ], [ %334, %b_62 ]
  %259 = phi i32 [ %114, %b_44 ], [ %276, %b_48 ], [ %303, %b_54 ], [ %335, %b_62 ]
  %260 = phi i32 [ %115, %b_44 ], [ %277, %b_48 ], [ %304, %b_54 ], [ %336, %b_62 ]
  %261 = phi i32 [ %116, %b_44 ], [ %278, %b_48 ], [ %305, %b_54 ], [ %337, %b_62 ]
  %262 = phi i32 [ %117, %b_44 ], [ %279, %b_48 ], [ %306, %b_54 ], [ %338, %b_62 ]
  %263 = phi i32 [ %252, %b_44 ], [ %280, %b_48 ], [ %307, %b_54 ], [ %339, %b_62 ]
  %264 = phi i32 [ %119, %b_44 ], [ %281, %b_48 ], [ %308, %b_54 ], [ %340, %b_62 ]
  %265 = phi i32 [ %120, %b_44 ], [ %282, %b_48 ], [ %309, %b_54 ], [ %341, %b_62 ]
  %266 = phi i32 [ %121, %b_44 ], [ %283, %b_48 ], [ %310, %b_54 ], [ %342, %b_62 ]
  %267 = phi i32 [ %122, %b_44 ], [ %284, %b_48 ], [ %311, %b_54 ], [ %343, %b_62 ]
  %268 = phi i32 [ %123, %b_44 ], [ %285, %b_48 ], [ %312, %b_54 ], [ %344, %b_62 ]
  br label %b_63

b_46:                                             ; preds = %b_44
  br label %b_47

b_47:                                             ; preds = %b_46
  %269 = add i32 %115, 1
  %270 = icmp eq i32 %114, %269
  %271 = zext i1 %270 to i32
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %b_49, label %b_50

b_48:                                             ; preds = %b_51, %b_49
  %273 = phi i32 [ %111, %b_49 ], [ %111, %b_51 ]
  %274 = phi i32 [ %112, %b_49 ], [ %112, %b_51 ]
  %275 = phi i32 [ %113, %b_49 ], [ %113, %b_51 ]
  %276 = phi i32 [ %114, %b_49 ], [ %114, %b_51 ]
  %277 = phi i32 [ %115, %b_49 ], [ %115, %b_51 ]
  %278 = phi i32 [ %116, %b_49 ], [ %116, %b_51 ]
  %279 = phi i32 [ %117, %b_49 ], [ %117, %b_51 ]
  %280 = phi i32 [ %252, %b_49 ], [ %252, %b_51 ]
  %281 = phi i32 [ %114, %b_49 ], [ %291, %b_51 ]
  %282 = phi i32 [ %120, %b_49 ], [ %120, %b_51 ]
  %283 = phi i32 [ %121, %b_49 ], [ %121, %b_51 ]
  %284 = phi i32 [ %122, %b_49 ], [ %122, %b_51 ]
  %285 = phi i32 [ %123, %b_49 ], [ %123, %b_51 ]
  %286 = phi i32 [ 0, %b_49 ], [ %296, %b_51 ]
  %287 = and i32 %280, 255
  %288 = icmp ult i32 %287, 224
  %289 = zext i1 %288 to i32
  %290 = icmp ne i32 %289, 0
  br i1 %290, label %b_45, label %b_52

b_49:                                             ; preds = %b_47
  br label %b_48

b_50:                                             ; preds = %b_47
  br label %b_51

b_51:                                             ; preds = %b_50
  %291 = add i32 %115, 2
  %292 = add i32 %115, 1
  %293 = call i8 @get_i8(i32 %292)
  %294 = zext i8 %293 to i32
  %295 = and i32 %294, 63
  %296 = shl i32 %295, 6
  br label %b_48

b_52:                                             ; preds = %b_48
  br label %b_53

b_53:                                             ; preds = %b_52
  %297 = icmp eq i32 %276, %281
  %298 = zext i1 %297 to i32
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %b_55, label %b_56

b_54:                                             ; preds = %b_57, %b_55
  %300 = phi i32 [ %273, %b_55 ], [ %273, %b_57 ]
  %301 = phi i32 [ %274, %b_55 ], [ %274, %b_57 ]
  %302 = phi i32 [ %275, %b_55 ], [ %275, %b_57 ]
  %303 = phi i32 [ %276, %b_55 ], [ %276, %b_57 ]
  %304 = phi i32 [ %277, %b_55 ], [ %277, %b_57 ]
  %305 = phi i32 [ %278, %b_55 ], [ %278, %b_57 ]
  %306 = phi i32 [ %276, %b_55 ], [ %318, %b_57 ]
  %307 = phi i32 [ %280, %b_55 ], [ %280, %b_57 ]
  %308 = phi i32 [ %281, %b_55 ], [ %281, %b_57 ]
  %309 = phi i32 [ %282, %b_55 ], [ %282, %b_57 ]
  %310 = phi i32 [ %283, %b_55 ], [ %283, %b_57 ]
  %311 = phi i32 [ %284, %b_55 ], [ %284, %b_57 ]
  %312 = phi i32 [ %285, %b_55 ], [ %285, %b_57 ]
  %313 = phi i32 [ 0, %b_55 ], [ %322, %b_57 ]
  %314 = and i32 %307, 255
  %315 = icmp ult i32 %314, 240
  %316 = zext i1 %315 to i32
  %317 = icmp ne i32 %316, 0
  br i1 %317, label %b_45, label %b_58

b_55:                                             ; preds = %b_53
  br label %b_54

b_56:                                             ; preds = %b_53
  br label %b_57

b_57:                                             ; preds = %b_56
  %318 = add i32 %281, 1
  %319 = add i32 %281, 0
  %320 = call i8 @get_i8(i32 %319)
  %321 = zext i8 %320 to i32
  %322 = and i32 %321, 63
  br label %b_54

b_58:                                             ; preds = %b_54
  %323 = and i32 %307, 255
  %324 = or i32 %286, %313
  %325 = icmp eq i32 %303, %306
  %326 = zext i1 %325 to i32
  %327 = icmp ne i32 %326, 0
  br i1 %327, label %b_59, label %b_60

b_59:                                             ; preds = %b_58
  br label %b_61

b_60:                                             ; preds = %b_58
  %328 = add i32 %306, 0
  %329 = call i8 @get_i8(i32 %328)
  %330 = zext i8 %329 to i32
  %331 = and i32 %330, 63
  br label %b_61

b_61:                                             ; preds = %b_60, %b_59
  %332 = phi i32 [ %300, %b_59 ], [ %300, %b_60 ]
  %333 = phi i32 [ %301, %b_59 ], [ %301, %b_60 ]
  %334 = phi i32 [ %302, %b_59 ], [ %302, %b_60 ]
  %335 = phi i32 [ %303, %b_59 ], [ %303, %b_60 ]
  %336 = phi i32 [ %324, %b_59 ], [ %324, %b_60 ]
  %337 = phi i32 [ %305, %b_59 ], [ %305, %b_60 ]
  %338 = phi i32 [ %306, %b_59 ], [ %306, %b_60 ]
  %339 = phi i32 [ %323, %b_59 ], [ %323, %b_60 ]
  %340 = phi i32 [ %308, %b_59 ], [ %308, %b_60 ]
  %341 = phi i32 [ %309, %b_59 ], [ %309, %b_60 ]
  %342 = phi i32 [ %310, %b_59 ], [ %310, %b_60 ]
  %343 = phi i32 [ %311, %b_59 ], [ %311, %b_60 ]
  %344 = phi i32 [ %312, %b_59 ], [ %312, %b_60 ]
  %345 = phi i32 [ 0, %b_59 ], [ %331, %b_60 ]
  %346 = shl i32 %339, 18
  %347 = and i32 %346, 1835008
  %348 = shl i32 %336, 6
  %349 = or i32 %347, %348
  %350 = or i32 %345, %349
  %351 = icmp eq i32 %350, 1114112
  %352 = zext i1 %351 to i32
  %353 = icmp ne i32 %352, 0
  br i1 %353, label %b_14, label %b_62

b_62:                                             ; preds = %b_61
  br label %b_45

b_63:                                             ; preds = %b_45
  %354 = icmp eq i32 0, %261
  %355 = zext i1 %354 to i32
  %356 = icmp eq i32 %258, %261
  %357 = zext i1 %356 to i32
  %358 = or i32 %355, %357
  %359 = icmp eq i32 0, %358
  %360 = zext i1 %359 to i32
  %361 = icmp ne i32 %360, 0
  br i1 %361, label %b_65, label %b_66

b_64:                                             ; preds = %b_68, %b_67, %b_65
  %362 = phi i32 [ %256, %b_65 ], [ %256, %b_68 ], [ %382, %b_67 ]
  %363 = phi i32 [ %257, %b_65 ], [ %257, %b_68 ], [ %383, %b_67 ]
  %364 = phi i32 [ %258, %b_65 ], [ %258, %b_68 ], [ %384, %b_67 ]
  %365 = phi i32 [ 0, %b_65 ], [ 0, %b_68 ], [ %383, %b_67 ]
  %366 = phi i32 [ %260, %b_65 ], [ %260, %b_68 ], [ %386, %b_67 ]
  %367 = phi i32 [ %261, %b_65 ], [ %261, %b_68 ], [ %387, %b_67 ]
  %368 = phi i32 [ %262, %b_65 ], [ %262, %b_68 ], [ %388, %b_67 ]
  %369 = phi i32 [ %263, %b_65 ], [ %263, %b_68 ], [ %389, %b_67 ]
  %370 = phi i32 [ %264, %b_65 ], [ %264, %b_68 ], [ %390, %b_67 ]
  %371 = phi i32 [ %265, %b_65 ], [ %265, %b_68 ], [ %391, %b_67 ]
  %372 = phi i32 [ %266, %b_65 ], [ %266, %b_68 ], [ %392, %b_67 ]
  %373 = phi i32 [ %267, %b_65 ], [ %267, %b_68 ], [ %393, %b_67 ]
  %374 = phi i32 [ %268, %b_65 ], [ %268, %b_68 ], [ %394, %b_67 ]
  %375 = icmp ne i32 %365, 0
  %376 = select i1 %375, i32 %367, i32 %364
  %377 = icmp ne i32 %365, 0
  %378 = select i1 %377, i32 %365, i32 %363
  br label %b_14

b_65:                                             ; preds = %b_63
  %379 = icmp uge i32 %261, %258
  %380 = zext i1 %379 to i32
  %381 = icmp ne i32 %380, 0
  br i1 %381, label %b_64, label %b_68

b_66:                                             ; preds = %b_63
  br label %b_67

b_67:                                             ; preds = %b_69, %b_66
  %382 = phi i32 [ %256, %b_69 ], [ %256, %b_66 ]
  %383 = phi i32 [ %257, %b_69 ], [ %257, %b_66 ]
  %384 = phi i32 [ %258, %b_69 ], [ %258, %b_66 ]
  %385 = phi i32 [ 0, %b_69 ], [ %259, %b_66 ]
  %386 = phi i32 [ %260, %b_69 ], [ %260, %b_66 ]
  %387 = phi i32 [ %261, %b_69 ], [ %261, %b_66 ]
  %388 = phi i32 [ %262, %b_69 ], [ %262, %b_66 ]
  %389 = phi i32 [ %263, %b_69 ], [ %263, %b_66 ]
  %390 = phi i32 [ %264, %b_69 ], [ %264, %b_66 ]
  %391 = phi i32 [ %265, %b_69 ], [ %265, %b_66 ]
  %392 = phi i32 [ %266, %b_69 ], [ %266, %b_66 ]
  %393 = phi i32 [ %267, %b_69 ], [ %267, %b_66 ]
  %394 = phi i32 [ %268, %b_69 ], [ %268, %b_66 ]
  br label %b_64

b_68:                                             ; preds = %b_65
  %395 = add i32 %257, %261
  %396 = add i32 %395, 0
  %397 = call i8 @get_i8(i32 %396)
  %398 = sext i8 %397 to i32
  %399 = icmp slt i32 %398, -64
  %400 = zext i1 %399 to i32
  %401 = icmp ne i32 %400, 0
  br i1 %401, label %b_64, label %b_69

b_69:                                             ; preds = %b_68
  br label %b_67

b_70:                                             ; preds = %b_14
  br label %b_1

b_71:                                             ; preds = %b_5
  %402 = icmp ne i32 %43, 0
  br i1 %402, label %b_73, label %b_74

b_72:                                             ; preds = %b_81, %b_75
  %403 = phi i32 [ %450, %b_81 ], [ %41, %b_75 ]
  %404 = phi i32 [ %451, %b_81 ], [ %42, %b_75 ]
  %405 = phi i32 [ %452, %b_81 ], [ %43, %b_75 ]
  %406 = phi i32 [ %470, %b_81 ], [ %44, %b_75 ]
  %407 = phi i32 [ %469, %b_81 ], [ 0, %b_75 ]
  %408 = phi i32 [ %471, %b_81 ], [ %46, %b_75 ]
  %409 = phi i32 [ %456, %b_81 ], [ %419, %b_75 ]
  %410 = phi i32 [ %457, %b_81 ], [ %48, %b_75 ]
  %411 = phi i32 [ %458, %b_81 ], [ %49, %b_75 ]
  %412 = phi i32 [ %459, %b_81 ], [ %50, %b_75 ]
  %413 = phi i32 [ %460, %b_81 ], [ %51, %b_75 ]
  %414 = phi i32 [ %461, %b_81 ], [ %52, %b_75 ]
  %415 = phi i32 [ %462, %b_81 ], [ %53, %b_75 ]
  %416 = sub i32 %407, %405
  %417 = add i32 %416, %409
  br label %b_84

b_73:                                             ; preds = %b_71
  br label %b_76

b_74:                                             ; preds = %b_71
  br label %b_75

b_75:                                             ; preds = %b_74
  %418 = add i32 %41, 12
  %419 = call i32 @get_i32(i32 %418)
  %420 = icmp ne i32 %419, 0
  br i1 %420, label %b_72, label %b_83

b_76:                                             ; preds = %b_76, %b_73
  %421 = phi i32 [ %41, %b_73 ], [ %421, %b_76 ]
  %422 = phi i32 [ %42, %b_73 ], [ %422, %b_76 ]
  %423 = phi i32 [ %43, %b_73 ], [ %423, %b_76 ]
  %424 = phi i32 [ %42, %b_73 ], [ %441, %b_76 ]
  %425 = phi i32 [ 0, %b_73 ], [ %440, %b_76 ]
  %426 = phi i32 [ %43, %b_73 ], [ %442, %b_76 ]
  %427 = phi i32 [ %47, %b_73 ], [ %427, %b_76 ]
  %428 = phi i32 [ %48, %b_73 ], [ %428, %b_76 ]
  %429 = phi i32 [ %49, %b_73 ], [ %429, %b_76 ]
  %430 = phi i32 [ %50, %b_73 ], [ %430, %b_76 ]
  %431 = phi i32 [ %51, %b_73 ], [ %431, %b_76 ]
  %432 = phi i32 [ %52, %b_73 ], [ %432, %b_76 ]
  %433 = phi i32 [ %53, %b_73 ], [ %433, %b_76 ]
  %434 = add i32 %424, 0
  %435 = call i8 @get_i8(i32 %434)
  %436 = zext i8 %435 to i32
  %437 = and i32 %436, 192
  %438 = icmp eq i32 %437, 128
  %439 = zext i1 %438 to i32
  %440 = add i32 %425, %439
  %441 = add i32 %424, 1
  %442 = add i32 %426, -1
  %443 = icmp ne i32 %442, 0
  br i1 %443, label %b_76, label %b_78

b_77:                                             ; preds = %b_78
  %444 = sub i32 %423, %440
  %445 = add i32 %421, 12
  %446 = call i32 @get_i32(i32 %445)
  %447 = icmp uge i32 %444, %446
  %448 = zext i1 %447 to i32
  %449 = icmp ne i32 %448, 0
  br i1 %449, label %b_1, label %b_79

b_78:                                             ; preds = %b_76
  br label %b_77

b_79:                                             ; preds = %b_77
  br label %b_80

b_80:                                             ; preds = %b_80, %b_79
  %450 = phi i32 [ %421, %b_79 ], [ %450, %b_80 ]
  %451 = phi i32 [ %422, %b_79 ], [ %451, %b_80 ]
  %452 = phi i32 [ %423, %b_79 ], [ %452, %b_80 ]
  %453 = phi i32 [ %422, %b_79 ], [ %470, %b_80 ]
  %454 = phi i32 [ 0, %b_79 ], [ %469, %b_80 ]
  %455 = phi i32 [ %423, %b_79 ], [ %471, %b_80 ]
  %456 = phi i32 [ %446, %b_79 ], [ %456, %b_80 ]
  %457 = phi i32 [ %428, %b_79 ], [ %457, %b_80 ]
  %458 = phi i32 [ %429, %b_79 ], [ %458, %b_80 ]
  %459 = phi i32 [ %430, %b_79 ], [ %459, %b_80 ]
  %460 = phi i32 [ %431, %b_79 ], [ %460, %b_80 ]
  %461 = phi i32 [ %432, %b_79 ], [ %461, %b_80 ]
  %462 = phi i32 [ %433, %b_79 ], [ %462, %b_80 ]
  %463 = add i32 %453, 0
  %464 = call i8 @get_i8(i32 %463)
  %465 = zext i8 %464 to i32
  %466 = and i32 %465, 192
  %467 = icmp eq i32 %466, 128
  %468 = zext i1 %467 to i32
  %469 = add i32 %454, %468
  %470 = add i32 %453, 1
  %471 = add i32 %455, -1
  %472 = icmp ne i32 %471, 0
  br i1 %472, label %b_80, label %b_82

b_81:                                             ; preds = %b_82
  br label %b_72

b_82:                                             ; preds = %b_80
  br label %b_81

b_83:                                             ; preds = %b_75
  br label %b_1

b_84:                                             ; preds = %b_72
  br label %b_86

b_85:                                             ; preds = %b_89, %b_88, %b_87
  %473 = phi i32 [ %403, %b_88 ], [ %403, %b_89 ], [ %487, %b_87 ]
  %474 = phi i32 [ %404, %b_88 ], [ %404, %b_89 ], [ %488, %b_87 ]
  %475 = phi i32 [ %405, %b_88 ], [ %405, %b_89 ], [ %489, %b_87 ]
  %476 = phi i32 [ 0, %b_88 ], [ %509, %b_89 ], [ %491, %b_87 ]
  %477 = phi i32 [ %417, %b_88 ], [ %417, %b_89 ], [ %491, %b_87 ]
  %478 = phi i32 [ %417, %b_88 ], [ %511, %b_89 ], [ 0, %b_87 ]
  %479 = phi i32 [ %502, %b_88 ], [ %502, %b_89 ], [ %493, %b_87 ]
  %480 = phi i32 [ %410, %b_88 ], [ %410, %b_89 ], [ %494, %b_87 ]
  %481 = phi i32 [ %411, %b_88 ], [ %411, %b_89 ], [ %495, %b_87 ]
  %482 = phi i32 [ %412, %b_88 ], [ %412, %b_89 ], [ %496, %b_87 ]
  %483 = phi i32 [ %413, %b_88 ], [ %413, %b_89 ], [ %497, %b_87 ]
  %484 = phi i32 [ %414, %b_88 ], [ %414, %b_89 ], [ %498, %b_87 ]
  %485 = phi i32 [ %415, %b_88 ], [ %415, %b_89 ], [ %499, %b_87 ]
  %486 = add i32 %476, 1
  br label %b_90

b_86:                                             ; preds = %b_84
  br label %b_88

b_87:                                             ; preds = %b_88, %b_88
  %487 = phi i32 [ %403, %b_88 ], [ %403, %b_88 ]
  %488 = phi i32 [ %404, %b_88 ], [ %404, %b_88 ]
  %489 = phi i32 [ %405, %b_88 ], [ %405, %b_88 ]
  %490 = phi i32 [ 0, %b_88 ], [ 0, %b_88 ]
  %491 = phi i32 [ %417, %b_88 ], [ %417, %b_88 ]
  %492 = phi i32 [ %417, %b_88 ], [ %417, %b_88 ]
  %493 = phi i32 [ %502, %b_88 ], [ %502, %b_88 ]
  %494 = phi i32 [ %410, %b_88 ], [ %410, %b_88 ]
  %495 = phi i32 [ %411, %b_88 ], [ %411, %b_88 ]
  %496 = phi i32 [ %412, %b_88 ], [ %412, %b_88 ]
  %497 = phi i32 [ %413, %b_88 ], [ %413, %b_88 ]
  %498 = phi i32 [ %414, %b_88 ], [ %414, %b_88 ]
  %499 = phi i32 [ %415, %b_88 ], [ %415, %b_88 ]
  br label %b_85

b_88:                                             ; preds = %b_86
  %500 = add i32 %403, 32
  %501 = call i8 @get_i8(i32 %500)
  %502 = zext i8 %501 to i32
  %503 = icmp eq i32 %502, 3
  %504 = zext i1 %503 to i32
  %505 = icmp ne i32 %504, 0
  %506 = select i1 %505, i32 0, i32 %502
  %507 = and i32 %506, 3
  %508 = sub i32 %507, 1
  switch i32 %508, label %b_85 [
    i32 0, label %b_87
    i32 1, label %b_89
    i32 2, label %b_87
  ]

b_89:                                             ; preds = %b_88
  %509 = lshr i32 %417, 1
  %510 = add i32 %417, 1
  %511 = lshr i32 %510, 1
  br label %b_85

b_90:                                             ; preds = %b_85
  br label %b_92

b_91:                                             ; preds = %b_92
  %512 = add i32 %524, 4
  %513 = call i32 @get_i32(i32 %512)
  %514 = add i32 %524, 24
  %515 = call i32 @get_i32(i32 %514)
  %516 = add i32 %524, 28
  %517 = call i32 @get_i32(i32 %516)
  %518 = add i32 %517, 12
  %519 = call i32 @get_i32(i32 %518)
  %520 = call i8* @get_function_from_table(i32 %519, i32 1)
  %521 = bitcast i8* %520 to i32 (i32, i32, i32)*
  %522 = call i32 %521(i32 %515, i32 %525, i32 %526)
  %523 = icmp ne i32 %522, 0
  br i1 %523, label %b_3, label %b_96

b_92:                                             ; preds = %b_94, %b_90
  %524 = phi i32 [ %473, %b_90 ], [ %524, %b_94 ]
  %525 = phi i32 [ %474, %b_90 ], [ %525, %b_94 ]
  %526 = phi i32 [ %475, %b_90 ], [ %526, %b_94 ]
  %527 = phi i32 [ %486, %b_90 ], [ %537, %b_94 ]
  %528 = phi i32 [ %477, %b_90 ], [ %528, %b_94 ]
  %529 = phi i32 [ %478, %b_90 ], [ %529, %b_94 ]
  %530 = phi i32 [ %479, %b_90 ], [ %530, %b_94 ]
  %531 = phi i32 [ %480, %b_90 ], [ %531, %b_94 ]
  %532 = phi i32 [ %481, %b_90 ], [ %532, %b_94 ]
  %533 = phi i32 [ %482, %b_90 ], [ %533, %b_94 ]
  %534 = phi i32 [ %483, %b_90 ], [ %534, %b_94 ]
  %535 = phi i32 [ %484, %b_90 ], [ %535, %b_94 ]
  %536 = phi i32 [ %485, %b_90 ], [ %536, %b_94 ]
  %537 = add i32 %527, -1
  %538 = icmp eq i32 0, %537
  %539 = zext i1 %538 to i32
  %540 = icmp ne i32 %539, 0
  br i1 %540, label %b_91, label %b_94

b_93:                                             ; preds = %b_95
  ret i32 1

b_94:                                             ; preds = %b_92
  %541 = add i32 %524, 24
  %542 = call i32 @get_i32(i32 %541)
  %543 = add i32 %524, 4
  %544 = call i32 @get_i32(i32 %543)
  %545 = add i32 %524, 28
  %546 = call i32 @get_i32(i32 %545)
  %547 = add i32 %546, 16
  %548 = call i32 @get_i32(i32 %547)
  %549 = call i8* @get_function_from_table(i32 %548, i32 0)
  %550 = bitcast i8* %549 to i32 (i32, i32)*
  %551 = call i32 %550(i32 %542, i32 %544)
  %552 = icmp eq i32 0, %551
  %553 = zext i1 %552 to i32
  %554 = icmp ne i32 %553, 0
  br i1 %554, label %b_92, label %b_95

b_95:                                             ; preds = %b_94
  br label %b_93

b_96:                                             ; preds = %b_91
  %555 = add i32 %529, 1
  %556 = add i32 %524, 28
  %557 = call i32 @get_i32(i32 %556)
  %558 = add i32 %524, 24
  %559 = call i32 @get_i32(i32 %558)
  br label %b_97

b_97:                                             ; preds = %b_101, %b_96
  %560 = phi i32 [ %559, %b_96 ], [ %560, %b_101 ]
  %561 = phi i32 [ %557, %b_96 ], [ %561, %b_101 ]
  %562 = phi i32 [ %526, %b_96 ], [ %562, %b_101 ]
  %563 = phi i32 [ %555, %b_96 ], [ %573, %b_101 ]
  %564 = phi i32 [ %513, %b_96 ], [ %564, %b_101 ]
  %565 = phi i32 [ %529, %b_96 ], [ %565, %b_101 ]
  %566 = phi i32 [ %530, %b_96 ], [ %566, %b_101 ]
  %567 = phi i32 [ %531, %b_96 ], [ %567, %b_101 ]
  %568 = phi i32 [ %532, %b_96 ], [ %568, %b_101 ]
  %569 = phi i32 [ %533, %b_96 ], [ %569, %b_101 ]
  %570 = phi i32 [ %534, %b_96 ], [ %570, %b_101 ]
  %571 = phi i32 [ %535, %b_96 ], [ %571, %b_101 ]
  %572 = phi i32 [ %536, %b_96 ], [ %572, %b_101 ]
  %573 = add i32 %563, -1
  %574 = icmp eq i32 0, %573
  %575 = zext i1 %574 to i32
  %576 = icmp ne i32 %575, 0
  br i1 %576, label %b_99, label %b_100

b_98:                                             ; preds = %b_102
  ret i32 1

b_99:                                             ; preds = %b_97
  ret i32 0

b_100:                                            ; preds = %b_97
  br label %b_101

b_101:                                            ; preds = %b_100
  %577 = add i32 %561, 16
  %578 = call i32 @get_i32(i32 %577)
  %579 = call i8* @get_function_from_table(i32 %578, i32 0)
  %580 = bitcast i8* %579 to i32 (i32, i32)*
  %581 = call i32 %580(i32 %560, i32 %564)
  %582 = icmp eq i32 0, %581
  %583 = zext i1 %582 to i32
  %584 = icmp ne i32 %583, 0
  br i1 %584, label %b_97, label %b_102

b_102:                                            ; preds = %b_101
  br label %b_98
}

; Function Attrs: nounwind
define void @wasmf_internal_8(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = load i32, i32* @wasmg_internal_0, align 4
  %4 = sub i32 %3, 256
  store i32 %4, i32* @wasmg_internal_0, align 4
  br label %b_0

exit:                                             ; preds = %b_1
  ret void

b_0:                                              ; preds = %entry
  %5 = icmp uge i32 %2, 1025
  %6 = zext i1 %5 to i32
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %b_2, label %b_3

b_1:                                              ; preds = %b_4, %b_2
  %8 = phi i32 [ %0, %b_2 ], [ %0, %b_4 ]
  %9 = phi i32 [ %1, %b_2 ], [ %166, %b_4 ]
  %10 = phi i32 [ %148, %b_2 ], [ %238, %b_4 ]
  %11 = phi i32 [ %4, %b_2 ], [ %4, %b_4 ]
  %12 = phi i32 [ 64, %b_2 ], [ %225, %b_4 ]
  %13 = phi i32 [ 36, %b_2 ], [ %237, %b_4 ]
  %14 = phi i32 [ %87, %b_2 ], [ %156, %b_4 ]
  %15 = phi i32 [ 0, %b_2 ], [ 0, %b_4 ]
  %16 = phi i32 [ 0, %b_2 ], [ 0, %b_4 ]
  %17 = phi i64 [ 0, %b_2 ], [ 0, %b_4 ]
  %18 = phi i64 [ 0, %b_2 ], [ 0, %b_4 ]
  %19 = phi i64 [ 0, %b_2 ], [ 0, %b_4 ]
  %20 = phi i32 [ %149, %b_2 ], [ %239, %b_4 ]
  %21 = trunc i32 %13 to i8
  %22 = add i32 %11, 105
  call void @set_i8(i32 %22, i8 %21)
  %23 = add i32 %10, 24
  %24 = add i32 %20, 24
  %25 = add i32 %24, 0
  %26 = call i64 @get_i64(i32 %25)
  %27 = add i32 %23, 0
  call void @set_i64(i32 %27, i64 %26)
  %28 = add i32 %10, 16
  %29 = add i32 %20, 16
  %30 = add i32 %29, 0
  %31 = call i64 @get_i64(i32 %30)
  %32 = add i32 %28, 0
  call void @set_i64(i32 %32, i64 %31)
  %33 = add i32 %10, 8
  %34 = add i32 %20, 8
  %35 = add i32 %34, 0
  %36 = call i64 @get_i64(i32 %35)
  %37 = add i32 %33, 0
  call void @set_i64(i32 %37, i64 %36)
  %38 = add i32 %20, 0
  %39 = call i64 @get_i64(i32 %38)
  %40 = add i32 %10, 0
  call void @set_i64(i32 %40, i64 %39)
  %41 = add i32 %11, 112
  %42 = add i32 %11, 40
  %43 = or i32 %13, 8
  call void @wasmf_internal_3(i32 %41, i32 %42, i32 %12, i64 0, i32 %43)
  %44 = add i32 %11, 112
  %45 = call i64 @get_i64(i32 %44)
  %46 = add i32 %11, 120
  %47 = call i64 @get_i64(i32 %46)
  %48 = add i32 %11, 128
  %49 = call i64 @get_i64(i32 %48)
  %50 = add i32 %8, 32
  %51 = add i32 %11, 136
  %52 = call i64 @get_i64(i32 %51)
  %53 = add i32 %50, 0
  call void @set_i64(i32 %53, i64 %52)
  %54 = add i32 %8, 24
  %55 = add i32 %54, 0
  call void @set_i64(i32 %55, i64 %49)
  %56 = add i32 %8, 16
  %57 = add i32 %56, 0
  call void @set_i64(i32 %57, i64 %47)
  %58 = add i32 %8, 8
  call void @set_i64(i32 %58, i64 %45)
  %59 = add i32 %8, 0
  call void @set_i64(i32 %59, i64 0)
  %60 = add i32 %10, 0
  %61 = call i64 @get_i64(i32 %60)
  %62 = add i32 %8, 112
  call void @set_i64(i32 %62, i64 %61)
  %63 = add i32 %8, 120
  %64 = add i32 %33, 0
  %65 = call i64 @get_i64(i32 %64)
  %66 = add i32 %63, 0
  call void @set_i64(i32 %66, i64 %65)
  %67 = add i32 %8, 128
  %68 = add i32 %28, 0
  %69 = call i64 @get_i64(i32 %68)
  %70 = add i32 %67, 0
  call void @set_i64(i32 %70, i64 %69)
  %71 = add i32 %8, 136
  %72 = add i32 %23, 0
  %73 = call i64 @get_i64(i32 %72)
  %74 = add i32 %71, 0
  call void @set_i64(i32 %74, i64 %73)
  %75 = add i32 %8, 40
  %76 = call i32 @wasmf_internal_59(i32 %75, i32 66)
  %77 = add i32 %8, 1904
  %78 = add i32 %77, 0
  call void @set_i8(i32 %78, i8 0)
  %79 = add i32 %8, 106
  call void @set_i8(i32 %79, i8 64)
  %80 = add i32 %11, 256
  store i32 %80, i32* @wasmg_internal_0, align 4
  br label %exit

b_2:                                              ; preds = %b_0
  %81 = add i32 %4, 136
  %82 = call i64 @get_i64(i32 1049072)
  %83 = add i32 %81, 0
  call void @set_i64(i32 %83, i64 %82)
  %84 = add i32 %4, 128
  %85 = call i64 @get_i64(i32 1049064)
  %86 = add i32 %84, 0
  call void @set_i64(i32 %86, i64 %85)
  %87 = add i32 %4, 120
  %88 = call i64 @get_i64(i32 1049056)
  %89 = add i32 %87, 0
  call void @set_i64(i32 %89, i64 %88)
  %90 = call i64 @get_i64(i32 1049048)
  %91 = add i32 %4, 112
  call void @set_i64(i32 %91, i64 %90)
  %92 = add i32 %4, 144
  call void @wasmf_internal_19(i32 %92, i32 %1, i32 %2, i32 1049048, i64 0, i32 32)
  %93 = add i32 %4, 32
  %94 = add i32 %81, 0
  %95 = call i64 @get_i64(i32 %94)
  %96 = add i32 %93, 0
  call void @set_i64(i32 %96, i64 %95)
  %97 = add i32 %4, 24
  %98 = add i32 %84, 0
  %99 = call i64 @get_i64(i32 %98)
  %100 = add i32 %97, 0
  call void @set_i64(i32 %100, i64 %99)
  %101 = add i32 %4, 16
  %102 = add i32 %87, 0
  %103 = call i64 @get_i64(i32 %102)
  %104 = add i32 %101, 0
  call void @set_i64(i32 %104, i64 %103)
  %105 = add i32 %4, 48
  %106 = add i32 %4, 152
  %107 = add i32 %106, 0
  %108 = call i64 @get_i64(i32 %107)
  %109 = add i32 %105, 0
  call void @set_i64(i32 %109, i64 %108)
  %110 = add i32 %4, 56
  %111 = add i32 %4, 160
  %112 = add i32 %111, 0
  %113 = call i64 @get_i64(i32 %112)
  %114 = add i32 %110, 0
  call void @set_i64(i32 %114, i64 %113)
  %115 = sub i32 %4, -64
  %116 = add i32 %4, 168
  %117 = add i32 %116, 0
  %118 = call i64 @get_i64(i32 %117)
  %119 = add i32 %115, 0
  call void @set_i64(i32 %119, i64 %118)
  %120 = add i32 %4, 72
  %121 = add i32 %4, 176
  %122 = add i32 %121, 0
  %123 = call i64 @get_i64(i32 %122)
  %124 = add i32 %120, 0
  call void @set_i64(i32 %124, i64 %123)
  %125 = add i32 %4, 80
  %126 = add i32 %4, 184
  %127 = add i32 %126, 0
  %128 = call i64 @get_i64(i32 %127)
  %129 = add i32 %125, 0
  call void @set_i64(i32 %129, i64 %128)
  %130 = add i32 %4, 88
  %131 = add i32 %4, 192
  %132 = add i32 %131, 0
  %133 = call i64 @get_i64(i32 %132)
  %134 = add i32 %130, 0
  call void @set_i64(i32 %134, i64 %133)
  %135 = add i32 %4, 96
  %136 = add i32 %4, 200
  %137 = add i32 %136, 0
  %138 = call i64 @get_i64(i32 %137)
  %139 = add i32 %135, 0
  call void @set_i64(i32 %139, i64 %138)
  %140 = add i32 %4, 112
  %141 = call i64 @get_i64(i32 %140)
  %142 = add i32 %4, 8
  call void @set_i64(i32 %142, i64 %141)
  %143 = add i32 %4, 144
  %144 = call i64 @get_i64(i32 %143)
  %145 = add i32 %4, 40
  call void @set_i64(i32 %145, i64 %144)
  %146 = add i32 %4, 0
  call void @set_i64(i32 %146, i64 0)
  %147 = add i32 %4, 104
  call void @set_i8(i32 %147, i8 64)
  %148 = add i32 %4, 112
  %149 = add i32 %4, 8
  br label %b_1

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  %150 = add i32 %4, 176
  %151 = call i64 @get_i64(i32 1049072)
  %152 = add i32 %150, 0
  call void @set_i64(i32 %152, i64 %151)
  %153 = add i32 %4, 168
  %154 = call i64 @get_i64(i32 1049064)
  %155 = add i32 %153, 0
  call void @set_i64(i32 %155, i64 %154)
  %156 = add i32 %4, 160
  %157 = call i64 @get_i64(i32 1049056)
  %158 = add i32 %156, 0
  call void @set_i64(i32 %158, i64 %157)
  %159 = add i32 %4, 144
  call void @set_i64(i32 %159, i64 0)
  %160 = call i64 @get_i64(i32 1049048)
  %161 = add i32 %4, 152
  call void @set_i64(i32 %161, i64 %160)
  %162 = add i32 %4, 184
  %163 = call i32 @wasmf_internal_59(i32 %162, i32 66)
  %164 = add i32 %4, 250
  call void @set_i8(i32 %164, i8 32)
  %165 = add i32 %4, 144
  %166 = call i32 @wasmf_internal_21(i32 %165, i32 %1, i32 %2)
  %167 = add i32 %4, 16
  %168 = add i32 %156, 0
  %169 = call i64 @get_i64(i32 %168)
  %170 = add i32 %167, 0
  call void @set_i64(i32 %170, i64 %169)
  %171 = add i32 %4, 24
  %172 = add i32 %153, 0
  %173 = call i64 @get_i64(i32 %172)
  %174 = add i32 %171, 0
  call void @set_i64(i32 %174, i64 %173)
  %175 = add i32 %4, 32
  %176 = add i32 %150, 0
  %177 = call i64 @get_i64(i32 %176)
  %178 = add i32 %175, 0
  call void @set_i64(i32 %178, i64 %177)
  %179 = add i32 %4, 48
  %180 = add i32 %4, 192
  %181 = add i32 %180, 0
  %182 = call i64 @get_i64(i32 %181)
  %183 = add i32 %179, 0
  call void @set_i64(i32 %183, i64 %182)
  %184 = add i32 %4, 56
  %185 = add i32 %4, 200
  %186 = add i32 %185, 0
  %187 = call i64 @get_i64(i32 %186)
  %188 = add i32 %184, 0
  call void @set_i64(i32 %188, i64 %187)
  %189 = sub i32 %4, -64
  %190 = add i32 %4, 208
  %191 = add i32 %190, 0
  %192 = call i64 @get_i64(i32 %191)
  %193 = add i32 %189, 0
  call void @set_i64(i32 %193, i64 %192)
  %194 = add i32 %4, 72
  %195 = add i32 %4, 216
  %196 = add i32 %195, 0
  %197 = call i64 @get_i64(i32 %196)
  %198 = add i32 %194, 0
  call void @set_i64(i32 %198, i64 %197)
  %199 = add i32 %4, 80
  %200 = add i32 %4, 224
  %201 = add i32 %200, 0
  %202 = call i64 @get_i64(i32 %201)
  %203 = add i32 %199, 0
  call void @set_i64(i32 %203, i64 %202)
  %204 = add i32 %4, 88
  %205 = add i32 %4, 232
  %206 = add i32 %205, 0
  %207 = call i64 @get_i64(i32 %206)
  %208 = add i32 %204, 0
  call void @set_i64(i32 %208, i64 %207)
  %209 = add i32 %4, 96
  %210 = add i32 %4, 240
  %211 = add i32 %210, 0
  %212 = call i64 @get_i64(i32 %211)
  %213 = add i32 %209, 0
  call void @set_i64(i32 %213, i64 %212)
  %214 = add i32 %4, 152
  %215 = call i64 @get_i64(i32 %214)
  %216 = add i32 %4, 8
  call void @set_i64(i32 %216, i64 %215)
  %217 = add i32 %4, 184
  %218 = call i64 @get_i64(i32 %217)
  %219 = add i32 %4, 40
  call void @set_i64(i32 %219, i64 %218)
  %220 = add i32 %166, 105
  %221 = call i8 @get_i8(i32 %220)
  %222 = zext i8 %221 to i32
  %223 = add i32 %166, 104
  %224 = call i8 @get_i8(i32 %223)
  %225 = zext i8 %224 to i32
  %226 = add i32 %4, 250
  %227 = call i8 @get_i8(i32 %226)
  %228 = zext i8 %227 to i32
  %229 = add i32 %4, 144
  %230 = call i64 @get_i64(i32 %229)
  %231 = add i32 %4, 0
  call void @set_i64(i32 %231, i64 %230)
  %232 = trunc i32 %225 to i8
  %233 = add i32 %4, 104
  call void @set_i8(i32 %233, i8 %232)
  %234 = icmp eq i32 0, %222
  %235 = zext i1 %234 to i32
  %236 = or i32 %228, %235
  %237 = or i32 %236, 2
  %238 = add i32 %4, 112
  %239 = add i32 %4, 8
  br label %b_1
}

; Function Attrs: nounwind
define void @wasmf_internal_9(i32 %0, i64 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 240
  store i32 %3, i32* @wasmg_internal_0, align 4
  br label %b_0

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_12
  %4 = add i32 %53, 204
  call void @set_i32(i32 %4, i32 %230)
  %5 = add i32 %53, 200
  call void @set_i32(i32 %5, i32 %224)
  %6 = add i32 %53, 196
  call void @set_i32(i32 %6, i32 %232)
  %7 = add i32 %53, 192
  call void @set_i32(i32 %7, i32 %226)
  %8 = add i32 %53, 188
  call void @set_i32(i32 %8, i32 %234)
  %9 = add i32 %53, 184
  call void @set_i32(i32 %9, i32 %228)
  %10 = add i32 %53, 180
  call void @set_i32(i32 %10, i32 %236)
  %11 = add i32 %53, 176
  call void @set_i32(i32 %11, i32 %238)
  %12 = add i32 %53, 176
  call void @wasmf_internal_35(i32 %12, i32 1049364)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_11
  call void @wasmf_internal_49(i32 1048800, i32 43, i32 1049096)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_4:                                              ; preds = %b_2
  %13 = add i32 %0, 1904
  %14 = add i32 %13, 0
  %15 = call i8 @get_i8(i32 %14)
  %16 = zext i8 %15 to i32
  %17 = call i64 @llvm.ctpop.i64(i64 %1)
  %18 = trunc i64 %17 to i32
  %19 = icmp ugt i32 %16, %18
  %20 = zext i1 %19 to i32
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %b_6, label %b_7

b_5:                                              ; preds = %b_9
  call void @wasmf_internal_49(i32 1048800, i32 43, i32 1049080)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_6:                                              ; preds = %b_4
  %22 = add i32 %0, 112
  %23 = add i32 %0, 144
  %24 = add i32 %3, 104
  %25 = add i32 %3, 72
  %26 = add i32 %3, 208
  br label %b_9

b_7:                                              ; preds = %b_4
  br label %b_8

b_8:                                              ; preds = %b_10, %b_7
  %27 = phi i32 [ %51, %b_10 ], [ %0, %b_7 ]
  %28 = phi i64 [ %113, %b_10 ], [ %1, %b_7 ]
  %29 = phi i32 [ %53, %b_10 ], [ %3, %b_7 ]
  %30 = phi i32 [ %255, %b_10 ], [ %16, %b_7 ]
  %31 = phi i32 [ %55, %b_10 ], [ 0, %b_7 ]
  %32 = phi i32 [ %226, %b_10 ], [ 0, %b_7 ]
  %33 = phi i32 [ %228, %b_10 ], [ 0, %b_7 ]
  %34 = phi i32 [ %224, %b_10 ], [ 0, %b_7 ]
  %35 = phi i32 [ %230, %b_10 ], [ 0, %b_7 ]
  %36 = phi i32 [ %232, %b_10 ], [ 0, %b_7 ]
  %37 = phi i32 [ %234, %b_10 ], [ 0, %b_7 ]
  %38 = phi i32 [ %62, %b_10 ], [ 0, %b_7 ]
  %39 = phi i32 [ %63, %b_10 ], [ 0, %b_7 ]
  %40 = phi i32 [ %64, %b_10 ], [ %13, %b_7 ]
  %41 = phi i32 [ %65, %b_10 ], [ 0, %b_7 ]
  %42 = phi i32 [ %66, %b_10 ], [ 0, %b_7 ]
  %43 = phi i32 [ %236, %b_10 ], [ 0, %b_7 ]
  %44 = phi i32 [ %238, %b_10 ], [ 0, %b_7 ]
  %45 = phi i32 [ %241, %b_10 ], [ 0, %b_7 ]
  %46 = phi i32 [ %70, %b_10 ], [ %18, %b_7 ]
  %47 = phi i64 [ %118, %b_10 ], [ 0, %b_7 ]
  %48 = phi i64 [ %123, %b_10 ], [ 0, %b_7 ]
  %49 = phi i64 [ %126, %b_10 ], [ 0, %b_7 ]
  %50 = add i32 %29, 240
  store i32 %50, i32* @wasmg_internal_0, align 4
  ret void

b_9:                                              ; preds = %b_13, %b_6
  %51 = phi i32 [ %0, %b_6 ], [ %51, %b_13 ]
  %52 = phi i64 [ %1, %b_6 ], [ %113, %b_13 ]
  %53 = phi i32 [ %3, %b_6 ], [ %53, %b_13 ]
  %54 = phi i32 [ %16, %b_6 ], [ %255, %b_13 ]
  %55 = phi i32 [ %24, %b_6 ], [ %55, %b_13 ]
  %56 = phi i32 [ 0, %b_6 ], [ %226, %b_13 ]
  %57 = phi i32 [ 0, %b_6 ], [ %228, %b_13 ]
  %58 = phi i32 [ 0, %b_6 ], [ %224, %b_13 ]
  %59 = phi i32 [ 0, %b_6 ], [ %230, %b_13 ]
  %60 = phi i32 [ 0, %b_6 ], [ %232, %b_13 ]
  %61 = phi i32 [ 0, %b_6 ], [ %234, %b_13 ]
  %62 = phi i32 [ %22, %b_6 ], [ %62, %b_13 ]
  %63 = phi i32 [ %26, %b_6 ], [ %63, %b_13 ]
  %64 = phi i32 [ %13, %b_6 ], [ %64, %b_13 ]
  %65 = phi i32 [ %25, %b_6 ], [ %65, %b_13 ]
  %66 = phi i32 [ %23, %b_6 ], [ %66, %b_13 ]
  %67 = phi i32 [ 0, %b_6 ], [ %236, %b_13 ]
  %68 = phi i32 [ 0, %b_6 ], [ %238, %b_13 ]
  %69 = phi i32 [ 0, %b_6 ], [ %241, %b_13 ]
  %70 = phi i32 [ %18, %b_6 ], [ %70, %b_13 ]
  %71 = phi i64 [ 0, %b_6 ], [ %118, %b_13 ]
  %72 = phi i64 [ 0, %b_6 ], [ %123, %b_13 ]
  %73 = phi i64 [ 0, %b_6 ], [ %126, %b_13 ]
  %74 = and i32 %54, 255
  %75 = icmp eq i32 0, %74
  %76 = zext i1 %75 to i32
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %b_5, label %b_11

b_10:                                             ; preds = %b_14
  br label %b_8

b_11:                                             ; preds = %b_9
  %78 = add i32 %74, -1
  %79 = trunc i32 %78 to i8
  %80 = add i32 %64, 0
  call void @set_i8(i32 %80, i8 %79)
  %81 = add i32 %53, 8
  %82 = shl i32 %78, 5
  %83 = add i32 %66, %82
  %84 = add i32 %83, 8
  %85 = add i32 %84, 0
  %86 = call i64 @get_i64(i32 %85)
  %87 = add i32 %81, 0
  call void @set_i64(i32 %87, i64 %86)
  %88 = add i32 %53, 16
  %89 = add i32 %83, 16
  %90 = add i32 %89, 0
  %91 = call i64 @get_i64(i32 %90)
  %92 = add i32 %88, 0
  call void @set_i64(i32 %92, i64 %91)
  %93 = add i32 %53, 24
  %94 = add i32 %83, 24
  %95 = add i32 %94, 0
  %96 = call i64 @get_i64(i32 %95)
  %97 = add i32 %93, 0
  call void @set_i64(i32 %97, i64 %96)
  %98 = add i32 %83, 0
  %99 = call i64 @get_i64(i32 %98)
  %100 = add i32 %53, 0
  call void @set_i64(i32 %100, i64 %99)
  %101 = and i32 %78, 255
  %102 = icmp eq i32 0, %101
  %103 = zext i1 %102 to i32
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %b_3, label %b_12

b_12:                                             ; preds = %b_11
  %105 = add i32 %74, -2
  %106 = trunc i32 %105 to i8
  %107 = add i32 %64, 0
  call void @set_i8(i32 %107, i8 %106)
  %108 = add i32 %53, 40
  %109 = shl i32 %105, 5
  %110 = add i32 %66, %109
  %111 = add i32 %110, 8
  %112 = add i32 %111, 0
  %113 = call i64 @get_i64(i32 %112)
  %114 = add i32 %108, 0
  call void @set_i64(i32 %114, i64 %113)
  %115 = add i32 %53, 48
  %116 = add i32 %110, 16
  %117 = add i32 %116, 0
  %118 = call i64 @get_i64(i32 %117)
  %119 = add i32 %115, 0
  call void @set_i64(i32 %119, i64 %118)
  %120 = add i32 %53, 56
  %121 = add i32 %110, 24
  %122 = add i32 %121, 0
  %123 = call i64 @get_i64(i32 %122)
  %124 = add i32 %120, 0
  call void @set_i64(i32 %124, i64 %123)
  %125 = add i32 %110, 0
  %126 = call i64 @get_i64(i32 %125)
  %127 = add i32 %53, 32
  call void @set_i64(i32 %127, i64 %126)
  %128 = add i32 %51, 106
  %129 = call i8 @get_i8(i32 %128)
  %130 = zext i8 %129 to i32
  %131 = add i32 %53, 0
  %132 = call i64 @get_i64(i32 %131)
  %133 = add i32 %63, 0
  call void @set_i64(i32 %133, i64 %132)
  %134 = add i32 %63, 8
  %135 = add i32 %81, 0
  %136 = call i64 @get_i64(i32 %135)
  %137 = add i32 %134, 0
  call void @set_i64(i32 %137, i64 %136)
  %138 = add i32 %63, 16
  %139 = add i32 %88, 0
  %140 = call i64 @get_i64(i32 %139)
  %141 = add i32 %138, 0
  call void @set_i64(i32 %141, i64 %140)
  %142 = add i32 %63, 24
  %143 = add i32 %93, 0
  %144 = call i64 @get_i64(i32 %143)
  %145 = add i32 %142, 0
  call void @set_i64(i32 %145, i64 %144)
  %146 = add i32 %53, 200
  %147 = add i32 %146, 0
  call void @set_i64(i32 %147, i64 %123)
  %148 = add i32 %53, 192
  %149 = add i32 %148, 0
  call void @set_i64(i32 %149, i64 %118)
  %150 = add i32 %53, 184
  %151 = add i32 %150, 0
  call void @set_i64(i32 %151, i64 %113)
  %152 = add i32 %62, 0
  %153 = call i64 @get_i64(i32 %152)
  %154 = add i32 %65, 0
  call void @set_i64(i32 %154, i64 %153)
  %155 = add i32 %65, 8
  %156 = add i32 %62, 8
  %157 = add i32 %156, 0
  %158 = call i64 @get_i64(i32 %157)
  %159 = add i32 %155, 0
  call void @set_i64(i32 %159, i64 %158)
  %160 = add i32 %65, 16
  %161 = add i32 %62, 16
  %162 = add i32 %161, 0
  %163 = call i64 @get_i64(i32 %162)
  %164 = add i32 %160, 0
  call void @set_i64(i32 %164, i64 %163)
  %165 = add i32 %65, 24
  %166 = add i32 %62, 24
  %167 = add i32 %166, 0
  %168 = call i64 @get_i64(i32 %167)
  %169 = add i32 %165, 0
  call void @set_i64(i32 %169, i64 %168)
  %170 = add i32 %53, 176
  call void @set_i64(i32 %170, i64 %126)
  %171 = add i32 %55, 56
  %172 = add i32 %53, 232
  %173 = add i32 %172, 0
  %174 = call i64 @get_i64(i32 %173)
  %175 = add i32 %171, 0
  call void @set_i64(i32 %175, i64 %174)
  %176 = add i32 %55, 48
  %177 = add i32 %53, 224
  %178 = add i32 %177, 0
  %179 = call i64 @get_i64(i32 %178)
  %180 = add i32 %176, 0
  call void @set_i64(i32 %180, i64 %179)
  %181 = add i32 %55, 40
  %182 = add i32 %53, 216
  %183 = add i32 %182, 0
  %184 = call i64 @get_i64(i32 %183)
  %185 = add i32 %181, 0
  call void @set_i64(i32 %185, i64 %184)
  %186 = add i32 %55, 32
  %187 = add i32 %63, 0
  %188 = call i64 @get_i64(i32 %187)
  %189 = add i32 %186, 0
  call void @set_i64(i32 %189, i64 %188)
  %190 = add i32 %55, 24
  %191 = add i32 %146, 0
  %192 = call i64 @get_i64(i32 %191)
  %193 = add i32 %190, 0
  call void @set_i64(i32 %193, i64 %192)
  %194 = add i32 %55, 16
  %195 = add i32 %148, 0
  %196 = call i64 @get_i64(i32 %195)
  %197 = add i32 %194, 0
  call void @set_i64(i32 %197, i64 %196)
  %198 = add i32 %55, 8
  %199 = add i32 %150, 0
  %200 = call i64 @get_i64(i32 %199)
  %201 = add i32 %198, 0
  call void @set_i64(i32 %201, i64 %200)
  %202 = add i32 %53, 176
  %203 = call i64 @get_i64(i32 %202)
  %204 = add i32 %55, 0
  call void @set_i64(i32 %204, i64 %203)
  %205 = add i32 %53, 168
  call void @set_i8(i32 %205, i8 64)
  %206 = or i32 %130, 4
  %207 = trunc i32 %206 to i8
  %208 = add i32 %53, 169
  call void @set_i8(i32 %208, i8 %207)
  %209 = add i32 %53, 64
  call void @set_i64(i32 %209, i64 0)
  %210 = add i32 %166, 0
  %211 = call i64 @get_i64(i32 %210)
  %212 = add i32 %146, 0
  call void @set_i64(i32 %212, i64 %211)
  %213 = add i32 %161, 0
  %214 = call i64 @get_i64(i32 %213)
  %215 = add i32 %148, 0
  call void @set_i64(i32 %215, i64 %214)
  %216 = add i32 %156, 0
  %217 = call i64 @get_i64(i32 %216)
  %218 = add i32 %150, 0
  call void @set_i64(i32 %218, i64 %217)
  %219 = add i32 %62, 0
  %220 = call i64 @get_i64(i32 %219)
  %221 = add i32 %53, 176
  call void @set_i64(i32 %221, i64 %220)
  %222 = add i32 %53, 176
  call void @wasmf_internal_3(i32 %222, i32 %55, i32 64, i64 0, i32 %206)
  %223 = add i32 %146, 0
  %224 = call i32 @get_i32(i32 %223)
  %225 = add i32 %148, 0
  %226 = call i32 @get_i32(i32 %225)
  %227 = add i32 %150, 0
  %228 = call i32 @get_i32(i32 %227)
  %229 = add i32 %53, 204
  %230 = call i32 @get_i32(i32 %229)
  %231 = add i32 %53, 196
  %232 = call i32 @get_i32(i32 %231)
  %233 = add i32 %53, 188
  %234 = call i32 @get_i32(i32 %233)
  %235 = add i32 %53, 180
  %236 = call i32 @get_i32(i32 %235)
  %237 = add i32 %53, 176
  %238 = call i32 @get_i32(i32 %237)
  %239 = add i32 %64, 0
  %240 = call i8 @get_i8(i32 %239)
  %241 = zext i8 %240 to i32
  %242 = icmp uge i32 %241, 55
  %243 = zext i1 %242 to i32
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %b_1, label %b_13

b_13:                                             ; preds = %b_12
  %245 = shl i32 %241, 5
  %246 = add i32 %66, %245
  %247 = add i32 %246, 0
  call void @set_i32(i32 %247, i32 %238)
  %248 = add i32 %246, 28
  call void @set_i32(i32 %248, i32 %230)
  %249 = add i32 %246, 24
  call void @set_i32(i32 %249, i32 %224)
  %250 = add i32 %246, 20
  call void @set_i32(i32 %250, i32 %232)
  %251 = add i32 %246, 16
  call void @set_i32(i32 %251, i32 %226)
  %252 = add i32 %246, 12
  call void @set_i32(i32 %252, i32 %234)
  %253 = add i32 %246, 8
  call void @set_i32(i32 %253, i32 %228)
  %254 = add i32 %246, 4
  call void @set_i32(i32 %254, i32 %236)
  %255 = add i32 %241, 1
  %256 = trunc i32 %255 to i8
  %257 = add i32 %64, 0
  call void @set_i8(i32 %257, i8 %256)
  %258 = and i32 %255, 255
  %259 = icmp ugt i32 %258, %70
  %260 = zext i1 %259 to i32
  %261 = icmp ne i32 %260, 0
  br i1 %261, label %b_9, label %b_14

b_14:                                             ; preds = %b_13
  br label %b_10
}

; Function Attrs: nounwind
define i32 @wasmf_internal_10(i32 %0, i32 %1, i32 %2, i64 %3, i32 %4, i32 %5, i32 %6) #1 {
entry:
  %7 = load i32, i32* @wasmg_internal_0, align 4
  %8 = sub i32 %7, 272
  store i32 %8, i32* @wasmg_internal_0, align 4
  %9 = add i32 %8, 12
  call void @set_i8(i32 %9, i8 0)
  br label %b_0

exit:                                             ; No predecessors!
  ret i32 0

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_5
  call void @wasmf_internal_37(i32 %145, i32 %165, i32 1048936)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_13, %b_12
  %10 = phi i32 [ %159, %b_12 ], [ %194, %b_13 ]
  %11 = phi i32 [ %160, %b_12 ], [ %183, %b_13 ]
  %12 = phi i32 [ %179, %b_12 ], [ %206, %b_13 ]
  %13 = phi i64 [ %162, %b_12 ], [ %114, %b_13 ]
  %14 = phi i32 [ %163, %b_12 ], [ %185, %b_13 ]
  %15 = phi i32 [ %164, %b_12 ], [ %164, %b_13 ]
  %16 = phi i32 [ %165, %b_12 ], [ %187, %b_13 ]
  %17 = phi i32 [ %166, %b_12 ], [ %166, %b_13 ]
  %18 = phi i32 [ %175, %b_12 ], [ %209, %b_13 ]
  %19 = phi i32 [ %168, %b_12 ], [ %189, %b_13 ]
  %20 = phi i32 [ %169, %b_12 ], [ %191, %b_13 ]
  %21 = phi i32 [ %170, %b_12 ], [ %193, %b_13 ]
  %22 = phi i32 [ %176, %b_12 ], [ %176, %b_13 ]
  %23 = icmp ne i32 %18, 0
  br i1 %23, label %b_14, label %b_15

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_10
  %24 = add i32 %166, 48
  %25 = add i32 %161, 24
  %26 = add i32 %25, 0
  %27 = call i64 @get_i64(i32 %26)
  %28 = add i32 %24, 0
  call void @set_i64(i32 %28, i64 %27)
  %29 = add i32 %166, 40
  %30 = add i32 %161, 16
  %31 = add i32 %30, 0
  %32 = call i64 @get_i64(i32 %31)
  %33 = add i32 %29, 0
  call void @set_i64(i32 %33, i64 %32)
  %34 = add i32 %166, 32
  %35 = add i32 %161, 8
  %36 = add i32 %35, 0
  %37 = call i64 @get_i64(i32 %36)
  %38 = add i32 %34, 0
  call void @set_i64(i32 %38, i64 %37)
  %39 = add i32 %161, 0
  %40 = call i64 @get_i64(i32 %39)
  %41 = add i32 %166, 24
  call void @set_i64(i32 %41, i64 %40)
  %42 = icmp ne i32 %175, 0
  %43 = zext i1 %42 to i32
  %44 = zext i32 %43 to i64
  %45 = add i64 %44, %162
  %46 = add i32 %166, 16
  call void @set_i64(i32 %46, i64 %45)
  %47 = add i32 %166, 56
  %48 = call i32 @wasmf_internal_59(i32 %47, i32 66)
  %49 = trunc i32 %163 to i8
  %50 = add i32 %166, 122
  call void @set_i8(i32 %50, i8 %49)
  %51 = add i32 %166, 16
  %52 = add i32 %159, %168
  %53 = call i32 @wasmf_internal_21(i32 %51, i32 %52, i32 %176)
  %54 = add i32 %166, 144
  %55 = add i32 %34, 0
  %56 = call i64 @get_i64(i32 %55)
  %57 = add i32 %54, 0
  call void @set_i64(i32 %57, i64 %56)
  %58 = add i32 %166, 152
  %59 = add i32 %29, 0
  %60 = call i64 @get_i64(i32 %59)
  %61 = add i32 %58, 0
  call void @set_i64(i32 %61, i64 %60)
  %62 = add i32 %166, 160
  %63 = add i32 %24, 0
  %64 = call i64 @get_i64(i32 %63)
  %65 = add i32 %62, 0
  call void @set_i64(i32 %65, i64 %64)
  %66 = add i32 %166, 176
  %67 = sub i32 %166, -64
  %68 = add i32 %67, 0
  %69 = call i64 @get_i64(i32 %68)
  %70 = add i32 %66, 0
  call void @set_i64(i32 %70, i64 %69)
  %71 = add i32 %166, 184
  %72 = add i32 %166, 72
  %73 = add i32 %72, 0
  %74 = call i64 @get_i64(i32 %73)
  %75 = add i32 %71, 0
  call void @set_i64(i32 %75, i64 %74)
  %76 = add i32 %166, 192
  %77 = add i32 %166, 80
  %78 = add i32 %77, 0
  %79 = call i64 @get_i64(i32 %78)
  %80 = add i32 %76, 0
  call void @set_i64(i32 %80, i64 %79)
  %81 = add i32 %166, 200
  %82 = add i32 %166, 88
  %83 = add i32 %82, 0
  %84 = call i64 @get_i64(i32 %83)
  %85 = add i32 %81, 0
  call void @set_i64(i32 %85, i64 %84)
  %86 = add i32 %166, 208
  %87 = add i32 %166, 96
  %88 = add i32 %87, 0
  %89 = call i64 @get_i64(i32 %88)
  %90 = add i32 %86, 0
  call void @set_i64(i32 %90, i64 %89)
  %91 = add i32 %166, 216
  %92 = add i32 %166, 104
  %93 = add i32 %92, 0
  %94 = call i64 @get_i64(i32 %93)
  %95 = add i32 %91, 0
  call void @set_i64(i32 %95, i64 %94)
  %96 = add i32 %166, 224
  %97 = add i32 %166, 112
  %98 = add i32 %97, 0
  %99 = call i64 @get_i64(i32 %98)
  %100 = add i32 %96, 0
  call void @set_i64(i32 %100, i64 %99)
  %101 = add i32 %166, 24
  %102 = call i64 @get_i64(i32 %101)
  %103 = add i32 %166, 136
  call void @set_i64(i32 %103, i64 %102)
  %104 = add i32 %166, 56
  %105 = call i64 @get_i64(i32 %104)
  %106 = add i32 %166, 168
  call void @set_i64(i32 %106, i64 %105)
  %107 = add i32 %53, 105
  %108 = call i8 @get_i8(i32 %107)
  %109 = zext i8 %108 to i32
  %110 = add i32 %166, 122
  %111 = call i8 @get_i8(i32 %110)
  %112 = zext i8 %111 to i32
  %113 = add i32 %166, 16
  %114 = call i64 @get_i64(i32 %113)
  %115 = add i32 %53, 104
  %116 = call i8 @get_i8(i32 %115)
  %117 = zext i8 %116 to i32
  %118 = trunc i32 %117 to i8
  %119 = add i32 %166, 232
  call void @set_i8(i32 %119, i8 %118)
  %120 = add i32 %166, 128
  call void @set_i64(i32 %120, i64 %114)
  %121 = icmp eq i32 0, %109
  %122 = zext i1 %121 to i32
  %123 = or i32 %112, %122
  %124 = or i32 %123, 2
  %125 = trunc i32 %124 to i8
  %126 = add i32 %166, 233
  call void @set_i8(i32 %126, i8 %125)
  %127 = add i32 %166, 264
  %128 = add i32 %24, 0
  %129 = call i64 @get_i64(i32 %128)
  %130 = add i32 %127, 0
  call void @set_i64(i32 %130, i64 %129)
  %131 = add i32 %166, 256
  %132 = add i32 %29, 0
  %133 = call i64 @get_i64(i32 %132)
  %134 = add i32 %131, 0
  call void @set_i64(i32 %134, i64 %133)
  %135 = add i32 %166, 248
  %136 = add i32 %34, 0
  %137 = call i64 @get_i64(i32 %136)
  %138 = add i32 %135, 0
  call void @set_i64(i32 %138, i64 %137)
  %139 = add i32 %166, 24
  %140 = call i64 @get_i64(i32 %139)
  %141 = add i32 %166, 240
  call void @set_i64(i32 %141, i64 %140)
  %142 = add i32 %166, 240
  %143 = add i32 %166, 168
  call void @wasmf_internal_3(i32 %142, i32 %143, i32 %117, i64 %114, i32 %124)
  %144 = shl i32 %43, 5
  %145 = add i32 %144, 32
  %146 = icmp ugt i32 %145, %165
  %147 = zext i1 %146 to i32
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %b_1, label %b_13

b_6:                                              ; preds = %b_4
  %149 = and i32 %1, -1024
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %b_8, label %b_9

b_7:                                              ; preds = %b_8
  %151 = add i32 %0, 1024
  %152 = add i32 %8, 128
  call void @set_i32(i32 %152, i32 %151)
  %153 = add i32 %8, 128
  call void @wasmf_internal_35(i32 %153, i32 1049332)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_8:                                              ; preds = %b_6
  %154 = add i32 %8, 12
  call void @set_i8(i32 %154, i8 1)
  %155 = add i32 %8, 8
  call void @set_i32(i32 %155, i32 %0)
  %156 = icmp ne i32 %149, 1024
  %157 = zext i1 %156 to i32
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %b_7, label %b_11

b_9:                                              ; preds = %b_6
  br label %b_10

b_10:                                             ; preds = %b_11, %b_9
  %159 = phi i32 [ %0, %b_11 ], [ %0, %b_9 ]
  %160 = phi i32 [ %1, %b_11 ], [ %1, %b_9 ]
  %161 = phi i32 [ %2, %b_11 ], [ %2, %b_9 ]
  %162 = phi i64 [ %3, %b_11 ], [ %3, %b_9 ]
  %163 = phi i32 [ %4, %b_11 ], [ %4, %b_9 ]
  %164 = phi i32 [ %5, %b_11 ], [ %5, %b_9 ]
  %165 = phi i32 [ %6, %b_11 ], [ %6, %b_9 ]
  %166 = phi i32 [ %8, %b_11 ], [ %8, %b_9 ]
  %167 = phi i32 [ 1, %b_11 ], [ 0, %b_9 ]
  %168 = phi i32 [ %149, %b_11 ], [ %149, %b_9 ]
  %169 = phi i32 [ 0, %b_11 ], [ 0, %b_9 ]
  %170 = phi i32 [ 0, %b_11 ], [ 0, %b_9 ]
  %171 = phi i32 [ 0, %b_11 ], [ 0, %b_9 ]
  %172 = add i32 %166, 8
  call void @wasmf_internal_16(i32 %172, i32 %167, i32 %161, i64 %162, i32 %163, i32 %164, i32 %165)
  %173 = add i32 %166, 12
  %174 = call i8 @get_i8(i32 %173)
  %175 = zext i8 %174 to i32
  %176 = and i32 %160, 1023
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %b_5, label %b_12

b_11:                                             ; preds = %b_8
  br label %b_10

b_12:                                             ; preds = %b_10
  %178 = icmp ne i32 %175, 0
  %179 = zext i1 %178 to i32
  br label %b_3

b_13:                                             ; preds = %b_5
  %180 = add i32 %127, 0
  %181 = call i32 @get_i32(i32 %180)
  %182 = add i32 %131, 0
  %183 = call i32 @get_i32(i32 %182)
  %184 = add i32 %135, 0
  %185 = call i32 @get_i32(i32 %184)
  %186 = add i32 %166, 260
  %187 = call i32 @get_i32(i32 %186)
  %188 = add i32 %166, 252
  %189 = call i32 @get_i32(i32 %188)
  %190 = add i32 %166, 244
  %191 = call i32 @get_i32(i32 %190)
  %192 = add i32 %166, 240
  %193 = call i32 @get_i32(i32 %192)
  %194 = add i32 %144, %164
  %195 = add i32 %166, 268
  %196 = call i32 @get_i32(i32 %195)
  %197 = add i32 %194, 28
  call void @set_i32(i32 %197, i32 %196)
  %198 = add i32 %194, 24
  call void @set_i32(i32 %198, i32 %181)
  %199 = add i32 %194, 20
  call void @set_i32(i32 %199, i32 %187)
  %200 = add i32 %194, 16
  call void @set_i32(i32 %200, i32 %183)
  %201 = add i32 %194, 12
  call void @set_i32(i32 %201, i32 %189)
  %202 = add i32 %194, 8
  call void @set_i32(i32 %202, i32 %185)
  %203 = add i32 %194, 4
  call void @set_i32(i32 %203, i32 %191)
  %204 = add i32 %194, 0
  call void @set_i32(i32 %204, i32 %193)
  %205 = icmp ne i32 %175, 0
  %206 = select i1 %205, i32 2, i32 1
  %207 = add i32 %166, 12
  %208 = call i8 @get_i8(i32 %207)
  %209 = zext i8 %208 to i32
  br label %b_3

b_14:                                             ; preds = %b_3
  %210 = add i32 %17, 12
  call void @set_i8(i32 %210, i8 0)
  br label %b_16

b_15:                                             ; preds = %b_3
  br label %b_16

b_16:                                             ; preds = %b_15, %b_14
  %211 = phi i32 [ %10, %b_14 ], [ %10, %b_15 ]
  %212 = phi i32 [ %11, %b_14 ], [ %11, %b_15 ]
  %213 = phi i32 [ %12, %b_14 ], [ %12, %b_15 ]
  %214 = phi i64 [ %13, %b_14 ], [ %13, %b_15 ]
  %215 = phi i32 [ %14, %b_14 ], [ %14, %b_15 ]
  %216 = phi i32 [ %15, %b_14 ], [ %15, %b_15 ]
  %217 = phi i32 [ %16, %b_14 ], [ %16, %b_15 ]
  %218 = phi i32 [ %17, %b_14 ], [ %17, %b_15 ]
  %219 = phi i32 [ %18, %b_14 ], [ %18, %b_15 ]
  %220 = phi i32 [ %19, %b_14 ], [ %19, %b_15 ]
  %221 = phi i32 [ %20, %b_14 ], [ %20, %b_15 ]
  %222 = phi i32 [ %21, %b_14 ], [ %21, %b_15 ]
  %223 = phi i32 [ %22, %b_14 ], [ %22, %b_15 ]
  %224 = add i32 %218, 272
  store i32 %224, i32* @wasmg_internal_0, align 4
  ret i32 %213
}

; Function Attrs: nounwind
define void @wasmf_internal_11(i32 %0, i32 %1) #1 {
entry:
  %2 = add i32 %0, %1
  br label %b_0

exit:                                             ; preds = %b_47
  ret void

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_17
  %3 = lshr i32 %65, 3
  %4 = shl i32 %3, 3
  %5 = add i32 %4, 1050516
  br label %b_46

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_40, %b_5
  %6 = phi i32 [ %118, %b_40 ], [ %180, %b_5 ]
  %7 = phi i32 [ %119, %b_40 ], [ %181, %b_5 ]
  %8 = phi i32 [ %127, %b_40 ], [ %182, %b_5 ]
  %9 = phi i32 [ %124, %b_40 ], [ %191, %b_5 ]
  %10 = phi i32 [ %154, %b_40 ], [ %184, %b_5 ]
  %11 = phi i32 [ %157, %b_40 ], [ %189, %b_5 ]
  %12 = add i32 %6, 24
  %13 = add i32 %12, 0
  call void @set_i32(i32 %13, i32 %8)
  %14 = add i32 %6, 12
  call void @set_i32(i32 %14, i32 %6)
  %15 = add i32 %6, 8
  call void @set_i32(i32 %15, i32 %6)
  ret void

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_42
  %16 = add i32 %189, 0
  call void @set_i32(i32 %16, i32 %180)
  br label %b_3

b_6:                                              ; preds = %b_4
  br label %b_8

b_7:                                              ; preds = %b_35, %b_25, %b_10
  %17 = phi i32 [ %0, %b_10 ], [ %28, %b_25 ], [ %140, %b_35 ]
  %18 = phi i32 [ %1, %b_10 ], [ %95, %b_25 ], [ %147, %b_35 ]
  %19 = phi i32 [ %2, %b_10 ], [ %30, %b_25 ], [ %142, %b_35 ]
  %20 = phi i32 [ %25, %b_10 ], [ %61, %b_25 ], [ %143, %b_35 ]
  %21 = phi i32 [ 0, %b_10 ], [ %32, %b_25 ], [ %144, %b_35 ]
  %22 = phi i32 [ 0, %b_10 ], [ %33, %b_25 ], [ %145, %b_35 ]
  ret void

b_8:                                              ; preds = %b_6
  %23 = add i32 %0, 4
  %24 = add i32 %23, 0
  %25 = call i32 @get_i32(i32 %24)
  %26 = and i32 %25, 1
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %b_9, label %b_10

b_9:                                              ; preds = %b_14, %b_12, %b_8
  %28 = phi i32 [ %0, %b_8 ], [ %41, %b_12 ], [ %41, %b_14 ]
  %29 = phi i32 [ %1, %b_8 ], [ %40, %b_12 ], [ %40, %b_14 ]
  %30 = phi i32 [ %2, %b_8 ], [ %2, %b_12 ], [ %2, %b_14 ]
  %31 = phi i32 [ %25, %b_8 ], [ %39, %b_12 ], [ %39, %b_14 ]
  %32 = phi i32 [ 0, %b_8 ], [ 0, %b_12 ], [ 0, %b_14 ]
  %33 = phi i32 [ 0, %b_8 ], [ 0, %b_12 ], [ 0, %b_14 ]
  br label %b_16

b_10:                                             ; preds = %b_8
  %34 = and i32 %25, 3
  %35 = icmp eq i32 0, %34
  %36 = zext i1 %35 to i32
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %b_7, label %b_11

b_11:                                             ; preds = %b_10
  %38 = add i32 %0, 0
  %39 = call i32 @get_i32(i32 %38)
  %40 = add i32 %39, %1
  %41 = sub i32 %0, %39
  %42 = call i32 @get_i32(i32 1050916)
  %43 = icmp eq i32 %41, %42
  %44 = zext i1 %43 to i32
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %b_12, label %b_13

b_12:                                             ; preds = %b_11
  %46 = add i32 %2, 4
  %47 = call i32 @get_i32(i32 %46)
  %48 = and i32 %47, 3
  %49 = icmp ne i32 %48, 3
  %50 = zext i1 %49 to i32
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %b_9, label %b_15

b_13:                                             ; preds = %b_11
  br label %b_14

b_14:                                             ; preds = %b_13
  call void @wasmf_internal_20(i32 %41, i32 %39)
  br label %b_9

b_15:                                             ; preds = %b_12
  call void @set_i32(i32 1050908, i32 %40)
  %52 = add i32 %2, 4
  %53 = call i32 @get_i32(i32 %52)
  %54 = and i32 %53, -2
  %55 = add i32 %2, 4
  call void @set_i32(i32 %55, i32 %54)
  %56 = or i32 %40, 1
  %57 = add i32 %41, 4
  call void @set_i32(i32 %57, i32 %56)
  %58 = add i32 %2, 0
  call void @set_i32(i32 %58, i32 %40)
  ret void

b_16:                                             ; preds = %b_9
  %59 = add i32 %30, 4
  %60 = add i32 %59, 0
  %61 = call i32 @get_i32(i32 %60)
  %62 = and i32 %61, 2
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %b_18, label %b_19

b_17:                                             ; preds = %b_26, %b_18
  %64 = phi i32 [ %28, %b_18 ], [ %28, %b_26 ]
  %65 = phi i32 [ %29, %b_18 ], [ %103, %b_26 ]
  %66 = phi i32 [ %30, %b_18 ], [ %102, %b_26 ]
  %67 = phi i32 [ %61, %b_18 ], [ %61, %b_26 ]
  %68 = phi i32 [ %32, %b_18 ], [ %32, %b_26 ]
  %69 = phi i32 [ %33, %b_18 ], [ %33, %b_26 ]
  %70 = icmp ult i32 %65, 256
  %71 = zext i1 %70 to i32
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %b_1, label %b_29

b_18:                                             ; preds = %b_16
  %73 = add i32 %30, 4
  %74 = and i32 %61, -2
  %75 = add i32 %73, 0
  call void @set_i32(i32 %75, i32 %74)
  %76 = or i32 %29, 1
  %77 = add i32 %28, 4
  call void @set_i32(i32 %77, i32 %76)
  %78 = add i32 %28, %29
  %79 = add i32 %78, 0
  call void @set_i32(i32 %79, i32 %29)
  br label %b_17

b_19:                                             ; preds = %b_16
  br label %b_20

b_20:                                             ; preds = %b_19
  br label %b_21

b_21:                                             ; preds = %b_20
  %80 = call i32 @get_i32(i32 1050920)
  %81 = icmp ne i32 %30, %80
  %82 = zext i1 %81 to i32
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %b_23, label %b_24

b_22:                                             ; preds = %b_23
  call void @set_i32(i32 1050916, i32 %28)
  %84 = call i32 @get_i32(i32 1050908)
  %85 = add i32 %84, %29
  call void @set_i32(i32 1050908, i32 %85)
  %86 = or i32 %85, 1
  %87 = add i32 %28, 4
  call void @set_i32(i32 %87, i32 %86)
  %88 = add i32 %28, %85
  %89 = add i32 %88, 0
  call void @set_i32(i32 %89, i32 %85)
  ret void

b_23:                                             ; preds = %b_21
  %90 = call i32 @get_i32(i32 1050916)
  %91 = icmp eq i32 %90, %30
  %92 = zext i1 %91 to i32
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %b_22, label %b_26

b_24:                                             ; preds = %b_21
  br label %b_25

b_25:                                             ; preds = %b_24
  call void @set_i32(i32 1050920, i32 %28)
  %94 = call i32 @get_i32(i32 1050912)
  %95 = add i32 %94, %29
  call void @set_i32(i32 1050912, i32 %95)
  %96 = or i32 %95, 1
  %97 = add i32 %28, 4
  call void @set_i32(i32 %97, i32 %96)
  %98 = call i32 @get_i32(i32 1050916)
  %99 = icmp ne i32 %28, %98
  %100 = zext i1 %99 to i32
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %b_7, label %b_28

b_26:                                             ; preds = %b_23
  %102 = and i32 %61, -8
  call void @wasmf_internal_20(i32 %30, i32 %102)
  %103 = add i32 %29, %102
  %104 = or i32 %103, 1
  %105 = add i32 %28, 4
  call void @set_i32(i32 %105, i32 %104)
  %106 = add i32 %28, %103
  %107 = add i32 %106, 0
  call void @set_i32(i32 %107, i32 %103)
  %108 = call i32 @get_i32(i32 1050916)
  %109 = icmp ne i32 %28, %108
  %110 = zext i1 %109 to i32
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %b_17, label %b_27

b_27:                                             ; preds = %b_26
  call void @set_i32(i32 1050908, i32 %103)
  ret void

b_28:                                             ; preds = %b_25
  call void @set_i32(i32 1050908, i32 0)
  call void @set_i32(i32 1050916, i32 0)
  ret void

b_29:                                             ; preds = %b_17
  %112 = add i32 %64, 16
  call void @set_i64(i32 %112, i64 0)
  %113 = add i32 %64, 28
  br label %b_30

b_30:                                             ; preds = %b_29
  %114 = lshr i32 %65, 8
  %115 = icmp eq i32 0, %114
  %116 = zext i1 %115 to i32
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %b_31, label %b_32

b_31:                                             ; preds = %b_33, %b_32, %b_30
  %118 = phi i32 [ %64, %b_30 ], [ %64, %b_32 ], [ %64, %b_33 ]
  %119 = phi i32 [ %65, %b_30 ], [ %65, %b_32 ], [ %65, %b_33 ]
  %120 = phi i32 [ %114, %b_30 ], [ %114, %b_32 ], [ %131, %b_33 ]
  %121 = phi i32 [ %67, %b_30 ], [ %67, %b_32 ], [ %67, %b_33 ]
  %122 = phi i32 [ %68, %b_30 ], [ %68, %b_32 ], [ %68, %b_33 ]
  %123 = phi i32 [ %69, %b_30 ], [ %69, %b_32 ], [ %69, %b_33 ]
  %124 = phi i32 [ 0, %b_30 ], [ 31, %b_32 ], [ %139, %b_33 ]
  %125 = add i32 %113, 0
  call void @set_i32(i32 %125, i32 %124)
  %126 = shl i32 %124, 2
  %127 = add i32 %126, 1050780
  br label %b_34

b_32:                                             ; preds = %b_30
  %128 = icmp ugt i32 %65, 16777215
  %129 = zext i1 %128 to i32
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %b_31, label %b_33

b_33:                                             ; preds = %b_32
  %131 = call i32 @llvm.ctlz.i32(i32 %114, i1 false)
  %132 = sub i32 6, %131
  %133 = and i32 %132, 31
  %134 = urem i32 %133, 32
  %135 = lshr i32 %65, %134
  %136 = and i32 %135, 1
  %137 = shl i32 %131, 1
  %138 = sub i32 %136, %137
  %139 = add i32 %138, 62
  br label %b_31

b_34:                                             ; preds = %b_31
  br label %b_36

b_35:                                             ; preds = %b_43, %b_41
  %140 = phi i32 [ %118, %b_41 ], [ %180, %b_43 ]
  %141 = phi i32 [ %119, %b_41 ], [ %181, %b_43 ]
  %142 = phi i32 [ %170, %b_41 ], [ %191, %b_43 ]
  %143 = phi i32 [ %170, %b_41 ], [ %191, %b_43 ]
  %144 = phi i32 [ %154, %b_41 ], [ %195, %b_43 ]
  %145 = phi i32 [ %157, %b_41 ], [ %189, %b_43 ]
  %146 = add i32 %143, 8
  %147 = call i32 @get_i32(i32 %146)
  %148 = add i32 %147, 12
  call void @set_i32(i32 %148, i32 %140)
  %149 = add i32 %143, 8
  call void @set_i32(i32 %149, i32 %140)
  %150 = add i32 %140, 24
  %151 = add i32 %150, 0
  call void @set_i32(i32 %151, i32 0)
  %152 = add i32 %140, 12
  call void @set_i32(i32 %152, i32 %143)
  %153 = add i32 %140, 8
  call void @set_i32(i32 %153, i32 %147)
  br label %b_7

b_36:                                             ; preds = %b_34
  %154 = call i32 @get_i32(i32 1050512)
  %155 = and i32 %124, 31
  %156 = urem i32 %155, 32
  %157 = shl i32 1, %156
  %158 = and i32 %154, %157
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %b_38, label %b_39

b_37:                                             ; preds = %b_38
  %160 = lshr i32 %124, 1
  %161 = sub i32 25, %160
  %162 = and i32 %161, 31
  %163 = icmp eq i32 %124, 31
  %164 = zext i1 %163 to i32
  %165 = icmp ne i32 %164, 0
  %166 = select i1 %165, i32 0, i32 %162
  %167 = urem i32 %166, 32
  %168 = shl i32 %119, %167
  br label %b_42

b_38:                                             ; preds = %b_36
  %169 = add i32 %127, 0
  %170 = call i32 @get_i32(i32 %169)
  %171 = add i32 %170, 4
  %172 = add i32 %171, 0
  %173 = call i32 @get_i32(i32 %172)
  %174 = and i32 %173, -8
  %175 = icmp ne i32 %174, %119
  %176 = zext i1 %175 to i32
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %b_37, label %b_41

b_39:                                             ; preds = %b_36
  br label %b_40

b_40:                                             ; preds = %b_39
  %178 = or i32 %154, %157
  call void @set_i32(i32 1050512, i32 %178)
  %179 = add i32 %127, 0
  call void @set_i32(i32 %179, i32 %118)
  br label %b_3

b_41:                                             ; preds = %b_38
  br label %b_35

b_42:                                             ; preds = %b_44, %b_37
  %180 = phi i32 [ %118, %b_37 ], [ %180, %b_44 ]
  %181 = phi i32 [ %119, %b_37 ], [ %181, %b_44 ]
  %182 = phi i32 [ %170, %b_37 ], [ %191, %b_44 ]
  %183 = phi i32 [ %124, %b_37 ], [ %191, %b_44 ]
  %184 = phi i32 [ %168, %b_37 ], [ %195, %b_44 ]
  %185 = phi i32 [ %157, %b_37 ], [ %189, %b_44 ]
  %186 = lshr i32 %184, 29
  %187 = and i32 %186, 4
  %188 = add i32 %182, %187
  %189 = add i32 %188, 16
  %190 = add i32 %189, 0
  %191 = call i32 @get_i32(i32 %190)
  %192 = icmp eq i32 0, %191
  %193 = zext i1 %192 to i32
  %194 = icmp ne i32 %193, 0
  br i1 %194, label %b_5, label %b_44

b_43:                                             ; preds = %b_45
  br label %b_35

b_44:                                             ; preds = %b_42
  %195 = shl i32 %184, 1
  %196 = add i32 %191, 4
  %197 = add i32 %196, 0
  %198 = call i32 @get_i32(i32 %197)
  %199 = and i32 %198, -8
  %200 = icmp ne i32 %199, %181
  %201 = zext i1 %200 to i32
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %b_42, label %b_45

b_45:                                             ; preds = %b_44
  br label %b_43

b_46:                                             ; preds = %b_1
  %203 = call i32 @get_i32(i32 1050508)
  %204 = urem i32 %3, 32
  %205 = shl i32 1, %204
  %206 = and i32 %203, %205
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %b_48, label %b_49

b_47:                                             ; preds = %b_50, %b_48
  %208 = phi i32 [ %64, %b_48 ], [ %64, %b_50 ]
  %209 = phi i32 [ %5, %b_48 ], [ %5, %b_50 ]
  %210 = phi i32 [ %205, %b_48 ], [ %205, %b_50 ]
  %211 = phi i32 [ %203, %b_48 ], [ %203, %b_50 ]
  %212 = phi i32 [ %68, %b_48 ], [ %68, %b_50 ]
  %213 = phi i32 [ %69, %b_48 ], [ %69, %b_50 ]
  %214 = phi i32 [ %220, %b_48 ], [ %5, %b_50 ]
  %215 = add i32 %209, 8
  call void @set_i32(i32 %215, i32 %208)
  %216 = add i32 %214, 12
  call void @set_i32(i32 %216, i32 %208)
  %217 = add i32 %208, 12
  call void @set_i32(i32 %217, i32 %209)
  %218 = add i32 %208, 8
  call void @set_i32(i32 %218, i32 %214)
  br label %exit

b_48:                                             ; preds = %b_46
  %219 = add i32 %5, 8
  %220 = call i32 @get_i32(i32 %219)
  br label %b_47

b_49:                                             ; preds = %b_46
  br label %b_50

b_50:                                             ; preds = %b_49
  %221 = or i32 %205, %203
  call void @set_i32(i32 1050508, i32 %221)
  br label %b_47
}

; Function Attrs: nounwind
define i32 @wasmf_internal_12(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = add i32 %0, 0
  %4 = call i32 @get_i32(i32 %3)
  %5 = and i32 %4, 1
  %6 = icmp ne i32 %5, 0
  %7 = select i1 %6, i32 43, i32 1114112
  %8 = add i32 %2, %5
  %9 = and i32 %4, 4
  %10 = icmp ne i32 %9, 0
  %11 = select i1 %10, i32 1049904, i32 0
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 %20

b_0:                                              ; preds = %entry
  %12 = add i32 %0, 8
  %13 = call i32 @get_i32(i32 %12)
  %14 = icmp ne i32 %13, 1
  %15 = zext i1 %14 to i32
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %b_2, label %b_3

b_1:                                              ; preds = %b_48, %b_45, %b_44, %b_33, %b_18, %b_11, %b_6, %b_5, %b_2
  %17 = phi i32 [ %0, %b_2 ], [ %0, %b_5 ], [ %0, %b_6 ], [ %0, %b_18 ], [ %186, %b_33 ], [ %220, %b_44 ], [ %145, %b_11 ], [ %145, %b_45 ], [ %259, %b_48 ]
  %18 = phi i32 [ %1, %b_2 ], [ %1, %b_5 ], [ %1, %b_6 ], [ %1, %b_18 ], [ %187, %b_33 ], [ %231, %b_44 ], [ %146, %b_11 ], [ %146, %b_45 ], [ %270, %b_48 ]
  %19 = phi i32 [ %2, %b_2 ], [ %2, %b_5 ], [ %2, %b_6 ], [ %2, %b_18 ], [ %188, %b_33 ], [ %222, %b_44 ], [ %147, %b_11 ], [ %147, %b_45 ], [ %261, %b_48 ]
  %20 = phi i32 [ 1, %b_2 ], [ %45, %b_5 ], [ 1, %b_6 ], [ 1, %b_18 ], [ 1, %b_33 ], [ %223, %b_44 ], [ 1, %b_11 ], [ 1, %b_45 ], [ %262, %b_48 ]
  %21 = phi i32 [ %8, %b_2 ], [ %8, %b_5 ], [ %8, %b_6 ], [ %8, %b_18 ], [ %175, %b_33 ], [ %224, %b_44 ], [ %59, %b_11 ], [ %59, %b_45 ], [ %263, %b_48 ]
  %22 = phi i32 [ %4, %b_2 ], [ %4, %b_5 ], [ %4, %b_6 ], [ %4, %b_18 ], [ %191, %b_33 ], [ %225, %b_44 ], [ %150, %b_11 ], [ %150, %b_45 ], [ %264, %b_48 ]
  %23 = phi i32 [ %7, %b_2 ], [ %7, %b_5 ], [ %7, %b_6 ], [ %7, %b_18 ], [ %192, %b_33 ], [ %226, %b_44 ], [ %151, %b_11 ], [ %151, %b_45 ], [ %265, %b_48 ]
  %24 = phi i32 [ %11, %b_2 ], [ %11, %b_5 ], [ %11, %b_6 ], [ %11, %b_18 ], [ %193, %b_33 ], [ %227, %b_44 ], [ %152, %b_11 ], [ %152, %b_45 ], [ %266, %b_48 ]
  %25 = phi i32 [ 0, %b_2 ], [ 0, %b_5 ], [ %32, %b_6 ], [ %32, %b_18 ], [ %194, %b_33 ], [ %228, %b_44 ], [ %153, %b_11 ], [ %153, %b_45 ], [ %267, %b_48 ]
  %26 = phi i32 [ 0, %b_2 ], [ 0, %b_5 ], [ 0, %b_6 ], [ %91, %b_18 ], [ %195, %b_33 ], [ %229, %b_44 ], [ %154, %b_11 ], [ %154, %b_45 ], [ %268, %b_48 ]
  %27 = phi i32 [ 0, %b_2 ], [ 0, %b_5 ], [ 0, %b_6 ], [ %95, %b_18 ], [ %196, %b_33 ], [ %230, %b_44 ], [ %155, %b_11 ], [ %155, %b_45 ], [ %269, %b_48 ]
  br label %exit

b_2:                                              ; preds = %b_0
  %28 = call i32 @wasmf_internal_47(i32 %0, i32 %7, i32 %11)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %b_1, label %b_5

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  %30 = add i32 %0, 12
  %31 = add i32 %30, 0
  %32 = call i32 @get_i32(i32 %31)
  %33 = icmp ule i32 %32, %8
  %34 = zext i1 %33 to i32
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %b_6, label %b_7

b_5:                                              ; preds = %b_2
  %36 = add i32 %0, 24
  %37 = call i32 @get_i32(i32 %36)
  %38 = add i32 %0, 28
  %39 = add i32 %38, 0
  %40 = call i32 @get_i32(i32 %39)
  %41 = add i32 %40, 12
  %42 = call i32 @get_i32(i32 %41)
  %43 = call i8* @get_function_from_table(i32 %42, i32 1)
  %44 = bitcast i8* %43 to i32 (i32, i32, i32)*
  %45 = call i32 %44(i32 %37, i32 %1, i32 %2)
  br label %b_1

b_6:                                              ; preds = %b_4
  %46 = call i32 @wasmf_internal_47(i32 %0, i32 %7, i32 %11)
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %b_1, label %b_9

b_7:                                              ; preds = %b_4
  br label %b_8

b_8:                                              ; preds = %b_7
  br label %b_10

b_9:                                              ; preds = %b_6
  %48 = add i32 %0, 24
  %49 = call i32 @get_i32(i32 %48)
  %50 = add i32 %0, 28
  %51 = add i32 %50, 0
  %52 = call i32 @get_i32(i32 %51)
  %53 = add i32 %52, 12
  %54 = call i32 @get_i32(i32 %53)
  %55 = call i8* @get_function_from_table(i32 %54, i32 1)
  %56 = bitcast i8* %55 to i32 (i32, i32, i32)*
  %57 = call i32 %56(i32 %49, i32 %1, i32 %2)
  ret i32 %57

b_10:                                             ; preds = %b_8
  br label %b_12

b_11:                                             ; preds = %b_28
  %58 = add i32 %145, 4
  %59 = call i32 @get_i32(i32 %58)
  %60 = call i32 @wasmf_internal_47(i32 %145, i32 %151, i32 %152)
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %b_1, label %b_45

b_12:                                             ; preds = %b_10
  br label %b_14

b_13:                                             ; preds = %b_21, %b_17, %b_15
  %62 = phi i32 [ %0, %b_21 ], [ %0, %b_17 ], [ %74, %b_15 ]
  %63 = phi i32 [ %1, %b_21 ], [ %1, %b_17 ], [ %75, %b_15 ]
  %64 = phi i32 [ %2, %b_21 ], [ %2, %b_17 ], [ %76, %b_15 ]
  %65 = phi i32 [ 0, %b_21 ], [ %87, %b_17 ], [ %78, %b_15 ]
  %66 = phi i32 [ %100, %b_21 ], [ %100, %b_17 ], [ %78, %b_15 ]
  %67 = phi i32 [ %100, %b_21 ], [ %89, %b_17 ], [ 0, %b_15 ]
  %68 = phi i32 [ %103, %b_21 ], [ %103, %b_17 ], [ %80, %b_15 ]
  %69 = phi i32 [ %11, %b_21 ], [ %11, %b_17 ], [ %81, %b_15 ]
  %70 = phi i32 [ %32, %b_21 ], [ %32, %b_17 ], [ %82, %b_15 ]
  %71 = phi i32 [ %91, %b_21 ], [ %91, %b_17 ], [ %83, %b_15 ]
  %72 = phi i32 [ %95, %b_21 ], [ %95, %b_17 ], [ %84, %b_15 ]
  %73 = add i32 %65, 1
  br label %b_32

b_14:                                             ; preds = %b_12
  br label %b_16

b_15:                                             ; preds = %b_21, %b_21
  %74 = phi i32 [ %0, %b_21 ], [ %0, %b_21 ]
  %75 = phi i32 [ %1, %b_21 ], [ %1, %b_21 ]
  %76 = phi i32 [ %2, %b_21 ], [ %2, %b_21 ]
  %77 = phi i32 [ 0, %b_21 ], [ 0, %b_21 ]
  %78 = phi i32 [ %100, %b_21 ], [ %100, %b_21 ]
  %79 = phi i32 [ %100, %b_21 ], [ %100, %b_21 ]
  %80 = phi i32 [ %103, %b_21 ], [ %103, %b_21 ]
  %81 = phi i32 [ %11, %b_21 ], [ %11, %b_21 ]
  %82 = phi i32 [ %32, %b_21 ], [ %32, %b_21 ]
  %83 = phi i32 [ %91, %b_21 ], [ %91, %b_21 ]
  %84 = phi i32 [ %95, %b_21 ], [ %95, %b_21 ]
  br label %b_13

b_16:                                             ; preds = %b_14
  %85 = and i32 %4, 8
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %b_18, label %b_19

b_17:                                             ; preds = %b_21
  %87 = lshr i32 %100, 1
  %88 = add i32 %100, 1
  %89 = lshr i32 %88, 1
  br label %b_13

b_18:                                             ; preds = %b_16
  %90 = add i32 %0, 4
  %91 = call i32 @get_i32(i32 %90)
  %92 = add i32 %0, 4
  call void @set_i32(i32 %92, i32 48)
  %93 = add i32 %0, 32
  %94 = call i8 @get_i8(i32 %93)
  %95 = zext i8 %94 to i32
  %96 = add i32 %0, 32
  call void @set_i8(i32 %96, i8 1)
  %97 = call i32 @wasmf_internal_47(i32 %0, i32 %7, i32 %11)
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %b_1, label %b_21

b_19:                                             ; preds = %b_16
  br label %b_20

b_20:                                             ; preds = %b_19
  %99 = sub i32 %32, %8
  br label %b_22

b_21:                                             ; preds = %b_18
  %100 = sub i32 %32, %8
  %101 = add i32 %0, 32
  %102 = call i8 @get_i8(i32 %101)
  %103 = zext i8 %102 to i32
  %104 = icmp eq i32 %103, 3
  %105 = zext i1 %104 to i32
  %106 = icmp ne i32 %105, 0
  %107 = select i1 %106, i32 1, i32 %103
  %108 = and i32 %107, 3
  %109 = sub i32 %108, 1
  switch i32 %109, label %b_13 [
    i32 0, label %b_15
    i32 1, label %b_17
    i32 2, label %b_15
  ]

b_22:                                             ; preds = %b_20
  br label %b_24

b_23:                                             ; preds = %b_27, %b_26, %b_25
  %110 = phi i32 [ %0, %b_26 ], [ %0, %b_27 ], [ %122, %b_25 ]
  %111 = phi i32 [ %1, %b_26 ], [ %1, %b_27 ], [ %123, %b_25 ]
  %112 = phi i32 [ %2, %b_26 ], [ %2, %b_27 ], [ %124, %b_25 ]
  %113 = phi i32 [ 0, %b_26 ], [ %142, %b_27 ], [ %126, %b_25 ]
  %114 = phi i32 [ %99, %b_26 ], [ %99, %b_27 ], [ %126, %b_25 ]
  %115 = phi i32 [ %99, %b_26 ], [ %144, %b_27 ], [ 0, %b_25 ]
  %116 = phi i32 [ %7, %b_26 ], [ %7, %b_27 ], [ %128, %b_25 ]
  %117 = phi i32 [ %11, %b_26 ], [ %11, %b_27 ], [ %129, %b_25 ]
  %118 = phi i32 [ %135, %b_26 ], [ %135, %b_27 ], [ %130, %b_25 ]
  %119 = phi i32 [ 0, %b_26 ], [ 0, %b_27 ], [ %131, %b_25 ]
  %120 = phi i32 [ 0, %b_26 ], [ 0, %b_27 ], [ %132, %b_25 ]
  %121 = add i32 %113, 1
  br label %b_28

b_24:                                             ; preds = %b_22
  br label %b_26

b_25:                                             ; preds = %b_26, %b_26
  %122 = phi i32 [ %0, %b_26 ], [ %0, %b_26 ]
  %123 = phi i32 [ %1, %b_26 ], [ %1, %b_26 ]
  %124 = phi i32 [ %2, %b_26 ], [ %2, %b_26 ]
  %125 = phi i32 [ 0, %b_26 ], [ 0, %b_26 ]
  %126 = phi i32 [ %99, %b_26 ], [ %99, %b_26 ]
  %127 = phi i32 [ %99, %b_26 ], [ %99, %b_26 ]
  %128 = phi i32 [ %7, %b_26 ], [ %7, %b_26 ]
  %129 = phi i32 [ %11, %b_26 ], [ %11, %b_26 ]
  %130 = phi i32 [ %135, %b_26 ], [ %135, %b_26 ]
  %131 = phi i32 [ 0, %b_26 ], [ 0, %b_26 ]
  %132 = phi i32 [ 0, %b_26 ], [ 0, %b_26 ]
  br label %b_23

b_26:                                             ; preds = %b_24
  %133 = add i32 %0, 32
  %134 = call i8 @get_i8(i32 %133)
  %135 = zext i8 %134 to i32
  %136 = icmp eq i32 %135, 3
  %137 = zext i1 %136 to i32
  %138 = icmp ne i32 %137, 0
  %139 = select i1 %138, i32 1, i32 %135
  %140 = and i32 %139, 3
  %141 = sub i32 %140, 1
  switch i32 %141, label %b_23 [
    i32 0, label %b_25
    i32 1, label %b_27
    i32 2, label %b_25
  ]

b_27:                                             ; preds = %b_26
  %142 = lshr i32 %99, 1
  %143 = add i32 %99, 1
  %144 = lshr i32 %143, 1
  br label %b_23

b_28:                                             ; preds = %b_30, %b_23
  %145 = phi i32 [ %110, %b_23 ], [ %145, %b_30 ]
  %146 = phi i32 [ %111, %b_23 ], [ %146, %b_30 ]
  %147 = phi i32 [ %112, %b_23 ], [ %147, %b_30 ]
  %148 = phi i32 [ %121, %b_23 ], [ %156, %b_30 ]
  %149 = phi i32 [ %114, %b_23 ], [ %149, %b_30 ]
  %150 = phi i32 [ %115, %b_23 ], [ %150, %b_30 ]
  %151 = phi i32 [ %116, %b_23 ], [ %151, %b_30 ]
  %152 = phi i32 [ %117, %b_23 ], [ %152, %b_30 ]
  %153 = phi i32 [ %118, %b_23 ], [ %153, %b_30 ]
  %154 = phi i32 [ %119, %b_23 ], [ %154, %b_30 ]
  %155 = phi i32 [ %120, %b_23 ], [ %155, %b_30 ]
  %156 = add i32 %148, -1
  %157 = icmp eq i32 0, %156
  %158 = zext i1 %157 to i32
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %b_11, label %b_30

b_29:                                             ; preds = %b_31
  ret i32 1

b_30:                                             ; preds = %b_28
  %160 = add i32 %145, 24
  %161 = call i32 @get_i32(i32 %160)
  %162 = add i32 %145, 4
  %163 = call i32 @get_i32(i32 %162)
  %164 = add i32 %145, 28
  %165 = call i32 @get_i32(i32 %164)
  %166 = add i32 %165, 16
  %167 = call i32 @get_i32(i32 %166)
  %168 = call i8* @get_function_from_table(i32 %167, i32 0)
  %169 = bitcast i8* %168 to i32 (i32, i32)*
  %170 = call i32 %169(i32 %161, i32 %163)
  %171 = icmp eq i32 0, %170
  %172 = zext i1 %171 to i32
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %b_28, label %b_31

b_31:                                             ; preds = %b_30
  br label %b_29

b_32:                                             ; preds = %b_13
  br label %b_34

b_33:                                             ; preds = %b_34
  %174 = add i32 %186, 4
  %175 = call i32 @get_i32(i32 %174)
  %176 = add i32 %186, 24
  %177 = call i32 @get_i32(i32 %176)
  %178 = add i32 %186, 28
  %179 = call i32 @get_i32(i32 %178)
  %180 = add i32 %179, 12
  %181 = call i32 @get_i32(i32 %180)
  %182 = call i8* @get_function_from_table(i32 %181, i32 1)
  %183 = bitcast i8* %182 to i32 (i32, i32, i32)*
  %184 = call i32 %183(i32 %177, i32 %187, i32 %188)
  %185 = icmp ne i32 %184, 0
  br i1 %185, label %b_1, label %b_38

b_34:                                             ; preds = %b_36, %b_32
  %186 = phi i32 [ %62, %b_32 ], [ %186, %b_36 ]
  %187 = phi i32 [ %63, %b_32 ], [ %187, %b_36 ]
  %188 = phi i32 [ %64, %b_32 ], [ %188, %b_36 ]
  %189 = phi i32 [ %73, %b_32 ], [ %197, %b_36 ]
  %190 = phi i32 [ %66, %b_32 ], [ %190, %b_36 ]
  %191 = phi i32 [ %67, %b_32 ], [ %191, %b_36 ]
  %192 = phi i32 [ %68, %b_32 ], [ %192, %b_36 ]
  %193 = phi i32 [ %69, %b_32 ], [ %193, %b_36 ]
  %194 = phi i32 [ %70, %b_32 ], [ %194, %b_36 ]
  %195 = phi i32 [ %71, %b_32 ], [ %195, %b_36 ]
  %196 = phi i32 [ %72, %b_32 ], [ %196, %b_36 ]
  %197 = add i32 %189, -1
  %198 = icmp eq i32 0, %197
  %199 = zext i1 %198 to i32
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %b_33, label %b_36

b_35:                                             ; preds = %b_37
  ret i32 1

b_36:                                             ; preds = %b_34
  %201 = add i32 %186, 24
  %202 = call i32 @get_i32(i32 %201)
  %203 = add i32 %186, 4
  %204 = call i32 @get_i32(i32 %203)
  %205 = add i32 %186, 28
  %206 = call i32 @get_i32(i32 %205)
  %207 = add i32 %206, 16
  %208 = call i32 @get_i32(i32 %207)
  %209 = call i8* @get_function_from_table(i32 %208, i32 0)
  %210 = bitcast i8* %209 to i32 (i32, i32)*
  %211 = call i32 %210(i32 %202, i32 %204)
  %212 = icmp eq i32 0, %211
  %213 = zext i1 %212 to i32
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %b_34, label %b_37

b_37:                                             ; preds = %b_36
  br label %b_35

b_38:                                             ; preds = %b_33
  %215 = add i32 %191, 1
  %216 = add i32 %186, 28
  %217 = call i32 @get_i32(i32 %216)
  %218 = add i32 %186, 24
  %219 = call i32 @get_i32(i32 %218)
  br label %b_39

b_39:                                             ; preds = %b_41, %b_38
  %220 = phi i32 [ %186, %b_38 ], [ %220, %b_41 ]
  %221 = phi i32 [ %215, %b_38 ], [ %231, %b_41 ]
  %222 = phi i32 [ %217, %b_38 ], [ %222, %b_41 ]
  %223 = phi i32 [ 1, %b_38 ], [ %223, %b_41 ]
  %224 = phi i32 [ %175, %b_38 ], [ %224, %b_41 ]
  %225 = phi i32 [ %219, %b_38 ], [ %225, %b_41 ]
  %226 = phi i32 [ %192, %b_38 ], [ %226, %b_41 ]
  %227 = phi i32 [ %193, %b_38 ], [ %227, %b_41 ]
  %228 = phi i32 [ %194, %b_38 ], [ %228, %b_41 ]
  %229 = phi i32 [ %195, %b_38 ], [ %229, %b_41 ]
  %230 = phi i32 [ %196, %b_38 ], [ %230, %b_41 ]
  %231 = add i32 %221, -1
  %232 = icmp ne i32 %231, 0
  br i1 %232, label %b_41, label %b_42

b_40:                                             ; preds = %b_43
  %233 = trunc i32 %230 to i8
  %234 = add i32 %220, 32
  call void @set_i8(i32 %234, i8 %233)
  %235 = add i32 %220, 4
  call void @set_i32(i32 %235, i32 %229)
  ret i32 0

b_41:                                             ; preds = %b_39
  %236 = add i32 %222, 16
  %237 = call i32 @get_i32(i32 %236)
  %238 = call i8* @get_function_from_table(i32 %237, i32 0)
  %239 = bitcast i8* %238 to i32 (i32, i32)*
  %240 = call i32 %239(i32 %225, i32 %224)
  %241 = icmp eq i32 0, %240
  %242 = zext i1 %241 to i32
  %243 = icmp ne i32 %242, 0
  br i1 %243, label %b_39, label %b_44

b_42:                                             ; preds = %b_39
  br label %b_43

b_43:                                             ; preds = %b_42
  br label %b_40

b_44:                                             ; preds = %b_41
  br label %b_1

b_45:                                             ; preds = %b_11
  %244 = add i32 %145, 24
  %245 = call i32 @get_i32(i32 %244)
  %246 = add i32 %145, 28
  %247 = call i32 @get_i32(i32 %246)
  %248 = add i32 %247, 12
  %249 = call i32 @get_i32(i32 %248)
  %250 = call i8* @get_function_from_table(i32 %249, i32 1)
  %251 = bitcast i8* %250 to i32 (i32, i32, i32)*
  %252 = call i32 %251(i32 %245, i32 %146, i32 %147)
  %253 = icmp ne i32 %252, 0
  br i1 %253, label %b_1, label %b_46

b_46:                                             ; preds = %b_45
  %254 = add i32 %150, 1
  %255 = add i32 %145, 28
  %256 = call i32 @get_i32(i32 %255)
  %257 = add i32 %145, 24
  %258 = call i32 @get_i32(i32 %257)
  br label %b_47

b_47:                                             ; preds = %b_51, %b_46
  %259 = phi i32 [ %258, %b_46 ], [ %259, %b_51 ]
  %260 = phi i32 [ %254, %b_46 ], [ %270, %b_51 ]
  %261 = phi i32 [ %256, %b_46 ], [ %261, %b_51 ]
  %262 = phi i32 [ 1, %b_46 ], [ %262, %b_51 ]
  %263 = phi i32 [ %59, %b_46 ], [ %263, %b_51 ]
  %264 = phi i32 [ %150, %b_46 ], [ %264, %b_51 ]
  %265 = phi i32 [ %151, %b_46 ], [ %265, %b_51 ]
  %266 = phi i32 [ %152, %b_46 ], [ %266, %b_51 ]
  %267 = phi i32 [ %153, %b_46 ], [ %267, %b_51 ]
  %268 = phi i32 [ %154, %b_46 ], [ %268, %b_51 ]
  %269 = phi i32 [ %155, %b_46 ], [ %269, %b_51 ]
  %270 = add i32 %260, -1
  %271 = icmp eq i32 0, %270
  %272 = zext i1 %271 to i32
  %273 = icmp ne i32 %272, 0
  br i1 %273, label %b_49, label %b_50

b_48:                                             ; preds = %b_52
  br label %b_1

b_49:                                             ; preds = %b_47
  ret i32 0

b_50:                                             ; preds = %b_47
  br label %b_51

b_51:                                             ; preds = %b_50
  %274 = add i32 %261, 16
  %275 = call i32 @get_i32(i32 %274)
  %276 = call i8* @get_function_from_table(i32 %275, i32 0)
  %277 = bitcast i8* %276 to i32 (i32, i32)*
  %278 = call i32 %277(i32 %259, i32 %263)
  %279 = icmp eq i32 0, %278
  %280 = zext i1 %279 to i32
  %281 = icmp ne i32 %280, 0
  br i1 %281, label %b_47, label %b_52

b_52:                                             ; preds = %b_51
  br label %b_48
}

; Function Attrs: nounwind
define i32 @wasmf_internal_13(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = load i32, i32* @wasmg_internal_0, align 4
  %4 = sub i32 %3, 48
  store i32 %4, i32* @wasmg_internal_0, align 4
  %5 = add i32 %4, 36
  %6 = add i32 %5, 0
  call void @set_i32(i32 %6, i32 %1)
  %7 = add i32 %4, 40
  call void @set_i8(i32 %7, i8 3)
  %8 = add i32 %4, 8
  call void @set_i64(i32 %8, i64 137438953472)
  %9 = add i32 %4, 32
  call void @set_i32(i32 %9, i32 %0)
  %10 = add i32 %4, 24
  call void @set_i32(i32 %10, i32 0)
  %11 = add i32 %4, 16
  call void @set_i32(i32 %11, i32 0)
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 %25

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_50, %b_3
  %12 = phi i32 [ %351, %b_50 ], [ %27, %b_3 ]
  %13 = phi i32 [ %352, %b_50 ], [ %28, %b_3 ]
  %14 = phi i32 [ %353, %b_50 ], [ %29, %b_3 ]
  %15 = phi i32 [ %354, %b_50 ], [ %30, %b_3 ]
  %16 = phi i32 [ %355, %b_50 ], [ %31, %b_3 ]
  %17 = phi i32 [ %356, %b_50 ], [ %32, %b_3 ]
  %18 = phi i32 [ %357, %b_50 ], [ %33, %b_3 ]
  %19 = phi i32 [ %358, %b_50 ], [ %34, %b_3 ]
  %20 = phi i32 [ %359, %b_50 ], [ %35, %b_3 ]
  %21 = phi i32 [ %360, %b_50 ], [ %36, %b_3 ]
  %22 = phi i32 [ %361, %b_50 ], [ %37, %b_3 ]
  %23 = phi i32 [ %362, %b_50 ], [ %38, %b_3 ]
  %24 = phi i32 [ %363, %b_50 ], [ %39, %b_3 ]
  %25 = phi i32 [ 0, %b_50 ], [ 1, %b_3 ]
  %26 = add i32 %15, 48
  store i32 %26, i32* @wasmg_internal_0, align 4
  br label %exit

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_48, %b_44, %b_43, %b_41, %b_40, %b_35, %b_11
  %27 = phi i32 [ %0, %b_11 ], [ %191, %b_35 ], [ %261, %b_40 ], [ %0, %b_41 ], [ %289, %b_43 ], [ %320, %b_44 ], [ %338, %b_48 ]
  %28 = phi i32 [ %1, %b_11 ], [ %243, %b_35 ], [ %258, %b_40 ], [ %1, %b_41 ], [ %290, %b_43 ], [ %317, %b_44 ], [ %41, %b_48 ]
  %29 = phi i32 [ %2, %b_11 ], [ %193, %b_35 ], [ %260, %b_40 ], [ %2, %b_41 ], [ %291, %b_43 ], [ %312, %b_44 ], [ %42, %b_48 ]
  %30 = phi i32 [ %4, %b_11 ], [ %194, %b_35 ], [ %194, %b_40 ], [ %4, %b_41 ], [ %292, %b_43 ], [ %292, %b_44 ], [ %43, %b_48 ]
  %31 = phi i32 [ %57, %b_11 ], [ %195, %b_35 ], [ %257, %b_40 ], [ %277, %b_41 ], [ %293, %b_43 ], [ %316, %b_44 ], [ %44, %b_48 ]
  %32 = phi i32 [ %82, %b_11 ], [ %196, %b_35 ], [ %196, %b_40 ], [ %96, %b_41 ], [ %294, %b_43 ], [ %294, %b_44 ], [ %45, %b_48 ]
  %33 = phi i32 [ %73, %b_11 ], [ %197, %b_35 ], [ %197, %b_40 ], [ %87, %b_41 ], [ %295, %b_43 ], [ %295, %b_44 ], [ %46, %b_48 ]
  %34 = phi i32 [ 0, %b_11 ], [ %198, %b_35 ], [ %198, %b_40 ], [ 0, %b_41 ], [ %296, %b_43 ], [ %296, %b_44 ], [ %47, %b_48 ]
  %35 = phi i32 [ %75, %b_11 ], [ %199, %b_35 ], [ %199, %b_40 ], [ %89, %b_41 ], [ %297, %b_43 ], [ %297, %b_44 ], [ %48, %b_48 ]
  %36 = phi i32 [ 0, %b_11 ], [ %200, %b_35 ], [ %253, %b_40 ], [ 0, %b_41 ], [ %298, %b_43 ], [ %319, %b_44 ], [ %49, %b_48 ]
  %37 = phi i32 [ 0, %b_11 ], [ %201, %b_35 ], [ %201, %b_40 ], [ 0, %b_41 ], [ %299, %b_43 ], [ %299, %b_44 ], [ %50, %b_48 ]
  %38 = phi i32 [ 0, %b_11 ], [ %202, %b_35 ], [ %202, %b_40 ], [ 0, %b_41 ], [ %300, %b_43 ], [ %300, %b_44 ], [ %51, %b_48 ]
  %39 = phi i32 [ 0, %b_11 ], [ %203, %b_35 ], [ %203, %b_40 ], [ 0, %b_41 ], [ %301, %b_43 ], [ %301, %b_44 ], [ %52, %b_48 ]
  br label %b_1

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_45, %b_38, %b_7
  %40 = phi i32 [ %191, %b_38 ], [ %289, %b_45 ], [ %59, %b_7 ]
  %41 = phi i32 [ %243, %b_38 ], [ %290, %b_45 ], [ %60, %b_7 ]
  %42 = phi i32 [ %193, %b_38 ], [ %312, %b_45 ], [ %61, %b_7 ]
  %43 = phi i32 [ %194, %b_38 ], [ %292, %b_45 ], [ %62, %b_7 ]
  %44 = phi i32 [ %195, %b_38 ], [ %293, %b_45 ], [ %63, %b_7 ]
  %45 = phi i32 [ %196, %b_38 ], [ %294, %b_45 ], [ 0, %b_7 ]
  %46 = phi i32 [ %197, %b_38 ], [ %295, %b_45 ], [ %65, %b_7 ]
  %47 = phi i32 [ %198, %b_38 ], [ %296, %b_45 ], [ %66, %b_7 ]
  %48 = phi i32 [ %199, %b_38 ], [ %297, %b_45 ], [ %67, %b_7 ]
  %49 = phi i32 [ %253, %b_38 ], [ %298, %b_45 ], [ %68, %b_7 ]
  %50 = phi i32 [ %201, %b_38 ], [ %299, %b_45 ], [ %69, %b_7 ]
  %51 = phi i32 [ %202, %b_38 ], [ %300, %b_45 ], [ %70, %b_7 ]
  %52 = phi i32 [ %203, %b_38 ], [ %301, %b_45 ], [ %71, %b_7 ]
  %53 = icmp ugt i32 %48, %45
  %54 = zext i1 %53 to i32
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %b_48, label %b_49

b_6:                                              ; preds = %b_4
  %56 = add i32 %2, 8
  %57 = call i32 @get_i32(i32 %56)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %b_8, label %b_9

b_7:                                              ; preds = %b_10, %b_8
  %59 = phi i32 [ %0, %b_8 ], [ %0, %b_10 ]
  %60 = phi i32 [ %1, %b_8 ], [ %1, %b_10 ]
  %61 = phi i32 [ %2, %b_8 ], [ %2, %b_10 ]
  %62 = phi i32 [ %4, %b_8 ], [ %4, %b_10 ]
  %63 = phi i32 [ %57, %b_8 ], [ %57, %b_10 ]
  %64 = phi i32 [ %82, %b_8 ], [ %96, %b_10 ]
  %65 = phi i32 [ %73, %b_8 ], [ %87, %b_10 ]
  %66 = phi i32 [ 0, %b_8 ], [ 0, %b_10 ]
  %67 = phi i32 [ %75, %b_8 ], [ %89, %b_10 ]
  %68 = phi i32 [ 0, %b_8 ], [ 0, %b_10 ]
  %69 = phi i32 [ 0, %b_8 ], [ 0, %b_10 ]
  %70 = phi i32 [ 0, %b_8 ], [ 0, %b_10 ]
  %71 = phi i32 [ 0, %b_8 ], [ 0, %b_10 ]
  br label %b_5

b_8:                                              ; preds = %b_6
  %72 = add i32 %2, 0
  %73 = call i32 @get_i32(i32 %72)
  %74 = add i32 %2, 4
  %75 = call i32 @get_i32(i32 %74)
  %76 = add i32 %2, 12
  %77 = add i32 %76, 0
  %78 = call i32 @get_i32(i32 %77)
  %79 = icmp ugt i32 %78, %75
  %80 = zext i1 %79 to i32
  %81 = icmp ne i32 %80, 0
  %82 = select i1 %81, i32 %75, i32 %78
  %83 = icmp eq i32 0, %82
  %84 = zext i1 %83 to i32
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %b_7, label %b_11

b_9:                                              ; preds = %b_6
  br label %b_10

b_10:                                             ; preds = %b_9
  %86 = add i32 %2, 0
  %87 = call i32 @get_i32(i32 %86)
  %88 = add i32 %2, 4
  %89 = call i32 @get_i32(i32 %88)
  %90 = add i32 %2, 20
  %91 = add i32 %90, 0
  %92 = call i32 @get_i32(i32 %91)
  %93 = icmp ugt i32 %92, %89
  %94 = zext i1 %93 to i32
  %95 = icmp ne i32 %94, 0
  %96 = select i1 %95, i32 %89, i32 %92
  %97 = icmp eq i32 0, %96
  %98 = zext i1 %97 to i32
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %b_7, label %b_41

b_11:                                             ; preds = %b_8
  %100 = add i32 %73, 0
  %101 = call i32 @get_i32(i32 %100)
  %102 = add i32 %73, 4
  %103 = call i32 @get_i32(i32 %102)
  %104 = add i32 %1, 12
  %105 = call i32 @get_i32(i32 %104)
  %106 = call i8* @get_function_from_table(i32 %105, i32 1)
  %107 = bitcast i8* %106 to i32 (i32, i32, i32)*
  %108 = call i32 %107(i32 %0, i32 %101, i32 %103)
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %b_3, label %b_12

b_12:                                             ; preds = %b_11
  %110 = add i32 %73, 12
  %111 = add i32 %2, 20
  %112 = call i32 @get_i32(i32 %111)
  %113 = add i32 %2, 16
  %114 = call i32 @get_i32(i32 %113)
  br label %b_13

b_13:                                             ; preds = %b_39, %b_12
  %115 = phi i32 [ %110, %b_12 ], [ %261, %b_39 ]
  %116 = phi i32 [ %1, %b_12 ], [ %258, %b_39 ]
  %117 = phi i32 [ %2, %b_12 ], [ %260, %b_39 ]
  %118 = phi i32 [ %4, %b_12 ], [ %194, %b_39 ]
  %119 = phi i32 [ %57, %b_12 ], [ %257, %b_39 ]
  %120 = phi i32 [ %82, %b_12 ], [ %196, %b_39 ]
  %121 = phi i32 [ %73, %b_12 ], [ %197, %b_39 ]
  %122 = phi i32 [ %112, %b_12 ], [ %198, %b_39 ]
  %123 = phi i32 [ %75, %b_12 ], [ %199, %b_39 ]
  %124 = phi i32 [ %82, %b_12 ], [ %253, %b_39 ]
  %125 = phi i32 [ %114, %b_12 ], [ %201, %b_39 ]
  %126 = phi i32 [ 0, %b_12 ], [ %202, %b_39 ]
  %127 = phi i32 [ 0, %b_12 ], [ %203, %b_39 ]
  %128 = add i32 %119, 28
  %129 = add i32 %128, 0
  %130 = call i8 @get_i8(i32 %129)
  %131 = zext i8 %130 to i32
  %132 = trunc i32 %131 to i8
  %133 = add i32 %118, 40
  call void @set_i8(i32 %133, i8 %132)
  %134 = add i32 %119, 4
  %135 = add i32 %134, 0
  %136 = call i64 @get_i64(i32 %135)
  %137 = call i64 @rotl_u64(i64 %136, i64 32)
  %138 = add i32 %118, 8
  call void @set_i64(i32 %138, i64 %137)
  %139 = add i32 %119, 24
  %140 = add i32 %139, 0
  %141 = call i32 @get_i32(i32 %140)
  br label %b_15

b_14:                                             ; preds = %b_37
  call void @wasmf_internal_36(i32 %207, i32 %198, i32 1050236)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_15:                                             ; preds = %b_13
  br label %b_17

b_16:                                             ; preds = %b_23, %b_19, %b_18
  %142 = phi i32 [ %115, %b_19 ], [ %115, %b_23 ], [ %160, %b_18 ]
  %143 = phi i32 [ 0, %b_19 ], [ 0, %b_23 ], [ 1, %b_18 ]
  %144 = phi i32 [ %141, %b_19 ], [ %141, %b_23 ], [ %162, %b_18 ]
  %145 = phi i32 [ %118, %b_19 ], [ %118, %b_23 ], [ %163, %b_18 ]
  %146 = phi i32 [ %119, %b_19 ], [ %119, %b_23 ], [ %164, %b_18 ]
  %147 = phi i32 [ %120, %b_19 ], [ %120, %b_23 ], [ %165, %b_18 ]
  %148 = phi i32 [ %121, %b_19 ], [ %121, %b_23 ], [ %166, %b_18 ]
  %149 = phi i32 [ %122, %b_19 ], [ %122, %b_23 ], [ %167, %b_18 ]
  %150 = phi i32 [ %123, %b_19 ], [ %123, %b_23 ], [ %168, %b_18 ]
  %151 = phi i32 [ %124, %b_19 ], [ %124, %b_23 ], [ %169, %b_18 ]
  %152 = phi i32 [ %125, %b_19 ], [ %125, %b_23 ], [ %170, %b_18 ]
  %153 = phi i32 [ 0, %b_19 ], [ 0, %b_23 ], [ %171, %b_18 ]
  %154 = phi i32 [ %127, %b_19 ], [ %181, %b_23 ], [ %172, %b_18 ]
  %155 = add i32 %145, 20
  call void @set_i32(i32 %155, i32 %144)
  %156 = add i32 %145, 16
  call void @set_i32(i32 %156, i32 %143)
  %157 = add i32 %146, 16
  %158 = add i32 %157, 0
  %159 = call i32 @get_i32(i32 %158)
  br label %b_25

b_17:                                             ; preds = %b_15
  br label %b_19

b_18:                                             ; preds = %b_24, %b_19
  %160 = phi i32 [ %115, %b_19 ], [ %115, %b_24 ]
  %161 = phi i32 [ 0, %b_19 ], [ 0, %b_24 ]
  %162 = phi i32 [ %141, %b_19 ], [ %190, %b_24 ]
  %163 = phi i32 [ %118, %b_19 ], [ %118, %b_24 ]
  %164 = phi i32 [ %119, %b_19 ], [ %119, %b_24 ]
  %165 = phi i32 [ %120, %b_19 ], [ %120, %b_24 ]
  %166 = phi i32 [ %121, %b_19 ], [ %121, %b_24 ]
  %167 = phi i32 [ %122, %b_19 ], [ %122, %b_24 ]
  %168 = phi i32 [ %123, %b_19 ], [ %123, %b_24 ]
  %169 = phi i32 [ %124, %b_19 ], [ %124, %b_24 ]
  %170 = phi i32 [ %125, %b_19 ], [ %125, %b_24 ]
  %171 = phi i32 [ 0, %b_19 ], [ 0, %b_24 ]
  %172 = phi i32 [ %127, %b_19 ], [ %181, %b_24 ]
  br label %b_16

b_19:                                             ; preds = %b_17
  %173 = add i32 %119, 20
  %174 = add i32 %173, 0
  %175 = call i32 @get_i32(i32 %174)
  %176 = sub i32 %175, 1
  switch i32 %176, label %b_18 [
    i32 0, label %b_20
    i32 1, label %b_16
  ]

b_20:                                             ; preds = %b_19
  %177 = icmp uge i32 %141, %122
  %178 = zext i1 %177 to i32
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %b_21, label %b_22

b_21:                                             ; preds = %b_20
  call void @wasmf_internal_36(i32 %141, i32 %122, i32 1050252)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_22:                                             ; preds = %b_20
  br label %b_23

b_23:                                             ; preds = %b_22
  %180 = shl i32 %141, 3
  %181 = add i32 %180, %125
  %182 = add i32 %181, 4
  %183 = call i32 @get_i32(i32 %182)
  %184 = icmp ne i32 %183, 17
  %185 = zext i1 %184 to i32
  %186 = icmp ne i32 %185, 0
  br i1 %186, label %b_16, label %b_24

b_24:                                             ; preds = %b_23
  %187 = add i32 %181, 0
  %188 = call i32 @get_i32(i32 %187)
  %189 = add i32 %188, 0
  %190 = call i32 @get_i32(i32 %189)
  br label %b_18

b_25:                                             ; preds = %b_16
  br label %b_27

b_26:                                             ; preds = %b_33, %b_29, %b_28
  %191 = phi i32 [ %142, %b_29 ], [ %142, %b_33 ], [ %211, %b_28 ]
  %192 = phi i32 [ %143, %b_29 ], [ %232, %b_33 ], [ %212, %b_28 ]
  %193 = phi i32 [ %159, %b_29 ], [ %159, %b_33 ], [ %213, %b_28 ]
  %194 = phi i32 [ %145, %b_29 ], [ %145, %b_33 ], [ %214, %b_28 ]
  %195 = phi i32 [ %146, %b_29 ], [ %146, %b_33 ], [ %215, %b_28 ]
  %196 = phi i32 [ %147, %b_29 ], [ %147, %b_33 ], [ %216, %b_28 ]
  %197 = phi i32 [ %148, %b_29 ], [ %148, %b_33 ], [ %217, %b_28 ]
  %198 = phi i32 [ %149, %b_29 ], [ %149, %b_33 ], [ %218, %b_28 ]
  %199 = phi i32 [ %150, %b_29 ], [ %150, %b_33 ], [ %219, %b_28 ]
  %200 = phi i32 [ %151, %b_29 ], [ %151, %b_33 ], [ %220, %b_28 ]
  %201 = phi i32 [ %152, %b_29 ], [ %152, %b_33 ], [ %221, %b_28 ]
  %202 = phi i32 [ %153, %b_29 ], [ %153, %b_33 ], [ 1, %b_28 ]
  %203 = phi i32 [ %154, %b_29 ], [ %154, %b_33 ], [ %223, %b_28 ]
  %204 = add i32 %194, 28
  call void @set_i32(i32 %204, i32 %193)
  %205 = add i32 %194, 24
  call void @set_i32(i32 %205, i32 %202)
  %206 = add i32 %195, 0
  %207 = call i32 @get_i32(i32 %206)
  %208 = icmp ult i32 %207, %198
  %209 = zext i1 %208 to i32
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %b_35, label %b_36

b_27:                                             ; preds = %b_25
  br label %b_29

b_28:                                             ; preds = %b_34, %b_29
  %211 = phi i32 [ %142, %b_29 ], [ %142, %b_34 ]
  %212 = phi i32 [ %143, %b_29 ], [ %232, %b_34 ]
  %213 = phi i32 [ %159, %b_29 ], [ %241, %b_34 ]
  %214 = phi i32 [ %145, %b_29 ], [ %145, %b_34 ]
  %215 = phi i32 [ %146, %b_29 ], [ %146, %b_34 ]
  %216 = phi i32 [ %147, %b_29 ], [ %147, %b_34 ]
  %217 = phi i32 [ %148, %b_29 ], [ %148, %b_34 ]
  %218 = phi i32 [ %149, %b_29 ], [ %149, %b_34 ]
  %219 = phi i32 [ %150, %b_29 ], [ %150, %b_34 ]
  %220 = phi i32 [ %151, %b_29 ], [ %151, %b_34 ]
  %221 = phi i32 [ %152, %b_29 ], [ %152, %b_34 ]
  %222 = phi i32 [ %153, %b_29 ], [ %153, %b_34 ]
  %223 = phi i32 [ %154, %b_29 ], [ %154, %b_34 ]
  br label %b_26

b_29:                                             ; preds = %b_27
  %224 = add i32 %146, 12
  %225 = add i32 %224, 0
  %226 = call i32 @get_i32(i32 %225)
  %227 = sub i32 %226, 1
  switch i32 %227, label %b_28 [
    i32 0, label %b_30
    i32 1, label %b_26
  ]

b_30:                                             ; preds = %b_29
  %228 = icmp uge i32 %159, %149
  %229 = zext i1 %228 to i32
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %b_31, label %b_32

b_31:                                             ; preds = %b_30
  call void @wasmf_internal_36(i32 %159, i32 %149, i32 1050252)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_32:                                             ; preds = %b_30
  br label %b_33

b_33:                                             ; preds = %b_32
  %231 = shl i32 %159, 3
  %232 = add i32 %231, %152
  %233 = add i32 %232, 4
  %234 = call i32 @get_i32(i32 %233)
  %235 = icmp ne i32 %234, 17
  %236 = zext i1 %235 to i32
  %237 = icmp ne i32 %236, 0
  br i1 %237, label %b_26, label %b_34

b_34:                                             ; preds = %b_33
  %238 = add i32 %232, 0
  %239 = call i32 @get_i32(i32 %238)
  %240 = add i32 %239, 0
  %241 = call i32 @get_i32(i32 %240)
  br label %b_28

b_35:                                             ; preds = %b_26
  %242 = shl i32 %207, 3
  %243 = add i32 %201, %242
  %244 = add i32 %243, 0
  %245 = call i32 @get_i32(i32 %244)
  %246 = add i32 %194, 8
  %247 = add i32 %243, 4
  %248 = call i32 @get_i32(i32 %247)
  %249 = call i8* @get_function_from_table(i32 %248, i32 0)
  %250 = bitcast i8* %249 to i32 (i32, i32)*
  %251 = call i32 %250(i32 %245, i32 %246)
  %252 = icmp ne i32 %251, 0
  br i1 %252, label %b_3, label %b_38

b_36:                                             ; preds = %b_26
  br label %b_37

b_37:                                             ; preds = %b_36
  br label %b_14

b_38:                                             ; preds = %b_35
  %253 = add i32 %200, -1
  %254 = icmp eq i32 0, %253
  %255 = zext i1 %254 to i32
  %256 = icmp ne i32 %255, 0
  br i1 %256, label %b_5, label %b_39

b_39:                                             ; preds = %b_38
  %257 = add i32 %195, 32
  %258 = add i32 %191, -4
  %259 = add i32 %191, 0
  %260 = call i32 @get_i32(i32 %259)
  %261 = add i32 %191, 8
  %262 = add i32 %194, 32
  %263 = call i32 @get_i32(i32 %262)
  %264 = add i32 %258, 0
  %265 = call i32 @get_i32(i32 %264)
  %266 = add i32 %194, 36
  %267 = call i32 @get_i32(i32 %266)
  %268 = add i32 %267, 12
  %269 = call i32 @get_i32(i32 %268)
  %270 = call i8* @get_function_from_table(i32 %269, i32 1)
  %271 = bitcast i8* %270 to i32 (i32, i32, i32)*
  %272 = call i32 %271(i32 %263, i32 %265, i32 %260)
  %273 = icmp eq i32 0, %272
  %274 = zext i1 %273 to i32
  %275 = icmp ne i32 %274, 0
  br i1 %275, label %b_13, label %b_40

b_40:                                             ; preds = %b_39
  br label %b_3

b_41:                                             ; preds = %b_10
  %276 = add i32 %2, 16
  %277 = call i32 @get_i32(i32 %276)
  %278 = add i32 %87, 0
  %279 = call i32 @get_i32(i32 %278)
  %280 = add i32 %87, 4
  %281 = call i32 @get_i32(i32 %280)
  %282 = add i32 %1, 12
  %283 = call i32 @get_i32(i32 %282)
  %284 = call i8* @get_function_from_table(i32 %283, i32 1)
  %285 = bitcast i8* %284 to i32 (i32, i32, i32)*
  %286 = call i32 %285(i32 %0, i32 %279, i32 %281)
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %b_3, label %b_42

b_42:                                             ; preds = %b_41
  %288 = add i32 %87, 12
  br label %b_43

b_43:                                             ; preds = %b_46, %b_42
  %289 = phi i32 [ %288, %b_42 ], [ %320, %b_46 ]
  %290 = phi i32 [ %1, %b_42 ], [ %317, %b_46 ]
  %291 = phi i32 [ %96, %b_42 ], [ %312, %b_46 ]
  %292 = phi i32 [ %4, %b_42 ], [ %292, %b_46 ]
  %293 = phi i32 [ %277, %b_42 ], [ %316, %b_46 ]
  %294 = phi i32 [ %96, %b_42 ], [ %294, %b_46 ]
  %295 = phi i32 [ %87, %b_42 ], [ %295, %b_46 ]
  %296 = phi i32 [ 0, %b_42 ], [ %296, %b_46 ]
  %297 = phi i32 [ %89, %b_42 ], [ %297, %b_46 ]
  %298 = phi i32 [ 0, %b_42 ], [ %319, %b_46 ]
  %299 = phi i32 [ 0, %b_42 ], [ %299, %b_46 ]
  %300 = phi i32 [ 0, %b_42 ], [ %300, %b_46 ]
  %301 = phi i32 [ 0, %b_42 ], [ %301, %b_46 ]
  %302 = add i32 %293, 0
  %303 = call i32 @get_i32(i32 %302)
  %304 = add i32 %292, 8
  %305 = add i32 %293, 4
  %306 = add i32 %305, 0
  %307 = call i32 @get_i32(i32 %306)
  %308 = call i8* @get_function_from_table(i32 %307, i32 0)
  %309 = bitcast i8* %308 to i32 (i32, i32)*
  %310 = call i32 %309(i32 %303, i32 %304)
  %311 = icmp ne i32 %310, 0
  br i1 %311, label %b_3, label %b_45

b_44:                                             ; preds = %b_47
  br label %b_3

b_45:                                             ; preds = %b_43
  %312 = add i32 %291, -1
  %313 = icmp eq i32 0, %312
  %314 = zext i1 %313 to i32
  %315 = icmp ne i32 %314, 0
  br i1 %315, label %b_5, label %b_46

b_46:                                             ; preds = %b_45
  %316 = add i32 %293, 8
  %317 = add i32 %289, -4
  %318 = add i32 %289, 0
  %319 = call i32 @get_i32(i32 %318)
  %320 = add i32 %289, 8
  %321 = add i32 %292, 32
  %322 = call i32 @get_i32(i32 %321)
  %323 = add i32 %317, 0
  %324 = call i32 @get_i32(i32 %323)
  %325 = add i32 %292, 36
  %326 = call i32 @get_i32(i32 %325)
  %327 = add i32 %326, 12
  %328 = call i32 @get_i32(i32 %327)
  %329 = call i8* @get_function_from_table(i32 %328, i32 1)
  %330 = bitcast i8* %329 to i32 (i32, i32, i32)*
  %331 = call i32 %330(i32 %322, i32 %324, i32 %319)
  %332 = icmp eq i32 0, %331
  %333 = zext i1 %332 to i32
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %b_43, label %b_47

b_47:                                             ; preds = %b_46
  br label %b_44

b_48:                                             ; preds = %b_5
  %335 = add i32 %43, 32
  %336 = call i32 @get_i32(i32 %335)
  %337 = shl i32 %45, 3
  %338 = add i32 %46, %337
  %339 = add i32 %338, 0
  %340 = call i32 @get_i32(i32 %339)
  %341 = add i32 %338, 4
  %342 = call i32 @get_i32(i32 %341)
  %343 = add i32 %43, 36
  %344 = call i32 @get_i32(i32 %343)
  %345 = add i32 %344, 12
  %346 = call i32 @get_i32(i32 %345)
  %347 = call i8* @get_function_from_table(i32 %346, i32 1)
  %348 = bitcast i8* %347 to i32 (i32, i32, i32)*
  %349 = call i32 %348(i32 %336, i32 %340, i32 %342)
  %350 = icmp ne i32 %349, 0
  br i1 %350, label %b_3, label %b_51

b_49:                                             ; preds = %b_5
  br label %b_50

b_50:                                             ; preds = %b_51, %b_49
  %351 = phi i32 [ %338, %b_51 ], [ %40, %b_49 ]
  %352 = phi i32 [ %41, %b_51 ], [ %41, %b_49 ]
  %353 = phi i32 [ %42, %b_51 ], [ %42, %b_49 ]
  %354 = phi i32 [ %43, %b_51 ], [ %43, %b_49 ]
  %355 = phi i32 [ %44, %b_51 ], [ %44, %b_49 ]
  %356 = phi i32 [ %45, %b_51 ], [ %45, %b_49 ]
  %357 = phi i32 [ %46, %b_51 ], [ %46, %b_49 ]
  %358 = phi i32 [ %47, %b_51 ], [ %47, %b_49 ]
  %359 = phi i32 [ %48, %b_51 ], [ %48, %b_49 ]
  %360 = phi i32 [ %49, %b_51 ], [ %49, %b_49 ]
  %361 = phi i32 [ %50, %b_51 ], [ %50, %b_49 ]
  %362 = phi i32 [ %51, %b_51 ], [ %51, %b_49 ]
  %363 = phi i32 [ %52, %b_51 ], [ %52, %b_49 ]
  br label %b_1

b_51:                                             ; preds = %b_48
  br label %b_50
}

; Function Attrs: nounwind
define i32 @wasmf_internal_14(i32 %0, i32 %1) #1 {
entry:
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 %9

b_0:                                              ; preds = %entry
  %2 = icmp ugt i32 %1, -65588
  %3 = zext i1 %2 to i32
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %b_1, label %b_2

b_1:                                              ; preds = %b_6, %b_4, %b_0
  %5 = phi i32 [ %0, %b_0 ], [ %37, %b_6 ], [ %24, %b_4 ]
  %6 = phi i32 [ %1, %b_0 ], [ %38, %b_6 ], [ %25, %b_4 ]
  %7 = phi i32 [ 0, %b_0 ], [ %39, %b_6 ], [ %33, %b_4 ]
  %8 = phi i32 [ 0, %b_0 ], [ %40, %b_6 ], [ %27, %b_4 ]
  %9 = phi i32 [ 0, %b_0 ], [ %37, %b_6 ], [ %28, %b_4 ]
  %10 = phi i32 [ 0, %b_0 ], [ %42, %b_6 ], [ %29, %b_4 ]
  %11 = phi i32 [ 0, %b_0 ], [ %43, %b_6 ], [ %30, %b_4 ]
  %12 = phi i32 [ 0, %b_0 ], [ %44, %b_6 ], [ %31, %b_4 ]
  %13 = phi i32 [ 0, %b_0 ], [ %45, %b_6 ], [ %32, %b_4 ]
  br label %exit

b_2:                                              ; preds = %b_0
  %14 = add i32 %1, 11
  %15 = and i32 %14, -8
  %16 = icmp ult i32 %1, 11
  %17 = zext i1 %16 to i32
  %18 = icmp ne i32 %17, 0
  %19 = select i1 %18, i32 16, i32 %15
  %20 = add i32 %0, -4
  %21 = add i32 %20, 0
  %22 = call i32 @get_i32(i32 %21)
  %23 = and i32 %22, -8
  br label %b_3

b_3:                                              ; preds = %b_2
  br label %b_5

b_4:                                              ; preds = %b_22, %b_20, %b_17, %b_12, %b_10
  %24 = phi i32 [ %0, %b_20 ], [ %0, %b_22 ], [ %0, %b_17 ], [ %0, %b_12 ], [ %0, %b_10 ]
  %25 = phi i32 [ %1, %b_20 ], [ %1, %b_22 ], [ %1, %b_17 ], [ %1, %b_12 ], [ %1, %b_10 ]
  %26 = phi i32 [ %19, %b_20 ], [ %19, %b_22 ], [ %19, %b_17 ], [ %19, %b_12 ], [ %19, %b_10 ]
  %27 = phi i32 [ %23, %b_20 ], [ %96, %b_22 ], [ %23, %b_17 ], [ %56, %b_12 ], [ %51, %b_10 ]
  %28 = phi i32 [ 0, %b_20 ], [ 0, %b_22 ], [ 0, %b_17 ], [ 0, %b_12 ], [ 0, %b_10 ]
  %29 = phi i32 [ %20, %b_20 ], [ %20, %b_22 ], [ %20, %b_17 ], [ %20, %b_12 ], [ %20, %b_10 ]
  %30 = phi i32 [ %92, %b_20 ], [ %95, %b_22 ], [ %22, %b_17 ], [ %22, %b_12 ], [ %22, %b_10 ]
  %31 = phi i32 [ %66, %b_20 ], [ %66, %b_22 ], [ 0, %b_17 ], [ %66, %b_12 ], [ %66, %b_10 ]
  %32 = phi i32 [ %67, %b_20 ], [ %67, %b_22 ], [ 0, %b_17 ], [ %67, %b_12 ], [ %67, %b_10 ]
  %33 = call i32 @wasmf_internal_1(i32 %25)
  %34 = icmp eq i32 0, %33
  %35 = zext i1 %34 to i32
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %b_1, label %b_35

b_5:                                              ; preds = %b_3
  br label %b_7

b_6:                                              ; preds = %b_34, %b_32, %b_28, %b_25, %b_24, %b_23, %b_14
  %37 = phi i32 [ %0, %b_23 ], [ %0, %b_14 ], [ %0, %b_24 ], [ %0, %b_25 ], [ %123, %b_28 ], [ %0, %b_32 ], [ %0, %b_34 ]
  %38 = phi i32 [ %1, %b_23 ], [ %62, %b_14 ], [ %62, %b_24 ], [ %115, %b_25 ], [ %124, %b_28 ], [ %46, %b_32 ], [ %174, %b_34 ]
  %39 = phi i32 [ %19, %b_23 ], [ %19, %b_14 ], [ %19, %b_24 ], [ %19, %b_25 ], [ %125, %b_28 ], [ %163, %b_32 ], [ %19, %b_34 ]
  %40 = phi i32 [ %23, %b_23 ], [ %23, %b_14 ], [ %23, %b_24 ], [ %56, %b_25 ], [ %126, %b_28 ], [ %96, %b_32 ], [ %96, %b_34 ]
  %41 = phi i32 [ 0, %b_23 ], [ 0, %b_14 ], [ %104, %b_24 ], [ %116, %b_25 ], [ %127, %b_28 ], [ %160, %b_32 ], [ 0, %b_34 ]
  %42 = phi i32 [ %20, %b_23 ], [ %20, %b_14 ], [ %20, %b_24 ], [ %20, %b_25 ], [ %128, %b_28 ], [ %20, %b_32 ], [ %20, %b_34 ]
  %43 = phi i32 [ %22, %b_23 ], [ %22, %b_14 ], [ %22, %b_24 ], [ %22, %b_25 ], [ %129, %b_28 ], [ %95, %b_32 ], [ %95, %b_34 ]
  %44 = phi i32 [ 0, %b_23 ], [ %66, %b_14 ], [ %66, %b_24 ], [ %66, %b_25 ], [ %130, %b_28 ], [ %66, %b_32 ], [ %66, %b_34 ]
  %45 = phi i32 [ 0, %b_23 ], [ %67, %b_14 ], [ %67, %b_24 ], [ %67, %b_25 ], [ %131, %b_28 ], [ %67, %b_32 ], [ %67, %b_34 ]
  br label %b_1

b_7:                                              ; preds = %b_5
  br label %b_9

b_8:                                              ; preds = %b_21
  call void @wasmf_internal_20(i32 %67, i32 %95)
  %46 = sub i32 %96, %19
  %47 = icmp uge i32 %46, 16
  %48 = zext i1 %47 to i32
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %b_32, label %b_33

b_9:                                              ; preds = %b_7
  br label %b_11

b_10:                                             ; preds = %b_19
  %50 = call i32 @get_i32(i32 1050908)
  %51 = add i32 %50, %23
  %52 = icmp ult i32 %51, %19
  %53 = zext i1 %52 to i32
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %b_4, label %b_26

b_11:                                             ; preds = %b_9
  br label %b_13

b_12:                                             ; preds = %b_18
  %55 = call i32 @get_i32(i32 1050912)
  %56 = add i32 %55, %23
  %57 = icmp ule i32 %56, %19
  %58 = zext i1 %57 to i32
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %b_4, label %b_25

b_13:                                             ; preds = %b_11
  %60 = and i32 %22, 3
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %b_15, label %b_16

b_14:                                             ; preds = %b_15
  %62 = sub i32 %23, %19
  %63 = icmp ult i32 %62, 16
  %64 = zext i1 %63 to i32
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %b_6, label %b_24

b_15:                                             ; preds = %b_13
  %66 = add i32 %0, -8
  %67 = add i32 %66, %23
  %68 = icmp uge i32 %23, %19
  %69 = zext i1 %68 to i32
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %b_14, label %b_18

b_16:                                             ; preds = %b_13
  br label %b_17

b_17:                                             ; preds = %b_16
  %71 = icmp ult i32 %19, 256
  %72 = zext i1 %71 to i32
  %73 = or i32 %19, 4
  %74 = icmp ult i32 %23, %73
  %75 = zext i1 %74 to i32
  %76 = or i32 %72, %75
  %77 = sub i32 %23, %19
  %78 = icmp uge i32 %77, 131073
  %79 = zext i1 %78 to i32
  %80 = or i32 %76, %79
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %b_4, label %b_23

b_18:                                             ; preds = %b_15
  %82 = call i32 @get_i32(i32 1050920)
  %83 = icmp eq i32 %82, %67
  %84 = zext i1 %83 to i32
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %b_12, label %b_19

b_19:                                             ; preds = %b_18
  %86 = call i32 @get_i32(i32 1050916)
  %87 = icmp eq i32 %86, %67
  %88 = zext i1 %87 to i32
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %b_10, label %b_20

b_20:                                             ; preds = %b_19
  %90 = add i32 %67, 4
  %91 = add i32 %90, 0
  %92 = call i32 @get_i32(i32 %91)
  %93 = and i32 %92, 2
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %b_4, label %b_21

b_21:                                             ; preds = %b_20
  %95 = and i32 %92, -8
  %96 = add i32 %95, %23
  %97 = icmp uge i32 %96, %19
  %98 = zext i1 %97 to i32
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %b_8, label %b_22

b_22:                                             ; preds = %b_21
  br label %b_4

b_23:                                             ; preds = %b_17
  br label %b_6

b_24:                                             ; preds = %b_14
  %100 = and i32 %22, 1
  %101 = or i32 %19, %100
  %102 = or i32 %101, 2
  %103 = add i32 %20, 0
  call void @set_i32(i32 %103, i32 %102)
  %104 = add i32 %19, %66
  %105 = or i32 %62, 3
  %106 = add i32 %104, 4
  call void @set_i32(i32 %106, i32 %105)
  %107 = add i32 %67, 4
  %108 = call i32 @get_i32(i32 %107)
  %109 = or i32 %108, 1
  %110 = add i32 %67, 4
  call void @set_i32(i32 %110, i32 %109)
  call void @wasmf_internal_11(i32 %104, i32 %62)
  br label %b_6

b_25:                                             ; preds = %b_12
  %111 = and i32 %22, 1
  %112 = or i32 %19, %111
  %113 = or i32 %112, 2
  %114 = add i32 %20, 0
  call void @set_i32(i32 %114, i32 %113)
  %115 = add i32 %19, %66
  %116 = sub i32 %56, %19
  %117 = or i32 %116, 1
  %118 = add i32 %115, 4
  call void @set_i32(i32 %118, i32 %117)
  call void @set_i32(i32 1050912, i32 %116)
  call void @set_i32(i32 1050920, i32 %115)
  br label %b_6

b_26:                                             ; preds = %b_10
  br label %b_27

b_27:                                             ; preds = %b_26
  %119 = sub i32 %51, %19
  %120 = icmp ule i32 %119, 15
  %121 = zext i1 %120 to i32
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %b_29, label %b_30

b_28:                                             ; preds = %b_31, %b_29
  %123 = phi i32 [ %0, %b_29 ], [ %0, %b_31 ]
  %124 = phi i32 [ 0, %b_29 ], [ %119, %b_31 ]
  %125 = phi i32 [ %19, %b_29 ], [ %148, %b_31 ]
  %126 = phi i32 [ %51, %b_29 ], [ %51, %b_31 ]
  %127 = phi i32 [ 0, %b_29 ], [ %145, %b_31 ]
  %128 = phi i32 [ %20, %b_29 ], [ %20, %b_31 ]
  %129 = phi i32 [ %22, %b_29 ], [ %22, %b_31 ]
  %130 = phi i32 [ %66, %b_29 ], [ %66, %b_31 ]
  %131 = phi i32 [ %67, %b_29 ], [ %67, %b_31 ]
  call void @set_i32(i32 1050916, i32 %127)
  call void @set_i32(i32 1050908, i32 %124)
  br label %b_6

b_29:                                             ; preds = %b_27
  %132 = and i32 %22, 1
  %133 = or i32 %132, %51
  %134 = or i32 %133, 2
  %135 = add i32 %20, 0
  call void @set_i32(i32 %135, i32 %134)
  %136 = add i32 %51, %66
  %137 = add i32 %136, 4
  %138 = call i32 @get_i32(i32 %137)
  %139 = or i32 %138, 1
  %140 = add i32 %136, 4
  call void @set_i32(i32 %140, i32 %139)
  br label %b_28

b_30:                                             ; preds = %b_27
  br label %b_31

b_31:                                             ; preds = %b_30
  %141 = and i32 %22, 1
  %142 = or i32 %19, %141
  %143 = or i32 %142, 2
  %144 = add i32 %20, 0
  call void @set_i32(i32 %144, i32 %143)
  %145 = add i32 %19, %66
  %146 = or i32 %119, 1
  %147 = add i32 %145, 4
  call void @set_i32(i32 %147, i32 %146)
  %148 = add i32 %51, %66
  %149 = add i32 %148, 0
  call void @set_i32(i32 %149, i32 %119)
  %150 = add i32 %148, 4
  %151 = call i32 @get_i32(i32 %150)
  %152 = and i32 %151, -2
  %153 = add i32 %148, 4
  call void @set_i32(i32 %153, i32 %152)
  br label %b_28

b_32:                                             ; preds = %b_8
  %154 = add i32 %20, 0
  %155 = call i32 @get_i32(i32 %154)
  %156 = and i32 %155, 1
  %157 = or i32 %19, %156
  %158 = or i32 %157, 2
  %159 = add i32 %20, 0
  call void @set_i32(i32 %159, i32 %158)
  %160 = add i32 %19, %66
  %161 = or i32 %46, 3
  %162 = add i32 %160, 4
  call void @set_i32(i32 %162, i32 %161)
  %163 = add i32 %96, %66
  %164 = add i32 %163, 4
  %165 = call i32 @get_i32(i32 %164)
  %166 = or i32 %165, 1
  %167 = add i32 %163, 4
  call void @set_i32(i32 %167, i32 %166)
  call void @wasmf_internal_11(i32 %160, i32 %46)
  br label %b_6

b_33:                                             ; preds = %b_8
  br label %b_34

b_34:                                             ; preds = %b_33
  %168 = add i32 %20, 0
  %169 = call i32 @get_i32(i32 %168)
  %170 = and i32 %169, 1
  %171 = or i32 %96, %170
  %172 = or i32 %171, 2
  %173 = add i32 %20, 0
  call void @set_i32(i32 %173, i32 %172)
  %174 = add i32 %96, %66
  %175 = add i32 %174, 4
  %176 = call i32 @get_i32(i32 %175)
  %177 = or i32 %176, 1
  %178 = add i32 %174, 4
  call void @set_i32(i32 %178, i32 %177)
  br label %b_6

b_35:                                             ; preds = %b_4
  %179 = add i32 %29, 0
  %180 = call i32 @get_i32(i32 %179)
  %181 = and i32 %180, 3
  %182 = icmp ne i32 %181, 0
  %183 = select i1 %182, i32 -4, i32 -8
  %184 = and i32 %180, -8
  %185 = add i32 %183, %184
  %186 = icmp ugt i32 %185, %25
  %187 = zext i1 %186 to i32
  %188 = icmp ne i32 %187, 0
  %189 = select i1 %188, i32 %25, i32 %185
  %190 = call i32 @wasmf_internal_53(i32 %33, i32 %24, i32 %189)
  call void @wasmf_internal_6(i32 %24)
  ret i32 %190
}

; Function Attrs: nounwind
define i32 @wasmf_internal_15(i32 %0, i32 %1, i32 %2, i64 %3, i32 %4, i32 %5, i32 %6) #1 {
entry:
  %7 = load i32, i32* @wasmg_internal_0, align 4
  %8 = sub i32 %7, 144
  store i32 %8, i32* @wasmg_internal_0, align 4
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 %10

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_24, %b_23, %b_14
  %9 = phi i32 [ %0, %b_14 ], [ %104, %b_23 ], [ %41, %b_24 ]
  %10 = phi i32 [ %64, %b_14 ], [ %111, %b_23 ], [ 2, %b_24 ]
  %11 = phi i32 [ %2, %b_14 ], [ %27, %b_23 ], [ %27, %b_24 ]
  %12 = phi i64 [ %3, %b_14 ], [ %28, %b_23 ], [ %28, %b_24 ]
  %13 = phi i32 [ %4, %b_14 ], [ %29, %b_23 ], [ %29, %b_24 ]
  %14 = phi i32 [ %5, %b_14 ], [ %30, %b_23 ], [ %30, %b_24 ]
  %15 = phi i32 [ %6, %b_14 ], [ %31, %b_23 ], [ %31, %b_24 ]
  %16 = phi i32 [ %8, %b_14 ], [ %32, %b_23 ], [ %32, %b_24 ]
  %17 = phi i32 [ 0, %b_14 ], [ %33, %b_23 ], [ %33, %b_24 ]
  %18 = phi i32 [ 0, %b_14 ], [ %34, %b_23 ], [ %34, %b_24 ]
  %19 = phi i32 [ 0, %b_14 ], [ %35, %b_23 ], [ %35, %b_24 ]
  %20 = phi i32 [ 0, %b_14 ], [ %36, %b_23 ], [ %36, %b_24 ]
  %21 = phi i32 [ 0, %b_14 ], [ %37, %b_23 ], [ %37, %b_24 ]
  %22 = phi i32 [ 0, %b_14 ], [ %38, %b_23 ], [ %38, %b_24 ]
  %23 = phi i64 [ 0, %b_14 ], [ %39, %b_23 ], [ %39, %b_24 ]
  %24 = add i32 %16, 144
  store i32 %24, i32* @wasmg_internal_0, align 4
  br label %exit

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_22
  call void @wasmf_internal_37(i32 64, i32 %31, i32 1048984)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_20
  call void @wasmf_internal_37(i32 %104, i32 128, i32 1048968)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_6:                                              ; preds = %b_4
  br label %b_8

b_7:                                              ; preds = %b_12
  call void @wasmf_internal_49(i32 1048749, i32 35, i32 1048784)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_8:                                              ; preds = %b_6
  br label %b_10

b_9:                                              ; preds = %b_19, %b_11
  %25 = phi i32 [ %84, %b_19 ], [ %0, %b_11 ]
  %26 = phi i32 [ %85, %b_19 ], [ %1, %b_11 ]
  %27 = phi i32 [ %86, %b_19 ], [ %2, %b_11 ]
  %28 = phi i64 [ %87, %b_19 ], [ %3, %b_11 ]
  %29 = phi i32 [ %88, %b_19 ], [ %4, %b_11 ]
  %30 = phi i32 [ %89, %b_19 ], [ %5, %b_11 ]
  %31 = phi i32 [ %90, %b_19 ], [ %6, %b_11 ]
  %32 = phi i32 [ %91, %b_19 ], [ %8, %b_11 ]
  %33 = phi i32 [ %92, %b_19 ], [ %60, %b_11 ]
  %34 = phi i32 [ %99, %b_19 ], [ %48, %b_11 ]
  %35 = phi i32 [ 96, %b_19 ], [ 64, %b_11 ]
  %36 = phi i32 [ %100, %b_19 ], [ %49, %b_11 ]
  %37 = phi i32 [ %96, %b_19 ], [ %67, %b_11 ]
  %38 = phi i32 [ %97, %b_19 ], [ %68, %b_11 ]
  %39 = phi i64 [ %98, %b_19 ], [ %71, %b_11 ]
  %40 = phi i32 [ %102, %b_19 ], [ %51, %b_11 ]
  %41 = call i32 @wasmf_internal_15(i32 %38, i32 %37, i32 %27, i64 %39, i32 %29, i32 %34, i32 %35)
  %42 = icmp ne i32 %40, 1
  %43 = zext i1 %42 to i32
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %b_20, label %b_21

b_10:                                             ; preds = %b_8
  %45 = icmp uge i32 %1, 1025
  %46 = zext i1 %45 to i32
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %b_12, label %b_13

b_11:                                             ; preds = %b_15
  %48 = add i32 %8, 72
  %49 = add i32 %8, 8
  %50 = add i32 %8, 8
  %51 = call i32 @wasmf_internal_15(i32 %0, i32 %60, i32 %2, i64 %3, i32 %4, i32 %50, i32 64)
  br label %b_9

b_12:                                             ; preds = %b_10
  %52 = add i32 %1, -1
  %53 = lshr i32 %52, 11
  %54 = call i32 @llvm.ctlz.i32(i32 %53, i1 false)
  %55 = urem i32 %54, 32
  %56 = lshr i32 -1, %55
  %57 = shl i32 %56, 10
  %58 = add i32 %57, 1024
  %59 = icmp ne i32 %53, 0
  %60 = select i1 %59, i32 %58, i32 1024
  %61 = icmp ugt i32 %60, %1
  %62 = zext i1 %61 to i32
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %b_7, label %b_15

b_13:                                             ; preds = %b_10
  br label %b_14

b_14:                                             ; preds = %b_13
  %64 = call i32 @wasmf_internal_10(i32 %0, i32 %1, i32 %2, i64 %3, i32 %4, i32 %5, i32 %6)
  br label %b_1

b_15:                                             ; preds = %b_12
  %65 = add i32 %8, 8
  %66 = call i32 @wasmf_internal_59(i32 %65, i32 128)
  %67 = sub i32 %1, %60
  %68 = add i32 %0, %60
  %69 = lshr i32 %60, 10
  %70 = zext i32 %69 to i64
  %71 = add i64 %70, %3
  %72 = icmp ne i32 %60, 1024
  %73 = zext i1 %72 to i32
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %b_11, label %b_16

b_16:                                             ; preds = %b_15
  %75 = add i32 %8, 136
  call void @set_i32(i32 %75, i32 %0)
  %76 = add i32 %8, 140
  call void @set_i8(i32 %76, i8 1)
  %77 = add i32 %8, 136
  %78 = add i32 %8, 8
  call void @wasmf_internal_16(i32 %77, i32 1, i32 %2, i64 %3, i32 %4, i32 %78, i32 32)
  %79 = add i32 %8, 140
  %80 = call i8 @get_i8(i32 %79)
  %81 = zext i8 %80 to i32
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %b_17, label %b_18

b_17:                                             ; preds = %b_16
  %83 = add i32 %8, 140
  call void @set_i8(i32 %83, i8 0)
  br label %b_19

b_18:                                             ; preds = %b_16
  br label %b_19

b_19:                                             ; preds = %b_18, %b_17
  %84 = phi i32 [ %81, %b_17 ], [ %81, %b_18 ]
  %85 = phi i32 [ %1, %b_17 ], [ %1, %b_18 ]
  %86 = phi i32 [ %2, %b_17 ], [ %2, %b_18 ]
  %87 = phi i64 [ %3, %b_17 ], [ %3, %b_18 ]
  %88 = phi i32 [ %4, %b_17 ], [ %4, %b_18 ]
  %89 = phi i32 [ %5, %b_17 ], [ %5, %b_18 ]
  %90 = phi i32 [ %6, %b_17 ], [ %6, %b_18 ]
  %91 = phi i32 [ %8, %b_17 ], [ %8, %b_18 ]
  %92 = phi i32 [ %60, %b_17 ], [ %60, %b_18 ]
  %93 = phi i32 [ 0, %b_17 ], [ 0, %b_18 ]
  %94 = phi i32 [ 0, %b_17 ], [ 0, %b_18 ]
  %95 = phi i32 [ 0, %b_17 ], [ 0, %b_18 ]
  %96 = phi i32 [ %67, %b_17 ], [ %67, %b_18 ]
  %97 = phi i32 [ %68, %b_17 ], [ %68, %b_18 ]
  %98 = phi i64 [ %71, %b_17 ], [ %71, %b_18 ]
  %99 = add i32 %91, 40
  %100 = add i32 %91, 8
  %101 = icmp ne i32 %84, 0
  %102 = zext i1 %101 to i32
  br label %b_9

b_20:                                             ; preds = %b_9
  %103 = add i32 %41, %40
  %104 = shl i32 %103, 5
  %105 = icmp uge i32 %104, 129
  %106 = zext i1 %105 to i32
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %b_5, label %b_23

b_21:                                             ; preds = %b_9
  br label %b_22

b_22:                                             ; preds = %b_21
  %108 = icmp ule i32 %31, 63
  %109 = zext i1 %108 to i32
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %b_3, label %b_24

b_23:                                             ; preds = %b_20
  %111 = call i32 @wasmf_internal_22(i32 %36, i32 %104, i32 %27, i32 %29, i32 %30, i32 %31)
  br label %b_1

b_24:                                             ; preds = %b_22
  %112 = add i32 %32, 8
  %113 = call i64 @get_i64(i32 %112)
  %114 = add i32 %30, 0
  call void @set_i64(i32 %114, i64 %113)
  %115 = add i32 %30, 56
  %116 = sub i32 %32, -64
  %117 = add i32 %116, 0
  %118 = call i64 @get_i64(i32 %117)
  %119 = add i32 %115, 0
  call void @set_i64(i32 %119, i64 %118)
  %120 = add i32 %30, 48
  %121 = add i32 %32, 56
  %122 = add i32 %121, 0
  %123 = call i64 @get_i64(i32 %122)
  %124 = add i32 %120, 0
  call void @set_i64(i32 %124, i64 %123)
  %125 = add i32 %30, 40
  %126 = add i32 %32, 48
  %127 = add i32 %126, 0
  %128 = call i64 @get_i64(i32 %127)
  %129 = add i32 %125, 0
  call void @set_i64(i32 %129, i64 %128)
  %130 = add i32 %30, 32
  %131 = add i32 %32, 40
  %132 = add i32 %131, 0
  %133 = call i64 @get_i64(i32 %132)
  %134 = add i32 %130, 0
  call void @set_i64(i32 %134, i64 %133)
  %135 = add i32 %30, 24
  %136 = add i32 %32, 32
  %137 = add i32 %136, 0
  %138 = call i64 @get_i64(i32 %137)
  %139 = add i32 %135, 0
  call void @set_i64(i32 %139, i64 %138)
  %140 = add i32 %30, 16
  %141 = add i32 %32, 24
  %142 = add i32 %141, 0
  %143 = call i64 @get_i64(i32 %142)
  %144 = add i32 %140, 0
  call void @set_i64(i32 %144, i64 %143)
  %145 = add i32 %30, 8
  %146 = add i32 %32, 16
  %147 = add i32 %146, 0
  %148 = call i64 @get_i64(i32 %147)
  %149 = add i32 %145, 0
  call void @set_i64(i32 %149, i64 %148)
  br label %b_1
}

; Function Attrs: nounwind
define void @wasmf_internal_16(i32 %0, i32 %1, i32 %2, i64 %3, i32 %4, i32 %5, i32 %6) #1 {
entry:
  %7 = load i32, i32* @wasmg_internal_0, align 4
  %8 = sub i32 %7, 32
  store i32 %8, i32* @wasmg_internal_0, align 4
  %9 = lshr i32 %6, 5
  %10 = icmp ult i32 %9, %1
  %11 = zext i1 %10 to i32
  %12 = icmp ne i32 %11, 0
  %13 = select i1 %12, i32 %9, i32 %1
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %b_0, label %b_1

exit:                                             ; preds = %b_2
  ret void

b_0:                                              ; preds = %entry
  %15 = add i32 %5, 28
  %16 = or i32 %4, 2
  %17 = or i32 %4, 1
  br label %b_3

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_4, %b_1
  %18 = phi i32 [ %102, %b_4 ], [ %0, %b_1 ]
  %19 = phi i32 [ %52, %b_4 ], [ %1, %b_1 ]
  %20 = phi i32 [ %37, %b_4 ], [ %2, %b_1 ]
  %21 = phi i64 [ %104, %b_4 ], [ %3, %b_1 ]
  %22 = phi i32 [ %39, %b_4 ], [ %4, %b_1 ]
  %23 = phi i32 [ %40, %b_4 ], [ %5, %b_1 ]
  %24 = phi i32 [ %103, %b_4 ], [ %9, %b_1 ]
  %25 = phi i32 [ %42, %b_4 ], [ %8, %b_1 ]
  %26 = phi i32 [ %105, %b_4 ], [ %13, %b_1 ]
  %27 = phi i32 [ %44, %b_4 ], [ 0, %b_1 ]
  %28 = phi i32 [ %53, %b_4 ], [ 0, %b_1 ]
  %29 = phi i32 [ %58, %b_4 ], [ 0, %b_1 ]
  %30 = phi i32 [ %63, %b_4 ], [ 0, %b_1 ]
  %31 = phi i64 [ %87, %b_4 ], [ 0, %b_1 ]
  %32 = phi i64 [ %89, %b_4 ], [ 0, %b_1 ]
  %33 = phi i64 [ %91, %b_4 ], [ 0, %b_1 ]
  %34 = add i32 %25, 32
  store i32 %34, i32* @wasmg_internal_0, align 4
  br label %exit

b_3:                                              ; preds = %b_3, %b_0
  %35 = phi i32 [ %0, %b_0 ], [ %102, %b_3 ]
  %36 = phi i32 [ %1, %b_0 ], [ %52, %b_3 ]
  %37 = phi i32 [ %2, %b_0 ], [ %37, %b_3 ]
  %38 = phi i64 [ %3, %b_0 ], [ %104, %b_3 ]
  %39 = phi i32 [ %4, %b_0 ], [ %39, %b_3 ]
  %40 = phi i32 [ %16, %b_0 ], [ %40, %b_3 ]
  %41 = phi i32 [ %15, %b_0 ], [ %103, %b_3 ]
  %42 = phi i32 [ %8, %b_0 ], [ %42, %b_3 ]
  %43 = phi i32 [ %13, %b_0 ], [ %105, %b_3 ]
  %44 = phi i32 [ %17, %b_0 ], [ %44, %b_3 ]
  %45 = phi i32 [ 0, %b_0 ], [ %53, %b_3 ]
  %46 = phi i32 [ 0, %b_0 ], [ %58, %b_3 ]
  %47 = phi i32 [ 0, %b_0 ], [ %63, %b_3 ]
  %48 = phi i64 [ 0, %b_0 ], [ %87, %b_3 ]
  %49 = phi i64 [ 0, %b_0 ], [ %89, %b_3 ]
  %50 = phi i64 [ 0, %b_0 ], [ %91, %b_3 ]
  %51 = add i32 %35, 0
  %52 = call i32 @get_i32(i32 %51)
  %53 = add i32 %42, 24
  %54 = add i32 %37, 24
  %55 = add i32 %54, 0
  %56 = call i64 @get_i64(i32 %55)
  %57 = add i32 %53, 0
  call void @set_i64(i32 %57, i64 %56)
  %58 = add i32 %42, 16
  %59 = add i32 %37, 16
  %60 = add i32 %59, 0
  %61 = call i64 @get_i64(i32 %60)
  %62 = add i32 %58, 0
  call void @set_i64(i32 %62, i64 %61)
  %63 = add i32 %42, 8
  %64 = add i32 %37, 8
  %65 = add i32 %64, 0
  %66 = call i64 @get_i64(i32 %65)
  %67 = add i32 %63, 0
  call void @set_i64(i32 %67, i64 %66)
  %68 = add i32 %37, 0
  %69 = call i64 @get_i64(i32 %68)
  %70 = add i32 %42, 0
  call void @set_i64(i32 %70, i64 %69)
  call void @wasmf_internal_3(i32 %42, i32 %52, i32 64, i64 %38, i32 %44)
  %71 = sub i32 %52, -64
  call void @wasmf_internal_3(i32 %42, i32 %71, i32 64, i64 %38, i32 %39)
  %72 = add i32 %52, 128
  call void @wasmf_internal_3(i32 %42, i32 %72, i32 64, i64 %38, i32 %39)
  %73 = add i32 %52, 192
  call void @wasmf_internal_3(i32 %42, i32 %73, i32 64, i64 %38, i32 %39)
  %74 = add i32 %52, 256
  call void @wasmf_internal_3(i32 %42, i32 %74, i32 64, i64 %38, i32 %39)
  %75 = add i32 %52, 320
  call void @wasmf_internal_3(i32 %42, i32 %75, i32 64, i64 %38, i32 %39)
  %76 = add i32 %52, 384
  call void @wasmf_internal_3(i32 %42, i32 %76, i32 64, i64 %38, i32 %39)
  %77 = add i32 %52, 448
  call void @wasmf_internal_3(i32 %42, i32 %77, i32 64, i64 %38, i32 %39)
  %78 = add i32 %52, 512
  call void @wasmf_internal_3(i32 %42, i32 %78, i32 64, i64 %38, i32 %39)
  %79 = add i32 %52, 576
  call void @wasmf_internal_3(i32 %42, i32 %79, i32 64, i64 %38, i32 %39)
  %80 = add i32 %52, 640
  call void @wasmf_internal_3(i32 %42, i32 %80, i32 64, i64 %38, i32 %39)
  %81 = add i32 %52, 704
  call void @wasmf_internal_3(i32 %42, i32 %81, i32 64, i64 %38, i32 %39)
  %82 = add i32 %52, 768
  call void @wasmf_internal_3(i32 %42, i32 %82, i32 64, i64 %38, i32 %39)
  %83 = add i32 %52, 832
  call void @wasmf_internal_3(i32 %42, i32 %83, i32 64, i64 %38, i32 %39)
  %84 = add i32 %52, 896
  call void @wasmf_internal_3(i32 %42, i32 %84, i32 64, i64 %38, i32 %39)
  %85 = add i32 %52, 960
  call void @wasmf_internal_3(i32 %42, i32 %85, i32 64, i64 %38, i32 %40)
  %86 = add i32 %63, 0
  %87 = call i64 @get_i64(i32 %86)
  %88 = add i32 %58, 0
  %89 = call i64 @get_i64(i32 %88)
  %90 = add i32 %42, 0
  %91 = call i64 @get_i64(i32 %90)
  %92 = add i32 %41, -4
  %93 = add i32 %53, 0
  %94 = call i64 @get_i64(i32 %93)
  %95 = add i32 %92, 0
  call void @set_i64(i32 %95, i64 %94)
  %96 = add i32 %41, -12
  %97 = add i32 %96, 0
  call void @set_i64(i32 %97, i64 %89)
  %98 = add i32 %41, -20
  %99 = add i32 %98, 0
  call void @set_i64(i32 %99, i64 %87)
  %100 = add i32 %41, -28
  %101 = add i32 %100, 0
  call void @set_i64(i32 %101, i64 %91)
  %102 = add i32 %35, 4
  %103 = add i32 %41, 32
  %104 = add i64 %38, 1
  %105 = add i32 %43, -1
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %b_3, label %b_5

b_4:                                              ; preds = %b_5
  br label %b_2

b_5:                                              ; preds = %b_3
  br label %b_4
}

; Function Attrs: nounwind
define i32 @wasmf_internal_17(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 16
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %0, 0
  %5 = call i32 @get_i32(i32 %4)
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 0

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_5, %b_3
  %6 = phi i32 [ %20, %b_5 ], [ %13, %b_3 ]
  %7 = phi i32 [ %21, %b_5 ], [ %14, %b_3 ]
  %8 = phi i32 [ %22, %b_5 ], [ %15, %b_3 ]
  %9 = phi i32 [ %23, %b_5 ], [ %16, %b_3 ]
  %10 = phi i32 [ %24, %b_5 ], [ %17, %b_3 ]
  %11 = phi i32 [ %25, %b_5 ], [ %18, %b_3 ]
  %12 = add i32 %8, 16
  store i32 %12, i32* @wasmg_internal_0, align 4
  br label %exit

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_18, %b_16, %b_11
  %13 = phi i32 [ %72, %b_16 ], [ %72, %b_18 ], [ %59, %b_11 ]
  %14 = phi i32 [ 3, %b_16 ], [ 4, %b_18 ], [ 2, %b_11 ]
  %15 = phi i32 [ %3, %b_16 ], [ %3, %b_18 ], [ %3, %b_11 ]
  %16 = phi i32 [ 0, %b_16 ], [ 0, %b_18 ], [ 0, %b_11 ]
  %17 = phi i32 [ %5, %b_16 ], [ %5, %b_18 ], [ %5, %b_11 ]
  %18 = phi i32 [ 0, %b_16 ], [ 0, %b_18 ], [ 0, %b_11 ]
  %19 = add i32 %13, %14
  call void @wasmf_internal_26(i32 %17, i32 %13, i32 %19)
  br label %b_1

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_31, %b_19
  %20 = phi i32 [ %65, %b_19 ], [ %145, %b_31 ]
  %21 = phi i32 [ %1, %b_19 ], [ %34, %b_31 ]
  %22 = phi i32 [ %3, %b_19 ], [ %35, %b_31 ]
  %23 = phi i32 [ 0, %b_19 ], [ %36, %b_31 ]
  %24 = phi i32 [ %5, %b_19 ], [ %37, %b_31 ]
  %25 = phi i32 [ %108, %b_19 ], [ %39, %b_31 ]
  %26 = add i32 %20, %25
  %27 = trunc i32 %21 to i8
  %28 = add i32 %26, 0
  call void @set_i8(i32 %28, i8 %27)
  %29 = add i32 %24, 8
  %30 = call i32 @get_i32(i32 %29)
  %31 = add i32 %30, 1
  %32 = add i32 %24, 8
  call void @set_i32(i32 %32, i32 %31)
  br label %b_1

b_6:                                              ; preds = %b_4
  br label %b_8

b_7:                                              ; preds = %b_29, %b_9
  %33 = phi i32 [ %65, %b_29 ], [ %41, %b_9 ]
  %34 = phi i32 [ %1, %b_29 ], [ %42, %b_9 ]
  %35 = phi i32 [ %3, %b_29 ], [ %43, %b_9 ]
  %36 = phi i32 [ %127, %b_29 ], [ %44, %b_9 ]
  %37 = phi i32 [ %5, %b_29 ], [ %45, %b_9 ]
  %38 = phi i32 [ %136, %b_29 ], [ %46, %b_9 ]
  %39 = phi i32 [ %140, %b_29 ], [ %47, %b_9 ]
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %b_31, label %b_32

b_8:                                              ; preds = %b_6
  br label %b_10

b_9:                                              ; preds = %b_28, %b_27
  %41 = phi i32 [ %65, %b_28 ], [ %65, %b_27 ]
  %42 = phi i32 [ %1, %b_28 ], [ %1, %b_27 ]
  %43 = phi i32 [ %3, %b_28 ], [ %3, %b_27 ]
  %44 = phi i32 [ %127, %b_28 ], [ %127, %b_27 ]
  %45 = phi i32 [ %5, %b_28 ], [ %5, %b_27 ]
  %46 = phi i32 [ %136, %b_28 ], [ %119, %b_27 ]
  %47 = call i32 @wasmf_internal_67(i32 %44, i32 1)
  br label %b_7

b_10:                                             ; preds = %b_8
  %48 = icmp uge i32 %1, 128
  %49 = zext i1 %48 to i32
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %b_12, label %b_13

b_11:                                             ; preds = %b_12
  %51 = and i32 %1, 63
  %52 = or i32 %51, 128
  %53 = trunc i32 %52 to i8
  %54 = add i32 %3, 13
  call void @set_i8(i32 %54, i8 %53)
  %55 = lshr i32 %1, 6
  %56 = or i32 %55, 192
  %57 = trunc i32 %56 to i8
  %58 = add i32 %3, 12
  call void @set_i8(i32 %58, i8 %57)
  %59 = add i32 %3, 12
  br label %b_3

b_12:                                             ; preds = %b_10
  %60 = add i32 %3, 12
  call void @set_i32(i32 %60, i32 0)
  %61 = icmp ult i32 %1, 2048
  %62 = zext i1 %61 to i32
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %b_11, label %b_15

b_13:                                             ; preds = %b_10
  br label %b_14

b_14:                                             ; preds = %b_13
  %64 = add i32 %5, 8
  %65 = call i32 @get_i32(i32 %64)
  %66 = add i32 %5, 4
  %67 = add i32 %66, 0
  %68 = call i32 @get_i32(i32 %67)
  %69 = icmp ne i32 %65, %68
  %70 = zext i1 %69 to i32
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %b_19, label %b_20

b_15:                                             ; preds = %b_12
  %72 = add i32 %3, 12
  %73 = icmp ult i32 %1, 65536
  %74 = zext i1 %73 to i32
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %b_16, label %b_17

b_16:                                             ; preds = %b_15
  %76 = and i32 %1, 63
  %77 = or i32 %76, 128
  %78 = trunc i32 %77 to i8
  %79 = add i32 %3, 14
  call void @set_i8(i32 %79, i8 %78)
  %80 = lshr i32 %1, 12
  %81 = or i32 %80, 224
  %82 = trunc i32 %81 to i8
  %83 = add i32 %3, 12
  call void @set_i8(i32 %83, i8 %82)
  %84 = lshr i32 %1, 6
  %85 = and i32 %84, 63
  %86 = or i32 %85, 128
  %87 = trunc i32 %86 to i8
  %88 = add i32 %3, 13
  call void @set_i8(i32 %88, i8 %87)
  br label %b_3

b_17:                                             ; preds = %b_15
  br label %b_18

b_18:                                             ; preds = %b_17
  %89 = and i32 %1, 63
  %90 = or i32 %89, 128
  %91 = trunc i32 %90 to i8
  %92 = add i32 %3, 15
  call void @set_i8(i32 %92, i8 %91)
  %93 = lshr i32 %1, 18
  %94 = or i32 %93, 240
  %95 = trunc i32 %94 to i8
  %96 = add i32 %3, 12
  call void @set_i8(i32 %96, i8 %95)
  %97 = lshr i32 %1, 6
  %98 = and i32 %97, 63
  %99 = or i32 %98, 128
  %100 = trunc i32 %99 to i8
  %101 = add i32 %3, 14
  call void @set_i8(i32 %101, i8 %100)
  %102 = lshr i32 %1, 12
  %103 = and i32 %102, 63
  %104 = or i32 %103, 128
  %105 = trunc i32 %104 to i8
  %106 = add i32 %3, 13
  call void @set_i8(i32 %106, i8 %105)
  br label %b_3

b_19:                                             ; preds = %b_14
  %107 = add i32 %5, 0
  %108 = call i32 @get_i32(i32 %107)
  br label %b_5

b_20:                                             ; preds = %b_14
  br label %b_21

b_21:                                             ; preds = %b_20
  br label %b_22

b_22:                                             ; preds = %b_21
  %109 = add i32 %65, 1
  %110 = icmp ult i32 %109, %65
  %111 = zext i1 %110 to i32
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %b_23, label %b_24

b_23:                                             ; preds = %b_30, %b_25, %b_22
  %113 = phi i32 [ %65, %b_22 ], [ %65, %b_25 ], [ %65, %b_30 ]
  %114 = phi i32 [ %1, %b_22 ], [ %1, %b_25 ], [ %1, %b_30 ]
  %115 = phi i32 [ %3, %b_22 ], [ %3, %b_25 ], [ %3, %b_30 ]
  %116 = phi i32 [ %109, %b_22 ], [ %127, %b_25 ], [ %127, %b_30 ]
  %117 = phi i32 [ %5, %b_22 ], [ %5, %b_25 ], [ %5, %b_30 ]
  %118 = phi i32 [ 0, %b_22 ], [ %119, %b_25 ], [ %119, %b_30 ]
  call void @wasmf_internal_70()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_24:                                             ; preds = %b_22
  %119 = shl i32 %65, 1
  %120 = icmp ugt i32 %119, %109
  %121 = zext i1 %120 to i32
  %122 = icmp ne i32 %121, 0
  %123 = select i1 %122, i32 %119, i32 %109
  %124 = icmp ugt i32 %123, 8
  %125 = zext i1 %124 to i32
  %126 = icmp ne i32 %125, 0
  %127 = select i1 %126, i32 %123, i32 8
  %128 = icmp ne i32 %65, 0
  br i1 %128, label %b_25, label %b_26

b_25:                                             ; preds = %b_24
  %129 = icmp slt i32 %127, 0
  %130 = zext i1 %129 to i32
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %b_23, label %b_28

b_26:                                             ; preds = %b_24
  br label %b_27

b_27:                                             ; preds = %b_26
  %132 = icmp sge i32 %127, 0
  %133 = zext i1 %132 to i32
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %b_9, label %b_30

b_28:                                             ; preds = %b_25
  %135 = add i32 %5, 0
  %136 = call i32 @get_i32(i32 %135)
  %137 = icmp eq i32 0, %136
  %138 = zext i1 %137 to i32
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %b_9, label %b_29

b_29:                                             ; preds = %b_28
  %140 = call i32 @wasmf_internal_63(i32 %136, i32 %65, i32 1, i32 %127)
  br label %b_7

b_30:                                             ; preds = %b_27
  br label %b_23

b_31:                                             ; preds = %b_7
  %141 = add i32 %37, 0
  call void @set_i32(i32 %141, i32 %39)
  %142 = add i32 %37, 4
  %143 = add i32 %142, 0
  call void @set_i32(i32 %143, i32 %36)
  %144 = add i32 %37, 8
  %145 = call i32 @get_i32(i32 %144)
  br label %b_5

b_32:                                             ; preds = %b_7
  br label %b_33

b_33:                                             ; preds = %b_32
  call void @wasmf_internal_76(i32 %36, i32 1)
  call void @awsm_abi__trap_unreachable()
  unreachable
}

; Function Attrs: nounwind
define i32 @wasmf_internal_18(i32 %0, i32 %1) #1 {
entry:
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 %13

b_0:                                              ; preds = %entry
  %2 = icmp ugt i32 %0, 16
  %3 = zext i1 %2 to i32
  %4 = icmp ne i32 %3, 0
  %5 = select i1 %4, i32 %0, i32 16
  %6 = sub i32 -65587, %5
  %7 = icmp ule i32 %6, %1
  %8 = zext i1 %7 to i32
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %b_1, label %b_2

b_1:                                              ; preds = %b_13, %b_2, %b_0
  %10 = phi i32 [ %5, %b_0 ], [ %5, %b_2 ], [ %93, %b_13 ]
  %11 = phi i32 [ %1, %b_0 ], [ %1, %b_2 ], [ %94, %b_13 ]
  %12 = phi i32 [ 0, %b_0 ], [ %25, %b_2 ], [ %95, %b_13 ]
  %13 = phi i32 [ 0, %b_0 ], [ 0, %b_2 ], [ %100, %b_13 ]
  %14 = phi i32 [ 0, %b_0 ], [ %22, %b_2 ], [ %97, %b_13 ]
  %15 = phi i32 [ 0, %b_0 ], [ 0, %b_2 ], [ %98, %b_13 ]
  %16 = phi i32 [ 0, %b_0 ], [ 0, %b_2 ], [ %99, %b_13 ]
  br label %exit

b_2:                                              ; preds = %b_0
  %17 = add i32 %1, 11
  %18 = and i32 %17, -8
  %19 = icmp ult i32 %1, 11
  %20 = zext i1 %19 to i32
  %21 = icmp ne i32 %20, 0
  %22 = select i1 %21, i32 16, i32 %18
  %23 = add i32 %5, %22
  %24 = add i32 %23, 12
  %25 = call i32 @wasmf_internal_1(i32 %24)
  %26 = icmp eq i32 0, %25
  %27 = zext i1 %26 to i32
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %b_1, label %b_3

b_3:                                              ; preds = %b_2
  %29 = add i32 %25, -8
  br label %b_4

b_4:                                              ; preds = %b_3
  %30 = add i32 %5, -1
  %31 = and i32 %30, %25
  %32 = icmp eq i32 0, %31
  %33 = zext i1 %32 to i32
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %b_6, label %b_7

b_5:                                              ; preds = %b_11, %b_9, %b_6
  %35 = phi i32 [ %29, %b_6 ], [ %55, %b_9 ], [ %55, %b_11 ]
  %36 = phi i32 [ %29, %b_6 ], [ %29, %b_9 ], [ %82, %b_11 ]
  %37 = phi i32 [ %25, %b_6 ], [ %56, %b_9 ], [ %56, %b_11 ]
  %38 = phi i32 [ %30, %b_6 ], [ %66, %b_9 ], [ %57, %b_11 ]
  %39 = phi i32 [ %22, %b_6 ], [ %22, %b_9 ], [ %22, %b_11 ]
  %40 = phi i32 [ 0, %b_6 ], [ %42, %b_9 ], [ %42, %b_11 ]
  %41 = phi i32 [ 0, %b_6 ], [ %44, %b_9 ], [ %44, %b_11 ]
  br label %b_12

b_6:                                              ; preds = %b_4
  br label %b_5

b_7:                                              ; preds = %b_4
  br label %b_8

b_8:                                              ; preds = %b_7
  %42 = add i32 %25, -4
  %43 = add i32 %42, 0
  %44 = call i32 @get_i32(i32 %43)
  %45 = and i32 %44, -8
  %46 = add i32 %25, %30
  %47 = sub i32 0, %5
  %48 = and i32 %46, %47
  %49 = add i32 %48, -8
  %50 = add i32 %5, %49
  %51 = sub i32 %49, %29
  %52 = icmp ugt i32 %51, 16
  %53 = zext i1 %52 to i32
  %54 = icmp ne i32 %53, 0
  %55 = select i1 %54, i32 %49, i32 %50
  %56 = sub i32 %55, %29
  %57 = sub i32 %45, %56
  %58 = and i32 %44, 3
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %b_9, label %b_10

b_9:                                              ; preds = %b_8
  %60 = add i32 %55, 4
  %61 = call i32 @get_i32(i32 %60)
  %62 = and i32 %61, 1
  %63 = or i32 %57, %62
  %64 = or i32 %63, 2
  %65 = add i32 %55, 4
  call void @set_i32(i32 %65, i32 %64)
  %66 = add i32 %55, %57
  %67 = add i32 %66, 4
  %68 = call i32 @get_i32(i32 %67)
  %69 = or i32 %68, 1
  %70 = add i32 %66, 4
  call void @set_i32(i32 %70, i32 %69)
  %71 = add i32 %42, 0
  %72 = call i32 @get_i32(i32 %71)
  %73 = and i32 %72, 1
  %74 = or i32 %56, %73
  %75 = or i32 %74, 2
  %76 = add i32 %42, 0
  call void @set_i32(i32 %76, i32 %75)
  %77 = add i32 %55, 4
  %78 = call i32 @get_i32(i32 %77)
  %79 = or i32 %78, 1
  %80 = add i32 %55, 4
  call void @set_i32(i32 %80, i32 %79)
  call void @wasmf_internal_11(i32 %29, i32 %56)
  br label %b_5

b_10:                                             ; preds = %b_8
  br label %b_11

b_11:                                             ; preds = %b_10
  %81 = add i32 %29, 0
  %82 = call i32 @get_i32(i32 %81)
  %83 = add i32 %55, 4
  call void @set_i32(i32 %83, i32 %57)
  %84 = add i32 %82, %56
  %85 = add i32 %55, 0
  call void @set_i32(i32 %85, i32 %84)
  br label %b_5

b_12:                                             ; preds = %b_5
  %86 = add i32 %35, 4
  %87 = add i32 %86, 0
  %88 = call i32 @get_i32(i32 %87)
  %89 = and i32 %88, 3
  %90 = icmp eq i32 0, %89
  %91 = zext i1 %90 to i32
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %b_13, label %b_14

b_13:                                             ; preds = %b_15, %b_14, %b_12
  %93 = phi i32 [ %35, %b_12 ], [ %35, %b_14 ], [ %35, %b_15 ]
  %94 = phi i32 [ %88, %b_12 ], [ %88, %b_14 ], [ %111, %b_15 ]
  %95 = phi i32 [ %37, %b_12 ], [ %101, %b_14 ], [ %115, %b_15 ]
  %96 = phi i32 [ %38, %b_12 ], [ %38, %b_14 ], [ %38, %b_15 ]
  %97 = phi i32 [ %39, %b_12 ], [ %39, %b_14 ], [ %112, %b_15 ]
  %98 = phi i32 [ %40, %b_12 ], [ %40, %b_14 ], [ %40, %b_15 ]
  %99 = phi i32 [ %41, %b_12 ], [ %41, %b_14 ], [ %41, %b_15 ]
  %100 = add i32 %93, 8
  br label %b_1

b_14:                                             ; preds = %b_12
  %101 = and i32 %88, -8
  %102 = add i32 %39, 16
  %103 = icmp ule i32 %101, %102
  %104 = zext i1 %103 to i32
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %b_13, label %b_15

b_15:                                             ; preds = %b_14
  %106 = add i32 %35, 4
  %107 = and i32 %88, 1
  %108 = or i32 %39, %107
  %109 = or i32 %108, 2
  %110 = add i32 %106, 0
  call void @set_i32(i32 %110, i32 %109)
  %111 = add i32 %35, %39
  %112 = sub i32 %101, %39
  %113 = or i32 %112, 3
  %114 = add i32 %111, 4
  call void @set_i32(i32 %114, i32 %113)
  %115 = add i32 %35, %101
  %116 = add i32 %115, 4
  %117 = call i32 @get_i32(i32 %116)
  %118 = or i32 %117, 1
  %119 = add i32 %115, 4
  call void @set_i32(i32 %119, i32 %118)
  call void @wasmf_internal_11(i32 %111, i32 %112)
  br label %b_13
}

; Function Attrs: nounwind
define void @wasmf_internal_19(i32 %0, i32 %1, i32 %2, i32 %3, i64 %4, i32 %5) #1 {
entry:
  %6 = load i32, i32* @wasmg_internal_0, align 4
  %7 = sub i32 %6, 96
  store i32 %7, i32* @wasmg_internal_0, align 4
  %8 = add i32 %7, 56
  %9 = add i32 %8, 0
  call void @set_i64(i32 %9, i64 0)
  %10 = add i32 %7, 48
  %11 = add i32 %10, 0
  call void @set_i64(i32 %11, i64 0)
  %12 = add i32 %7, 40
  %13 = add i32 %12, 0
  call void @set_i64(i32 %13, i64 0)
  %14 = add i32 %7, 32
  %15 = add i32 %14, 0
  call void @set_i64(i32 %15, i64 0)
  %16 = add i32 %7, 24
  %17 = add i32 %16, 0
  call void @set_i64(i32 %17, i64 0)
  %18 = add i32 %7, 16
  %19 = add i32 %18, 0
  call void @set_i64(i32 %19, i64 0)
  %20 = add i32 %7, 8
  %21 = add i32 %20, 0
  call void @set_i64(i32 %21, i64 0)
  %22 = add i32 %7, 0
  call void @set_i64(i32 %22, i64 0)
  %23 = call i32 @wasmf_internal_15(i32 %1, i32 %2, i32 %3, i64 %4, i32 %5, i32 %7, i32 64)
  %24 = add i32 %7, 88
  %25 = add i32 %24, 0
  call void @set_i64(i32 %25, i64 0)
  %26 = add i32 %7, 80
  %27 = add i32 %26, 0
  call void @set_i64(i32 %27, i64 0)
  %28 = add i32 %7, 72
  %29 = add i32 %28, 0
  call void @set_i64(i32 %29, i64 0)
  %30 = add i32 %7, 64
  call void @set_i64(i32 %30, i64 0)
  br label %b_0

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_12
  call void @wasmf_internal_37(i32 %100, i32 32, i32 1049032)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_11
  call void @wasmf_internal_37(i32 %100, i32 64, i32 1049016)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_4:                                              ; preds = %b_2
  %31 = icmp uge i32 %23, 3
  %32 = zext i1 %31 to i32
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %b_6, label %b_7

b_5:                                              ; preds = %b_9
  call void @wasmf_internal_37(i32 %94, i32 64, i32 1049000)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_6:                                              ; preds = %b_4
  br label %b_9

b_7:                                              ; preds = %b_4
  br label %b_8

b_8:                                              ; preds = %b_10, %b_7
  %34 = phi i32 [ %80, %b_10 ], [ %0, %b_7 ]
  %35 = phi i32 [ %99, %b_10 ], [ %23, %b_7 ]
  %36 = phi i32 [ %100, %b_10 ], [ %2, %b_7 ]
  %37 = phi i32 [ %83, %b_10 ], [ %3, %b_7 ]
  %38 = phi i64 [ %84, %b_10 ], [ %4, %b_7 ]
  %39 = phi i32 [ %85, %b_10 ], [ %5, %b_7 ]
  %40 = phi i32 [ %86, %b_10 ], [ %7, %b_7 ]
  %41 = phi i32 [ %87, %b_10 ], [ %8, %b_7 ]
  %42 = phi i32 [ %88, %b_10 ], [ %10, %b_7 ]
  %43 = phi i32 [ %89, %b_10 ], [ %12, %b_7 ]
  %44 = phi i32 [ %90, %b_10 ], [ %14, %b_7 ]
  %45 = phi i32 [ %91, %b_10 ], [ %16, %b_7 ]
  %46 = phi i32 [ %92, %b_10 ], [ %18, %b_7 ]
  %47 = phi i32 [ %93, %b_10 ], [ %20, %b_7 ]
  %48 = add i32 %40, 0
  %49 = call i64 @get_i64(i32 %48)
  %50 = add i32 %34, 0
  call void @set_i64(i32 %50, i64 %49)
  %51 = add i32 %34, 56
  %52 = add i32 %41, 0
  %53 = call i64 @get_i64(i32 %52)
  %54 = add i32 %51, 0
  call void @set_i64(i32 %54, i64 %53)
  %55 = add i32 %34, 48
  %56 = add i32 %42, 0
  %57 = call i64 @get_i64(i32 %56)
  %58 = add i32 %55, 0
  call void @set_i64(i32 %58, i64 %57)
  %59 = add i32 %34, 40
  %60 = add i32 %43, 0
  %61 = call i64 @get_i64(i32 %60)
  %62 = add i32 %59, 0
  call void @set_i64(i32 %62, i64 %61)
  %63 = add i32 %34, 32
  %64 = add i32 %44, 0
  %65 = call i64 @get_i64(i32 %64)
  %66 = add i32 %63, 0
  call void @set_i64(i32 %66, i64 %65)
  %67 = add i32 %34, 24
  %68 = add i32 %45, 0
  %69 = call i64 @get_i64(i32 %68)
  %70 = add i32 %67, 0
  call void @set_i64(i32 %70, i64 %69)
  %71 = add i32 %34, 16
  %72 = add i32 %46, 0
  %73 = call i64 @get_i64(i32 %72)
  %74 = add i32 %71, 0
  call void @set_i64(i32 %74, i64 %73)
  %75 = add i32 %34, 8
  %76 = add i32 %47, 0
  %77 = call i64 @get_i64(i32 %76)
  %78 = add i32 %75, 0
  call void @set_i64(i32 %78, i64 %77)
  %79 = add i32 %40, 96
  store i32 %79, i32* @wasmg_internal_0, align 4
  ret void

b_9:                                              ; preds = %b_13, %b_6
  %80 = phi i32 [ %0, %b_6 ], [ %80, %b_13 ]
  %81 = phi i32 [ %23, %b_6 ], [ %99, %b_13 ]
  %82 = phi i32 [ %2, %b_6 ], [ %100, %b_13 ]
  %83 = phi i32 [ %3, %b_6 ], [ %83, %b_13 ]
  %84 = phi i64 [ %4, %b_6 ], [ %84, %b_13 ]
  %85 = phi i32 [ %5, %b_6 ], [ %85, %b_13 ]
  %86 = phi i32 [ %7, %b_6 ], [ %86, %b_13 ]
  %87 = phi i32 [ %8, %b_6 ], [ %87, %b_13 ]
  %88 = phi i32 [ %10, %b_6 ], [ %88, %b_13 ]
  %89 = phi i32 [ %12, %b_6 ], [ %89, %b_13 ]
  %90 = phi i32 [ %14, %b_6 ], [ %90, %b_13 ]
  %91 = phi i32 [ %16, %b_6 ], [ %91, %b_13 ]
  %92 = phi i32 [ %18, %b_6 ], [ %92, %b_13 ]
  %93 = phi i32 [ %20, %b_6 ], [ %93, %b_13 ]
  %94 = shl i32 %81, 5
  %95 = icmp uge i32 %94, 65
  %96 = zext i1 %95 to i32
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %b_5, label %b_11

b_10:                                             ; preds = %b_14
  br label %b_8

b_11:                                             ; preds = %b_9
  %98 = sub i32 %86, -64
  %99 = call i32 @wasmf_internal_22(i32 %86, i32 %94, i32 %83, i32 %85, i32 %98, i32 32)
  %100 = shl i32 %99, 5
  %101 = icmp uge i32 %100, 65
  %102 = zext i1 %101 to i32
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %b_3, label %b_12

b_12:                                             ; preds = %b_11
  %104 = icmp uge i32 %100, 33
  %105 = zext i1 %104 to i32
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %b_1, label %b_13

b_13:                                             ; preds = %b_12
  %107 = sub i32 %86, -64
  %108 = call i32 @wasmf_internal_53(i32 %86, i32 %107, i32 %100)
  %109 = icmp ugt i32 %99, 2
  %110 = zext i1 %109 to i32
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %b_9, label %b_14

b_14:                                             ; preds = %b_13
  br label %b_10
}

; Function Attrs: nounwind
define void @wasmf_internal_20(i32 %0, i32 %1) #1 {
entry:
  br label %b_0

exit:                                             ; preds = %b_1
  ret void

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_33, %b_32, %b_29, %b_22, %b_8
  %2 = phi i32 [ %33, %b_8 ], [ %33, %b_22 ], [ %29, %b_29 ], [ %130, %b_32 ], [ %130, %b_33 ]
  %3 = phi i32 [ %34, %b_8 ], [ %90, %b_22 ], [ %1, %b_29 ], [ %123, %b_32 ], [ %123, %b_33 ]
  %4 = phi i32 [ %35, %b_8 ], [ %35, %b_22 ], [ %26, %b_29 ], [ %124, %b_32 ], [ %124, %b_33 ]
  %5 = phi i32 [ %36, %b_8 ], [ %36, %b_22 ], [ 0, %b_29 ], [ %125, %b_32 ], [ %125, %b_33 ]
  %6 = phi i32 [ %37, %b_8 ], [ %37, %b_22 ], [ 0, %b_29 ], [ %126, %b_32 ], [ %126, %b_33 ]
  %7 = phi i32 [ %38, %b_8 ], [ %38, %b_22 ], [ 0, %b_29 ], [ %127, %b_32 ], [ %127, %b_33 ]
  br label %exit

b_2:                                              ; preds = %b_0
  %8 = icmp uge i32 %1, 256
  %9 = zext i1 %8 to i32
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %b_4, label %b_5

b_3:                                              ; preds = %b_25, %b_24
  %11 = phi i32 [ %33, %b_25 ], [ %33, %b_24 ]
  %12 = phi i32 [ %90, %b_25 ], [ %90, %b_24 ]
  %13 = phi i32 [ %35, %b_25 ], [ %35, %b_24 ]
  %14 = phi i32 [ %36, %b_25 ], [ %36, %b_24 ]
  %15 = phi i32 [ %37, %b_25 ], [ %37, %b_24 ]
  %16 = phi i32 [ %38, %b_25 ], [ %38, %b_24 ]
  %17 = add i32 %13, 24
  call void @set_i32(i32 %17, i32 %15)
  %18 = add i32 %11, 16
  %19 = call i32 @get_i32(i32 %18)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %b_30, label %b_31

b_4:                                              ; preds = %b_2
  %21 = add i32 %0, 24
  %22 = add i32 %21, 0
  %23 = call i32 @get_i32(i32 %22)
  br label %b_7

b_5:                                              ; preds = %b_2
  br label %b_6

b_6:                                              ; preds = %b_5
  %24 = add i32 %0, 12
  %25 = add i32 %24, 0
  %26 = call i32 @get_i32(i32 %25)
  %27 = add i32 %0, 8
  %28 = add i32 %27, 0
  %29 = call i32 @get_i32(i32 %28)
  %30 = icmp ne i32 %26, %29
  %31 = zext i1 %30 to i32
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %b_27, label %b_28

b_7:                                              ; preds = %b_4
  br label %b_9

b_8:                                              ; preds = %b_16, %b_14, %b_13
  %33 = phi i32 [ %0, %b_14 ], [ %0, %b_13 ], [ %79, %b_16 ]
  %34 = phi i32 [ %57, %b_14 ], [ %60, %b_13 ], [ %80, %b_16 ]
  %35 = phi i32 [ 0, %b_14 ], [ %43, %b_13 ], [ %81, %b_16 ]
  %36 = phi i32 [ %52, %b_14 ], [ 0, %b_13 ], [ %82, %b_16 ]
  %37 = phi i32 [ %23, %b_14 ], [ %23, %b_13 ], [ %83, %b_16 ]
  %38 = phi i32 [ 0, %b_14 ], [ 0, %b_13 ], [ %84, %b_16 ]
  %39 = icmp eq i32 0, %37
  %40 = zext i1 %39 to i32
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %b_1, label %b_21

b_9:                                              ; preds = %b_7
  %42 = add i32 %0, 12
  %43 = call i32 @get_i32(i32 %42)
  %44 = icmp eq i32 %0, %43
  %45 = zext i1 %44 to i32
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %b_11, label %b_12

b_10:                                             ; preds = %b_11
  %47 = add i32 %0, 16
  %48 = icmp ne i32 %52, 0
  %49 = select i1 %48, i32 %50, i32 %47
  br label %b_15

b_11:                                             ; preds = %b_9
  %50 = add i32 %0, 20
  %51 = add i32 %50, 0
  %52 = call i32 @get_i32(i32 %51)
  %53 = icmp ne i32 %52, 0
  %54 = select i1 %53, i32 20, i32 16
  %55 = add i32 %0, %54
  %56 = add i32 %55, 0
  %57 = call i32 @get_i32(i32 %56)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %b_10, label %b_14

b_12:                                             ; preds = %b_9
  br label %b_13

b_13:                                             ; preds = %b_12
  %59 = add i32 %0, 8
  %60 = call i32 @get_i32(i32 %59)
  %61 = add i32 %60, 12
  call void @set_i32(i32 %61, i32 %43)
  %62 = add i32 %43, 8
  call void @set_i32(i32 %62, i32 %60)
  br label %b_8

b_14:                                             ; preds = %b_11
  br label %b_8

b_15:                                             ; preds = %b_19, %b_10
  %63 = phi i32 [ %0, %b_10 ], [ %79, %b_19 ]
  %64 = phi i32 [ %57, %b_10 ], [ %80, %b_19 ]
  %65 = phi i32 [ %50, %b_10 ], [ %81, %b_19 ]
  %66 = phi i32 [ %49, %b_10 ], [ %82, %b_19 ]
  %67 = phi i32 [ %23, %b_10 ], [ %83, %b_19 ]
  %68 = phi i32 [ 0, %b_10 ], [ %84, %b_19 ]
  %69 = add i32 %64, 20
  %70 = add i32 %69, 0
  %71 = call i32 @get_i32(i32 %70)
  %72 = icmp eq i32 0, %71
  %73 = zext i1 %72 to i32
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %b_17, label %b_18

b_16:                                             ; preds = %b_20
  %75 = add i32 %84, 0
  call void @set_i32(i32 %75, i32 0)
  br label %b_8

b_17:                                             ; preds = %b_15
  %76 = add i32 %64, 16
  %77 = add i32 %64, 16
  %78 = call i32 @get_i32(i32 %77)
  br label %b_19

b_18:                                             ; preds = %b_15
  br label %b_19

b_19:                                             ; preds = %b_18, %b_17
  %79 = phi i32 [ %63, %b_17 ], [ %63, %b_18 ]
  %80 = phi i32 [ %78, %b_17 ], [ %71, %b_18 ]
  %81 = phi i32 [ %64, %b_17 ], [ %64, %b_18 ]
  %82 = phi i32 [ %76, %b_17 ], [ %69, %b_18 ]
  %83 = phi i32 [ %67, %b_17 ], [ %67, %b_18 ]
  %84 = phi i32 [ %66, %b_17 ], [ %66, %b_18 ]
  %85 = icmp ne i32 %80, 0
  br i1 %85, label %b_15, label %b_20

b_20:                                             ; preds = %b_19
  br label %b_16

b_21:                                             ; preds = %b_8
  %86 = add i32 %33, 28
  %87 = add i32 %86, 0
  %88 = call i32 @get_i32(i32 %87)
  %89 = shl i32 %88, 2
  %90 = add i32 %89, 1050780
  %91 = add i32 %90, 0
  %92 = call i32 @get_i32(i32 %91)
  %93 = icmp ne i32 %33, %92
  %94 = zext i1 %93 to i32
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %b_22, label %b_23

b_22:                                             ; preds = %b_21
  %96 = add i32 %37, 16
  %97 = call i32 @get_i32(i32 %96)
  %98 = icmp eq i32 %97, %33
  %99 = zext i1 %98 to i32
  %100 = icmp ne i32 %99, 0
  %101 = select i1 %100, i32 16, i32 20
  %102 = add i32 %37, %101
  %103 = add i32 %102, 0
  call void @set_i32(i32 %103, i32 %35)
  %104 = icmp eq i32 0, %35
  %105 = zext i1 %104 to i32
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %b_1, label %b_25

b_23:                                             ; preds = %b_21
  br label %b_24

b_24:                                             ; preds = %b_23
  %107 = add i32 %90, 0
  call void @set_i32(i32 %107, i32 %35)
  %108 = icmp ne i32 %35, 0
  br i1 %108, label %b_3, label %b_26

b_25:                                             ; preds = %b_22
  br label %b_3

b_26:                                             ; preds = %b_24
  %109 = call i32 @get_i32(i32 1050512)
  %110 = add i32 %33, 28
  %111 = call i32 @get_i32(i32 %110)
  %112 = call i32 @rotl_u32(i32 -2, i32 %111)
  %113 = and i32 %109, %112
  call void @set_i32(i32 1050512, i32 %113)
  ret void

b_27:                                             ; preds = %b_6
  %114 = add i32 %29, 12
  call void @set_i32(i32 %114, i32 %26)
  %115 = add i32 %26, 8
  call void @set_i32(i32 %115, i32 %29)
  ret void

b_28:                                             ; preds = %b_6
  br label %b_29

b_29:                                             ; preds = %b_28
  %116 = call i32 @get_i32(i32 1050508)
  %117 = lshr i32 %1, 3
  %118 = call i32 @rotl_u32(i32 -2, i32 %117)
  %119 = and i32 %116, %118
  call void @set_i32(i32 1050508, i32 %119)
  br label %b_1

b_30:                                             ; preds = %b_3
  %120 = add i32 %13, 16
  call void @set_i32(i32 %120, i32 %19)
  %121 = add i32 %19, 24
  call void @set_i32(i32 %121, i32 %13)
  br label %b_32

b_31:                                             ; preds = %b_3
  br label %b_32

b_32:                                             ; preds = %b_31, %b_30
  %122 = phi i32 [ %11, %b_30 ], [ %11, %b_31 ]
  %123 = phi i32 [ %19, %b_30 ], [ %19, %b_31 ]
  %124 = phi i32 [ %13, %b_30 ], [ %13, %b_31 ]
  %125 = phi i32 [ %14, %b_30 ], [ %14, %b_31 ]
  %126 = phi i32 [ %15, %b_30 ], [ %15, %b_31 ]
  %127 = phi i32 [ %16, %b_30 ], [ %16, %b_31 ]
  %128 = add i32 %122, 20
  %129 = add i32 %128, 0
  %130 = call i32 @get_i32(i32 %129)
  %131 = icmp eq i32 0, %130
  %132 = zext i1 %131 to i32
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %b_1, label %b_33

b_33:                                             ; preds = %b_32
  %134 = add i32 %124, 20
  %135 = add i32 %134, 0
  call void @set_i32(i32 %135, i32 %130)
  %136 = add i32 %130, 24
  call void @set_i32(i32 %136, i32 %124)
  br label %b_1
}

; Function Attrs: nounwind
define i32 @wasmf_internal_21(i32 %0, i32 %1, i32 %2) #1 {
entry:
  br label %b_0

exit:                                             ; No predecessors!
  ret i32 0

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_7
  call void @wasmf_internal_38(i32 %28, i32 64, i32 1048920)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_8
  call void @wasmf_internal_38(i32 %20, i32 64, i32 1048920)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_4:                                              ; preds = %b_2
  br label %b_6

b_5:                                              ; preds = %b_19, %b_10
  %3 = phi i32 [ %35, %b_10 ], [ %22, %b_19 ]
  %4 = phi i32 [ %36, %b_10 ], [ %23, %b_19 ]
  %5 = phi i32 [ %37, %b_10 ], [ %122, %b_19 ]
  %6 = phi i32 [ 0, %b_10 ], [ %28, %b_19 ]
  %7 = phi i32 [ %39, %b_10 ], [ %118, %b_19 ]
  %8 = phi i32 [ %40, %b_10 ], [ %27, %b_19 ]
  %9 = add i32 %3, %6
  %10 = add i32 %9, 40
  %11 = call i32 @wasmf_internal_53(i32 %10, i32 %4, i32 %5)
  %12 = add i32 %3, 104
  %13 = call i8 @get_i8(i32 %12)
  %14 = zext i8 %13 to i32
  %15 = add i32 %14, %5
  %16 = trunc i32 %15 to i8
  %17 = add i32 %3, 104
  call void @set_i8(i32 %17, i8 %16)
  ret i32 %3

b_6:                                              ; preds = %b_4
  %18 = add i32 %0, 104
  %19 = call i8 @get_i8(i32 %18)
  %20 = zext i8 %19 to i32
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %b_8, label %b_9

b_7:                                              ; preds = %b_17, %b_12
  %22 = phi i32 [ %0, %b_12 ], [ %89, %b_17 ]
  %23 = phi i32 [ %58, %b_12 ], [ %110, %b_17 ]
  %24 = phi i32 [ 0, %b_12 ], [ %111, %b_17 ]
  %25 = phi i32 [ %55, %b_12 ], [ %117, %b_17 ]
  %26 = phi i32 [ %50, %b_12 ], [ %93, %b_17 ]
  %27 = phi i32 [ 0, %b_12 ], [ %94, %b_17 ]
  %28 = and i32 %25, 255
  %29 = icmp uge i32 %28, 65
  %30 = zext i1 %29 to i32
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %b_1, label %b_19

b_8:                                              ; preds = %b_6
  %32 = icmp uge i32 %20, 65
  %33 = zext i1 %32 to i32
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %b_3, label %b_11

b_9:                                              ; preds = %b_6
  br label %b_10

b_10:                                             ; preds = %b_14, %b_9
  %35 = phi i32 [ %0, %b_14 ], [ %0, %b_9 ]
  %36 = phi i32 [ %58, %b_14 ], [ %1, %b_9 ]
  %37 = phi i32 [ %59, %b_14 ], [ %2, %b_9 ]
  %38 = phi i32 [ %70, %b_14 ], [ %20, %b_9 ]
  %39 = phi i32 [ %64, %b_14 ], [ 0, %b_9 ]
  %40 = phi i32 [ 0, %b_14 ], [ 0, %b_9 ]
  %41 = icmp ult i32 %37, 65
  %42 = zext i1 %41 to i32
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %b_5, label %b_15

b_11:                                             ; preds = %b_8
  %44 = add i32 %0, %20
  %45 = add i32 %44, 40
  %46 = sub i32 64, %20
  %47 = icmp ugt i32 %46, %2
  %48 = zext i1 %47 to i32
  %49 = icmp ne i32 %48, 0
  %50 = select i1 %49, i32 %2, i32 %46
  %51 = call i32 @wasmf_internal_53(i32 %45, i32 %1, i32 %50)
  %52 = add i32 %0, 104
  %53 = call i8 @get_i8(i32 %52)
  %54 = zext i8 %53 to i32
  %55 = add i32 %54, %50
  %56 = trunc i32 %55 to i8
  %57 = add i32 %0, 104
  call void @set_i8(i32 %57, i8 %56)
  %58 = add i32 %1, %50
  %59 = sub i32 %2, %50
  %60 = icmp eq i32 0, %59
  %61 = zext i1 %60 to i32
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %b_12, label %b_13

b_12:                                             ; preds = %b_11
  br label %b_7

b_13:                                             ; preds = %b_11
  br label %b_14

b_14:                                             ; preds = %b_13
  %63 = add i32 %0, 8
  %64 = add i32 %0, 40
  %65 = add i32 %0, 0
  %66 = call i64 @get_i64(i32 %65)
  %67 = add i32 %0, 106
  %68 = call i8 @get_i8(i32 %67)
  %69 = zext i8 %68 to i32
  %70 = add i32 %0, 105
  %71 = add i32 %70, 0
  %72 = call i8 @get_i8(i32 %71)
  %73 = zext i8 %72 to i32
  %74 = icmp eq i32 0, %73
  %75 = zext i1 %74 to i32
  %76 = or i32 %69, %75
  call void @wasmf_internal_3(i32 %63, i32 %64, i32 64, i64 %66, i32 %76)
  %77 = call i32 @wasmf_internal_59(i32 %64, i32 65)
  %78 = add i32 %70, 0
  %79 = call i8 @get_i8(i32 %78)
  %80 = zext i8 %79 to i32
  %81 = add i32 %80, 1
  %82 = trunc i32 %81 to i8
  %83 = add i32 %70, 0
  call void @set_i8(i32 %83, i8 %82)
  br label %b_10

b_15:                                             ; preds = %b_10
  %84 = add i32 %35, 8
  %85 = add i32 %35, 105
  %86 = add i32 %85, 0
  %87 = call i8 @get_i8(i32 %86)
  %88 = zext i8 %87 to i32
  br label %b_16

b_16:                                             ; preds = %b_16, %b_15
  %89 = phi i32 [ %35, %b_15 ], [ %89, %b_16 ]
  %90 = phi i32 [ %36, %b_15 ], [ %110, %b_16 ]
  %91 = phi i32 [ %37, %b_15 ], [ %111, %b_16 ]
  %92 = phi i32 [ %88, %b_15 ], [ %107, %b_16 ]
  %93 = phi i32 [ %85, %b_15 ], [ %93, %b_16 ]
  %94 = phi i32 [ %84, %b_15 ], [ %94, %b_16 ]
  %95 = add i32 %89, 0
  %96 = call i64 @get_i64(i32 %95)
  %97 = add i32 %89, 106
  %98 = call i8 @get_i8(i32 %97)
  %99 = zext i8 %98 to i32
  %100 = and i32 %92, 255
  %101 = icmp eq i32 0, %100
  %102 = zext i1 %101 to i32
  %103 = or i32 %99, %102
  call void @wasmf_internal_3(i32 %94, i32 %90, i32 64, i64 %96, i32 %103)
  %104 = add i32 %93, 0
  %105 = call i8 @get_i8(i32 %104)
  %106 = zext i8 %105 to i32
  %107 = add i32 %106, 1
  %108 = trunc i32 %107 to i8
  %109 = add i32 %93, 0
  call void @set_i8(i32 %109, i8 %108)
  %110 = sub i32 %90, -64
  %111 = add i32 %91, -64
  %112 = icmp ugt i32 %111, 64
  %113 = zext i1 %112 to i32
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %b_16, label %b_18

b_17:                                             ; preds = %b_18
  %115 = add i32 %89, 104
  %116 = call i8 @get_i8(i32 %115)
  %117 = zext i8 %116 to i32
  br label %b_7

b_18:                                             ; preds = %b_16
  br label %b_17

b_19:                                             ; preds = %b_7
  %118 = sub i32 64, %28
  %119 = icmp ugt i32 %118, %24
  %120 = zext i1 %119 to i32
  %121 = icmp ne i32 %120, 0
  %122 = select i1 %121, i32 %24, i32 %118
  br label %b_5
}

; Function Attrs: nounwind
define i32 @wasmf_internal_22(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #1 {
entry:
  %6 = load i32, i32* @wasmg_internal_0, align 4
  %7 = sub i32 %6, 16
  store i32 %7, i32* @wasmg_internal_0, align 4
  %8 = add i32 %7, 8
  call void @set_i8(i32 %8, i8 0)
  br label %b_0

exit:                                             ; No predecessors!
  ret i32 0

b_0:                                              ; preds = %entry
  %9 = and i32 %1, -64
  %10 = icmp eq i32 0, %9
  %11 = zext i1 %10 to i32
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %b_1, label %b_2

b_1:                                              ; preds = %b_3, %b_2, %b_0
  %13 = phi i32 [ %0, %b_0 ], [ %0, %b_2 ], [ %0, %b_3 ]
  %14 = phi i32 [ %1, %b_0 ], [ %1, %b_2 ], [ %1, %b_3 ]
  %15 = phi i32 [ %2, %b_0 ], [ %2, %b_2 ], [ %2, %b_3 ]
  %16 = phi i32 [ %3, %b_0 ], [ %3, %b_2 ], [ %3, %b_3 ]
  %17 = phi i32 [ %4, %b_0 ], [ %4, %b_2 ], [ %4, %b_3 ]
  %18 = phi i32 [ %5, %b_0 ], [ %5, %b_2 ], [ %5, %b_3 ]
  %19 = phi i32 [ %7, %b_0 ], [ %7, %b_2 ], [ %7, %b_3 ]
  %20 = phi i32 [ 0, %b_0 ], [ 1, %b_2 ], [ 2, %b_3 ]
  %21 = phi i32 [ %9, %b_0 ], [ %9, %b_2 ], [ %9, %b_3 ]
  %22 = or i32 %16, 4
  call void @wasmf_internal_25(i32 %19, i32 %20, i32 %15, i32 %22, i32 %17, i32 %18)
  %23 = add i32 %19, 8
  %24 = call i8 @get_i8(i32 %23)
  %25 = zext i8 %24 to i32
  br label %b_5

b_2:                                              ; preds = %b_0
  %26 = add i32 %7, 8
  call void @set_i8(i32 %26, i8 1)
  %27 = add i32 %7, 0
  call void @set_i32(i32 %27, i32 %0)
  %28 = icmp eq i32 %9, 64
  %29 = zext i1 %28 to i32
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %b_1, label %b_3

b_3:                                              ; preds = %b_2
  %31 = add i32 %7, 8
  call void @set_i8(i32 %31, i8 2)
  %32 = sub i32 %0, -64
  %33 = add i32 %7, 4
  call void @set_i32(i32 %33, i32 %32)
  %34 = icmp eq i32 %9, 128
  %35 = zext i1 %34 to i32
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %b_1, label %b_4

b_4:                                              ; preds = %b_3
  %37 = add i32 %0, 128
  %38 = add i32 %7, 12
  call void @set_i32(i32 %38, i32 %37)
  %39 = add i32 %7, 12
  call void @wasmf_internal_35(i32 %39, i32 1049348)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_5:                                              ; preds = %b_1
  br label %b_7

b_6:                                              ; preds = %b_15
  call void @wasmf_internal_40(i32 %40, i32 1049272)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_7:                                              ; preds = %b_5
  br label %b_9

b_8:                                              ; preds = %b_14
  call void @wasmf_internal_37(i32 32, i32 %59, i32 1048952)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_9:                                              ; preds = %b_7
  br label %b_11

b_10:                                             ; preds = %b_13
  call void @wasmf_internal_38(i32 %55, i32 %18, i32 1048952)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_11:                                             ; preds = %b_9
  %40 = and i32 %14, 63
  %41 = icmp eq i32 0, %40
  %42 = zext i1 %41 to i32
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %b_12, label %b_13

b_12:                                             ; preds = %b_16, %b_11
  %44 = phi i32 [ %13, %b_11 ], [ %67, %b_16 ]
  %45 = phi i32 [ %14, %b_11 ], [ %66, %b_16 ]
  %46 = phi i32 [ %25, %b_11 ], [ %25, %b_16 ]
  %47 = phi i32 [ %40, %b_11 ], [ %40, %b_16 ]
  %48 = phi i32 [ %17, %b_11 ], [ %17, %b_16 ]
  %49 = phi i32 [ %18, %b_11 ], [ %59, %b_16 ]
  %50 = phi i32 [ %19, %b_11 ], [ %19, %b_16 ]
  %51 = phi i32 [ %20, %b_11 ], [ %20, %b_16 ]
  %52 = phi i32 [ %21, %b_11 ], [ %21, %b_16 ]
  %53 = phi i32 [ %25, %b_11 ], [ %86, %b_16 ]
  %54 = icmp ne i32 %46, 0
  br i1 %54, label %b_17, label %b_18

b_13:                                             ; preds = %b_11
  %55 = shl i32 %25, 5
  %56 = icmp ugt i32 %55, %18
  %57 = zext i1 %56 to i32
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %b_10, label %b_14

b_14:                                             ; preds = %b_13
  %59 = sub i32 %18, %55
  %60 = icmp ule i32 %59, 31
  %61 = zext i1 %60 to i32
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %b_8, label %b_15

b_15:                                             ; preds = %b_14
  %63 = icmp ne i32 %40, 32
  %64 = zext i1 %63 to i32
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %b_6, label %b_16

b_16:                                             ; preds = %b_15
  %66 = add i32 %55, %17
  %67 = add i32 %13, %21
  %68 = add i32 %67, 0
  %69 = call i64 @get_i64(i32 %68)
  %70 = add i32 %66, 0
  call void @set_i64(i32 %70, i64 %69)
  %71 = add i32 %66, 24
  %72 = add i32 %67, 24
  %73 = add i32 %72, 0
  %74 = call i64 @get_i64(i32 %73)
  %75 = add i32 %71, 0
  call void @set_i64(i32 %75, i64 %74)
  %76 = add i32 %66, 16
  %77 = add i32 %67, 16
  %78 = add i32 %77, 0
  %79 = call i64 @get_i64(i32 %78)
  %80 = add i32 %76, 0
  call void @set_i64(i32 %80, i64 %79)
  %81 = add i32 %66, 8
  %82 = add i32 %67, 8
  %83 = add i32 %82, 0
  %84 = call i64 @get_i64(i32 %83)
  %85 = add i32 %81, 0
  call void @set_i64(i32 %85, i64 %84)
  %86 = add i32 %25, 1
  br label %b_12

b_17:                                             ; preds = %b_12
  %87 = add i32 %50, 8
  call void @set_i8(i32 %87, i8 0)
  br label %b_19

b_18:                                             ; preds = %b_12
  br label %b_19

b_19:                                             ; preds = %b_18, %b_17
  %88 = phi i32 [ %44, %b_17 ], [ %44, %b_18 ]
  %89 = phi i32 [ %45, %b_17 ], [ %45, %b_18 ]
  %90 = phi i32 [ %46, %b_17 ], [ %46, %b_18 ]
  %91 = phi i32 [ %47, %b_17 ], [ %47, %b_18 ]
  %92 = phi i32 [ %48, %b_17 ], [ %48, %b_18 ]
  %93 = phi i32 [ %49, %b_17 ], [ %49, %b_18 ]
  %94 = phi i32 [ %50, %b_17 ], [ %50, %b_18 ]
  %95 = phi i32 [ %51, %b_17 ], [ %51, %b_18 ]
  %96 = phi i32 [ %52, %b_17 ], [ %52, %b_18 ]
  %97 = add i32 %94, 16
  store i32 %97, i32* @wasmg_internal_0, align 4
  ret i32 %53
}

; Function Attrs: nounwind
define i32 @wasmf_internal_23(i64 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 48
  store i32 %3, i32* @wasmg_internal_0, align 4
  br label %b_0

exit:                                             ; preds = %b_12
  ret i32 %96

b_0:                                              ; preds = %entry
  %4 = icmp ult i64 %0, 10000
  %5 = zext i1 %4 to i32
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %b_2, label %b_3

b_1:                                              ; preds = %b_6, %b_2
  %7 = phi i64 [ %0, %b_2 ], [ %30, %b_6 ]
  %8 = phi i32 [ %1, %b_2 ], [ %20, %b_6 ]
  %9 = phi i32 [ 39, %b_2 ], [ %54, %b_6 ]
  %10 = phi i32 [ 0, %b_2 ], [ %28, %b_6 ]
  %11 = phi i32 [ %3, %b_2 ], [ %23, %b_6 ]
  %12 = phi i32 [ 0, %b_2 ], [ %33, %b_6 ]
  %13 = phi i32 [ 0, %b_2 ], [ %35, %b_6 ]
  %14 = phi i64 [ %0, %b_2 ], [ %30, %b_6 ]
  %15 = trunc i64 %14 to i32
  %16 = icmp sgt i32 %15, 99
  %17 = zext i1 %16 to i32
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %b_8, label %b_9

b_2:                                              ; preds = %b_0
  br label %b_1

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  br label %b_5

b_5:                                              ; preds = %b_5, %b_4
  %19 = phi i64 [ %0, %b_4 ], [ %30, %b_5 ]
  %20 = phi i32 [ %1, %b_4 ], [ %20, %b_5 ]
  %21 = phi i32 [ 39, %b_4 ], [ %54, %b_5 ]
  %22 = phi i32 [ 0, %b_4 ], [ %28, %b_5 ]
  %23 = phi i32 [ %3, %b_4 ], [ %23, %b_5 ]
  %24 = phi i32 [ 0, %b_4 ], [ %33, %b_5 ]
  %25 = phi i32 [ 0, %b_4 ], [ %35, %b_5 ]
  %26 = phi i64 [ 0, %b_4 ], [ %30, %b_5 ]
  %27 = add i32 %23, 9
  %28 = add i32 %27, %21
  %29 = add i32 %28, -4
  %30 = call i64 @u64_div(i64 %19, i64 10000)
  %31 = mul i64 %30, 10000
  %32 = sub i64 %19, %31
  %33 = trunc i64 %32 to i32
  %34 = and i32 %33, 65535
  %35 = call i32 @u32_div(i32 %34, i32 100)
  %36 = shl i32 %35, 1
  %37 = add i32 %36, 1050009
  %38 = add i32 %37, 0
  %39 = call i16 @get_i16(i32 %38)
  %40 = zext i16 %39 to i32
  %41 = trunc i32 %40 to i16
  %42 = add i32 %29, 0
  call void @set_i16(i32 %42, i16 %41)
  %43 = add i32 %28, -2
  %44 = mul i32 %35, 100
  %45 = sub i32 %33, %44
  %46 = and i32 %45, 65535
  %47 = shl i32 %46, 1
  %48 = add i32 %47, 1050009
  %49 = add i32 %48, 0
  %50 = call i16 @get_i16(i32 %49)
  %51 = zext i16 %50 to i32
  %52 = trunc i32 %51 to i16
  %53 = add i32 %43, 0
  call void @set_i16(i32 %53, i16 %52)
  %54 = add i32 %21, -4
  %55 = icmp ugt i64 %19, 99999999
  %56 = zext i1 %55 to i32
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %b_5, label %b_7

b_6:                                              ; preds = %b_7
  br label %b_1

b_7:                                              ; preds = %b_5
  br label %b_6

b_8:                                              ; preds = %b_1
  %58 = add i32 %9, -2
  %59 = add i32 %11, 9
  %60 = add i32 %58, %59
  %61 = trunc i64 %14 to i32
  %62 = and i32 %61, 65535
  %63 = call i32 @u32_div(i32 %62, i32 100)
  %64 = mul i32 %63, 100
  %65 = sub i32 %61, %64
  %66 = and i32 %65, 65535
  %67 = shl i32 %66, 1
  %68 = add i32 %67, 1050009
  %69 = add i32 %68, 0
  %70 = call i16 @get_i16(i32 %69)
  %71 = zext i16 %70 to i32
  %72 = trunc i32 %71 to i16
  %73 = add i32 %60, 0
  call void @set_i16(i32 %73, i16 %72)
  br label %b_10

b_9:                                              ; preds = %b_1
  br label %b_10

b_10:                                             ; preds = %b_9, %b_8
  %74 = phi i64 [ %7, %b_8 ], [ %7, %b_9 ]
  %75 = phi i32 [ %8, %b_8 ], [ %8, %b_9 ]
  %76 = phi i32 [ %58, %b_8 ], [ %9, %b_9 ]
  %77 = phi i32 [ %63, %b_8 ], [ %15, %b_9 ]
  %78 = phi i32 [ %11, %b_8 ], [ %11, %b_9 ]
  %79 = phi i32 [ %12, %b_8 ], [ %12, %b_9 ]
  %80 = phi i32 [ %13, %b_8 ], [ %13, %b_9 ]
  %81 = phi i64 [ %14, %b_8 ], [ %14, %b_9 ]
  br label %b_11

b_11:                                             ; preds = %b_10
  %82 = icmp sge i32 %77, 10
  %83 = zext i1 %82 to i32
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %b_13, label %b_14

b_12:                                             ; preds = %b_15, %b_13
  %85 = phi i64 [ %74, %b_13 ], [ %74, %b_15 ]
  %86 = phi i32 [ %75, %b_13 ], [ %75, %b_15 ]
  %87 = phi i32 [ %98, %b_13 ], [ %108, %b_15 ]
  %88 = phi i32 [ %77, %b_13 ], [ %77, %b_15 ]
  %89 = phi i32 [ %78, %b_13 ], [ %78, %b_15 ]
  %90 = phi i32 [ %79, %b_13 ], [ %79, %b_15 ]
  %91 = phi i32 [ %80, %b_13 ], [ %80, %b_15 ]
  %92 = phi i64 [ %81, %b_13 ], [ %81, %b_15 ]
  %93 = add i32 %89, 9
  %94 = add i32 %93, %87
  %95 = sub i32 39, %87
  %96 = call i32 @wasmf_internal_12(i32 %86, i32 %94, i32 %95)
  %97 = add i32 %89, 48
  store i32 %97, i32* @wasmg_internal_0, align 4
  br label %exit

b_13:                                             ; preds = %b_11
  %98 = add i32 %76, -2
  %99 = add i32 %78, 9
  %100 = add i32 %98, %99
  %101 = shl i32 %77, 1
  %102 = add i32 %101, 1050009
  %103 = add i32 %102, 0
  %104 = call i16 @get_i16(i32 %103)
  %105 = zext i16 %104 to i32
  %106 = trunc i32 %105 to i16
  %107 = add i32 %100, 0
  call void @set_i16(i32 %107, i16 %106)
  br label %b_12

b_14:                                             ; preds = %b_11
  br label %b_15

b_15:                                             ; preds = %b_14
  %108 = add i32 %76, -1
  %109 = add i32 %78, 9
  %110 = add i32 %108, %109
  %111 = add i32 %77, 48
  %112 = trunc i32 %111 to i8
  %113 = add i32 %110, 0
  call void @set_i8(i32 %113, i8 %112)
  br label %b_12
}

; Function Attrs: nounwind
define void @wasmf_internal_24(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = add i32 %2, -64
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %1, 4
  %5 = call i32 @get_i32(i32 %4)
  %6 = icmp eq i32 0, %5
  %7 = zext i1 %6 to i32
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %b_0, label %b_1

exit:                                             ; preds = %b_9
  ret void

b_0:                                              ; preds = %entry
  %9 = add i32 %1, 4
  %10 = add i32 %1, 0
  %11 = call i32 @get_i32(i32 %10)
  %12 = add i32 %3, 32
  call void @set_i32(i32 %12, i32 0)
  %13 = add i32 %3, 24
  call void @set_i64(i32 %13, i64 1)
  %14 = add i32 %3, 24
  %15 = add i32 %3, 36
  call void @set_i32(i32 %15, i32 %14)
  %16 = add i32 %3, 56
  %17 = add i32 %11, 16
  %18 = add i32 %17, 0
  %19 = call i64 @get_i64(i32 %18)
  %20 = add i32 %16, 0
  call void @set_i64(i32 %20, i64 %19)
  %21 = add i32 %3, 48
  %22 = add i32 %11, 8
  %23 = add i32 %22, 0
  %24 = call i64 @get_i64(i32 %23)
  %25 = add i32 %21, 0
  call void @set_i64(i32 %25, i64 %24)
  %26 = add i32 %11, 0
  %27 = call i64 @get_i64(i32 %26)
  %28 = add i32 %3, 40
  call void @set_i64(i32 %28, i64 %27)
  %29 = add i32 %3, 36
  %30 = add i32 %3, 40
  %31 = call i32 @wasmf_internal_13(i32 %29, i32 1049660, i32 %30)
  %32 = add i32 %3, 16
  %33 = add i32 %3, 32
  %34 = call i32 @get_i32(i32 %33)
  %35 = add i32 %32, 0
  call void @set_i32(i32 %35, i32 %34)
  %36 = add i32 %3, 24
  %37 = call i64 @get_i64(i32 %36)
  %38 = add i32 %3, 8
  call void @set_i64(i32 %38, i64 %37)
  br label %b_3

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_4, %b_1
  %39 = phi i32 [ %62, %b_4 ], [ %0, %b_1 ]
  %40 = phi i32 [ %63, %b_4 ], [ %1, %b_1 ]
  %41 = phi i32 [ %64, %b_4 ], [ %3, %b_1 ]
  %42 = phi i32 [ %76, %b_4 ], [ %5, %b_1 ]
  %43 = phi i32 [ %66, %b_4 ], [ 0, %b_1 ]
  %44 = phi i32 [ %67, %b_4 ], [ 0, %b_1 ]
  %45 = add i32 %40, 4
  call void @set_i32(i32 %45, i32 1)
  %46 = add i32 %40, 12
  %47 = add i32 %46, 0
  %48 = call i32 @get_i32(i32 %47)
  %49 = add i32 %40, 8
  %50 = add i32 %49, 0
  %51 = call i32 @get_i32(i32 %50)
  %52 = add i32 %49, 0
  call void @set_i64(i32 %52, i64 0)
  %53 = call i32 @wasmf_internal_67(i32 12, i32 4)
  %54 = icmp eq i32 0, %53
  %55 = zext i1 %54 to i32
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %b_7, label %b_8

b_3:                                              ; preds = %b_0
  %57 = add i32 %1, 4
  %58 = call i32 @get_i32(i32 %57)
  %59 = icmp eq i32 0, %58
  %60 = zext i1 %59 to i32
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %b_4, label %b_5

b_4:                                              ; preds = %b_6, %b_5, %b_3
  %62 = phi i32 [ %0, %b_3 ], [ %0, %b_5 ], [ %0, %b_6 ]
  %63 = phi i32 [ %1, %b_3 ], [ %1, %b_5 ], [ %1, %b_6 ]
  %64 = phi i32 [ %3, %b_3 ], [ %3, %b_5 ], [ %3, %b_6 ]
  %65 = phi i32 [ %9, %b_3 ], [ %9, %b_5 ], [ %9, %b_6 ]
  %66 = phi i32 [ %32, %b_3 ], [ %32, %b_5 ], [ %32, %b_6 ]
  %67 = phi i32 [ %58, %b_3 ], [ %58, %b_5 ], [ %58, %b_6 ]
  %68 = add i32 %64, 8
  %69 = call i64 @get_i64(i32 %68)
  %70 = add i32 %65, 0
  call void @set_i64(i32 %70, i64 %69)
  %71 = add i32 %65, 8
  %72 = add i32 %66, 0
  %73 = call i32 @get_i32(i32 %72)
  %74 = add i32 %71, 0
  call void @set_i32(i32 %74, i32 %73)
  %75 = add i32 %65, 0
  %76 = call i32 @get_i32(i32 %75)
  br label %b_2

b_5:                                              ; preds = %b_3
  %77 = add i32 %1, 8
  %78 = add i32 %77, 0
  %79 = call i32 @get_i32(i32 %78)
  %80 = icmp eq i32 0, %79
  %81 = zext i1 %80 to i32
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %b_4, label %b_6

b_6:                                              ; preds = %b_5
  call void @wasmf_internal_6(i32 %58)
  br label %b_4

b_7:                                              ; preds = %b_2
  call void @wasmf_internal_76(i32 12, i32 4)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_8:                                              ; preds = %b_2
  br label %b_9

b_9:                                              ; preds = %b_8
  %83 = add i32 %53, 8
  call void @set_i32(i32 %83, i32 %48)
  %84 = add i32 %53, 4
  call void @set_i32(i32 %84, i32 %51)
  %85 = add i32 %53, 0
  call void @set_i32(i32 %85, i32 %42)
  %86 = add i32 %39, 4
  call void @set_i32(i32 %86, i32 1049824)
  %87 = add i32 %39, 0
  call void @set_i32(i32 %87, i32 %53)
  %88 = sub i32 %41, -64
  store i32 %88, i32* @wasmg_internal_0, align 4
  br label %exit
}

; Function Attrs: nounwind
define void @wasmf_internal_25(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #1 {
entry:
  %6 = load i32, i32* @wasmg_internal_0, align 4
  %7 = sub i32 %6, 32
  store i32 %7, i32* @wasmg_internal_0, align 4
  %8 = lshr i32 %5, 5
  %9 = icmp ult i32 %8, %1
  %10 = zext i1 %9 to i32
  %11 = icmp ne i32 %10, 0
  %12 = select i1 %11, i32 %8, i32 %1
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %b_0, label %b_1

exit:                                             ; preds = %b_2
  ret void

b_0:                                              ; preds = %entry
  %14 = add i32 %4, 28
  br label %b_3

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_4, %b_1
  %15 = phi i32 [ %80, %b_4 ], [ %0, %b_1 ]
  %16 = phi i32 [ %81, %b_4 ], [ %1, %b_1 ]
  %17 = phi i32 [ %32, %b_4 ], [ %2, %b_1 ]
  %18 = phi i32 [ %33, %b_4 ], [ %3, %b_1 ]
  %19 = phi i32 [ %45, %b_4 ], [ %4, %b_1 ]
  %20 = phi i32 [ %83, %b_4 ], [ %12, %b_1 ]
  %21 = phi i32 [ %36, %b_4 ], [ %7, %b_1 ]
  %22 = phi i32 [ %46, %b_4 ], [ 0, %b_1 ]
  %23 = phi i32 [ %51, %b_4 ], [ 0, %b_1 ]
  %24 = phi i32 [ %56, %b_4 ], [ 0, %b_1 ]
  %25 = phi i64 [ %82, %b_4 ], [ 0, %b_1 ]
  %26 = phi i64 [ %65, %b_4 ], [ 0, %b_1 ]
  %27 = phi i64 [ %67, %b_4 ], [ 0, %b_1 ]
  %28 = phi i64 [ %69, %b_4 ], [ 0, %b_1 ]
  %29 = add i32 %21, 32
  store i32 %29, i32* @wasmg_internal_0, align 4
  br label %exit

b_3:                                              ; preds = %b_3, %b_0
  %30 = phi i32 [ %0, %b_0 ], [ %80, %b_3 ]
  %31 = phi i32 [ %14, %b_0 ], [ %81, %b_3 ]
  %32 = phi i32 [ %2, %b_0 ], [ %32, %b_3 ]
  %33 = phi i32 [ %3, %b_0 ], [ %33, %b_3 ]
  %34 = phi i32 [ %4, %b_0 ], [ %45, %b_3 ]
  %35 = phi i32 [ %12, %b_0 ], [ %83, %b_3 ]
  %36 = phi i32 [ %7, %b_0 ], [ %36, %b_3 ]
  %37 = phi i32 [ 0, %b_0 ], [ %46, %b_3 ]
  %38 = phi i32 [ 0, %b_0 ], [ %51, %b_3 ]
  %39 = phi i32 [ 0, %b_0 ], [ %56, %b_3 ]
  %40 = phi i64 [ 0, %b_0 ], [ %82, %b_3 ]
  %41 = phi i64 [ 0, %b_0 ], [ %65, %b_3 ]
  %42 = phi i64 [ 0, %b_0 ], [ %67, %b_3 ]
  %43 = phi i64 [ 0, %b_0 ], [ %69, %b_3 ]
  %44 = add i32 %30, 0
  %45 = call i32 @get_i32(i32 %44)
  %46 = add i32 %36, 24
  %47 = add i32 %32, 24
  %48 = add i32 %47, 0
  %49 = call i64 @get_i64(i32 %48)
  %50 = add i32 %46, 0
  call void @set_i64(i32 %50, i64 %49)
  %51 = add i32 %36, 16
  %52 = add i32 %32, 16
  %53 = add i32 %52, 0
  %54 = call i64 @get_i64(i32 %53)
  %55 = add i32 %51, 0
  call void @set_i64(i32 %55, i64 %54)
  %56 = add i32 %36, 8
  %57 = add i32 %32, 8
  %58 = add i32 %57, 0
  %59 = call i64 @get_i64(i32 %58)
  %60 = add i32 %56, 0
  call void @set_i64(i32 %60, i64 %59)
  %61 = add i32 %32, 0
  %62 = call i64 @get_i64(i32 %61)
  %63 = add i32 %36, 0
  call void @set_i64(i32 %63, i64 %62)
  call void @wasmf_internal_3(i32 %36, i32 %45, i32 64, i64 %40, i32 %33)
  %64 = add i32 %56, 0
  %65 = call i64 @get_i64(i32 %64)
  %66 = add i32 %51, 0
  %67 = call i64 @get_i64(i32 %66)
  %68 = add i32 %36, 0
  %69 = call i64 @get_i64(i32 %68)
  %70 = add i32 %31, -4
  %71 = add i32 %46, 0
  %72 = call i64 @get_i64(i32 %71)
  %73 = add i32 %70, 0
  call void @set_i64(i32 %73, i64 %72)
  %74 = add i32 %31, -12
  %75 = add i32 %74, 0
  call void @set_i64(i32 %75, i64 %67)
  %76 = add i32 %31, -20
  %77 = add i32 %76, 0
  call void @set_i64(i32 %77, i64 %65)
  %78 = add i32 %31, -28
  %79 = add i32 %78, 0
  call void @set_i64(i32 %79, i64 %69)
  %80 = add i32 %30, 4
  %81 = add i32 %31, 32
  %82 = add i64 %40, 0
  %83 = add i32 %35, -1
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %b_3, label %b_5

b_4:                                              ; preds = %b_5
  br label %b_2

b_5:                                              ; preds = %b_3
  br label %b_4
}

; Function Attrs: nounwind
define void @wasmf_internal_26(i32 %0, i32 %1, i32 %2) #1 {
entry:
  br label %b_0

exit:                                             ; preds = %b_1
  ret void

b_0:                                              ; preds = %entry
  %3 = add i32 %0, 4
  %4 = add i32 %3, 0
  %5 = call i32 @get_i32(i32 %4)
  %6 = add i32 %0, 8
  %7 = add i32 %6, 0
  %8 = call i32 @get_i32(i32 %7)
  %9 = sub i32 %5, %8
  %10 = sub i32 %2, %1
  %11 = icmp uge i32 %9, %10
  %12 = zext i1 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %b_2, label %b_3

b_1:                                              ; preds = %b_18, %b_2
  %14 = phi i32 [ %0, %b_2 ], [ %29, %b_18 ]
  %15 = phi i32 [ %1, %b_2 ], [ %30, %b_18 ]
  %16 = phi i32 [ %2, %b_2 ], [ %31, %b_18 ]
  %17 = phi i32 [ %8, %b_2 ], [ %81, %b_18 ]
  %18 = phi i32 [ %28, %b_2 ], [ %35, %b_18 ]
  %19 = phi i32 [ %10, %b_2 ], [ %34, %b_18 ]
  %20 = add i32 %17, %18
  %21 = call i32 @wasmf_internal_53(i32 %20, i32 %15, i32 %19)
  %22 = add i32 %14, 8
  %23 = add i32 %22, 0
  %24 = call i32 @get_i32(i32 %23)
  %25 = add i32 %24, %19
  %26 = add i32 %22, 0
  call void @set_i32(i32 %26, i32 %25)
  br label %exit

b_2:                                              ; preds = %b_0
  %27 = add i32 %0, 0
  %28 = call i32 @get_i32(i32 %27)
  br label %b_1

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  br label %b_5

b_5:                                              ; preds = %b_4
  br label %b_7

b_6:                                              ; preds = %b_16, %b_8
  %29 = phi i32 [ %0, %b_16 ], [ %37, %b_8 ]
  %30 = phi i32 [ %1, %b_16 ], [ %38, %b_8 ]
  %31 = phi i32 [ %62, %b_16 ], [ %39, %b_8 ]
  %32 = phi i32 [ %71, %b_16 ], [ %40, %b_8 ]
  %33 = phi i32 [ %5, %b_16 ], [ %41, %b_8 ]
  %34 = phi i32 [ %10, %b_16 ], [ %42, %b_8 ]
  %35 = phi i32 [ %75, %b_16 ], [ %43, %b_8 ]
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %b_18, label %b_19

b_7:                                              ; preds = %b_5
  br label %b_9

b_8:                                              ; preds = %b_15, %b_14
  %37 = phi i32 [ %0, %b_15 ], [ %0, %b_14 ]
  %38 = phi i32 [ %1, %b_15 ], [ %1, %b_14 ]
  %39 = phi i32 [ %62, %b_15 ], [ %62, %b_14 ]
  %40 = phi i32 [ %71, %b_15 ], [ %54, %b_14 ]
  %41 = phi i32 [ %5, %b_15 ], [ %5, %b_14 ]
  %42 = phi i32 [ %10, %b_15 ], [ %10, %b_14 ]
  %43 = call i32 @wasmf_internal_67(i32 %39, i32 1)
  br label %b_6

b_9:                                              ; preds = %b_7
  %44 = add i32 %8, %10
  %45 = icmp ult i32 %44, %8
  %46 = zext i1 %45 to i32
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %b_10, label %b_11

b_10:                                             ; preds = %b_17, %b_12, %b_9
  %48 = phi i32 [ %0, %b_9 ], [ %0, %b_12 ], [ %0, %b_17 ]
  %49 = phi i32 [ %1, %b_9 ], [ %1, %b_12 ], [ %1, %b_17 ]
  %50 = phi i32 [ %44, %b_9 ], [ %62, %b_12 ], [ %62, %b_17 ]
  %51 = phi i32 [ %8, %b_9 ], [ %54, %b_12 ], [ %54, %b_17 ]
  %52 = phi i32 [ %5, %b_9 ], [ %5, %b_12 ], [ %5, %b_17 ]
  %53 = phi i32 [ %10, %b_9 ], [ %10, %b_12 ], [ %10, %b_17 ]
  call void @wasmf_internal_70()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_11:                                             ; preds = %b_9
  %54 = shl i32 %5, 1
  %55 = icmp ugt i32 %54, %44
  %56 = zext i1 %55 to i32
  %57 = icmp ne i32 %56, 0
  %58 = select i1 %57, i32 %54, i32 %44
  %59 = icmp ugt i32 %58, 8
  %60 = zext i1 %59 to i32
  %61 = icmp ne i32 %60, 0
  %62 = select i1 %61, i32 %58, i32 8
  %63 = icmp ne i32 %5, 0
  br i1 %63, label %b_12, label %b_13

b_12:                                             ; preds = %b_11
  %64 = icmp slt i32 %62, 0
  %65 = zext i1 %64 to i32
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %b_10, label %b_15

b_13:                                             ; preds = %b_11
  br label %b_14

b_14:                                             ; preds = %b_13
  %67 = icmp sge i32 %62, 0
  %68 = zext i1 %67 to i32
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %b_8, label %b_17

b_15:                                             ; preds = %b_12
  %70 = add i32 %0, 0
  %71 = call i32 @get_i32(i32 %70)
  %72 = icmp eq i32 0, %71
  %73 = zext i1 %72 to i32
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %b_8, label %b_16

b_16:                                             ; preds = %b_15
  %75 = call i32 @wasmf_internal_63(i32 %71, i32 %5, i32 1, i32 %62)
  br label %b_6

b_17:                                             ; preds = %b_14
  br label %b_10

b_18:                                             ; preds = %b_6
  %76 = add i32 %29, 0
  call void @set_i32(i32 %76, i32 %35)
  %77 = add i32 %29, 4
  %78 = add i32 %77, 0
  call void @set_i32(i32 %78, i32 %31)
  %79 = add i32 %29, 8
  %80 = add i32 %79, 0
  %81 = call i32 @get_i32(i32 %80)
  br label %b_1

b_19:                                             ; preds = %b_6
  br label %b_20

b_20:                                             ; preds = %b_19
  call void @wasmf_internal_76(i32 %31, i32 1)
  call void @awsm_abi__trap_unreachable()
  unreachable
}

; Function Attrs: nounwind
define i32 @wasmf_create_keyed(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 3840
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %3, 1944
  %5 = add i32 %4, 0
  call void @set_i64(i32 %5, i64 0)
  %6 = add i32 %3, 1936
  %7 = add i32 %6, 0
  call void @set_i64(i32 %7, i64 0)
  %8 = add i32 %3, 1928
  %9 = add i32 %8, 0
  call void @set_i64(i32 %9, i64 0)
  %10 = add i32 %3, 1920
  call void @set_i64(i32 %10, i64 0)
  br label %b_0

exit:                                             ; No predecessors!
  ret i32 0

b_0:                                              ; preds = %entry
  %11 = icmp eq i32 %1, 32
  %12 = zext i1 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %b_2, label %b_3

b_1:                                              ; preds = %b_2
  call void @wasmf_internal_76(i32 1920, i32 8)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  %14 = add i32 %0, 24
  %15 = add i32 %14, 0
  %16 = call i64 @get_i64(i32 %15)
  %17 = add i32 %4, 0
  call void @set_i64(i32 %17, i64 %16)
  %18 = add i32 %0, 16
  %19 = add i32 %18, 0
  %20 = call i64 @get_i64(i32 %19)
  %21 = add i32 %6, 0
  call void @set_i64(i32 %21, i64 %20)
  %22 = add i32 %0, 8
  %23 = add i32 %22, 0
  %24 = call i64 @get_i64(i32 %23)
  %25 = add i32 %8, 0
  call void @set_i64(i32 %25, i64 %24)
  %26 = add i32 %0, 0
  %27 = call i64 @get_i64(i32 %26)
  %28 = add i32 %3, 1920
  call void @set_i64(i32 %28, i64 %27)
  %29 = add i32 %3, 8
  %30 = add i32 %3, 1920
  call void @wasmf_internal_28(i32 %29, i32 %30)
  call void @wasmf_internal_6(i32 %0)
  %31 = add i32 %3, 1924
  %32 = add i32 %3, 8
  %33 = call i32 @wasmf_internal_53(i32 %31, i32 %32, i32 1912)
  %34 = call i32 @wasmf_internal_67(i32 1920, i32 8)
  %35 = icmp eq i32 0, %34
  %36 = zext i1 %35 to i32
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %b_1, label %b_5

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  call void @wasmf_internal_40(i32 %1, i32 1048656)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_5:                                              ; preds = %b_2
  %38 = add i32 %34, 0
  call void @set_i32(i32 %38, i32 0)
  %39 = add i32 %34, 4
  %40 = add i32 %3, 1920
  %41 = call i32 @wasmf_internal_53(i32 %39, i32 %40, i32 1916)
  %42 = add i32 %3, 3840
  store i32 %42, i32* @wasmg_internal_0, align 4
  ret i32 %34
}

; Function Attrs: nounwind
define void @wasmf_internal_28(i32 %0, i32 %1) #1 {
entry:
  %2 = add i32 %0, 0
  call void @set_i64(i32 %2, i64 0)
  %3 = add i32 %0, 140
  %4 = add i32 %1, 28
  %5 = call i32 @get_i32(i32 %4)
  %6 = add i32 %3, 0
  call void @set_i32(i32 %6, i32 %5)
  %7 = add i32 %0, 136
  %8 = add i32 %1, 24
  %9 = call i32 @get_i32(i32 %8)
  %10 = add i32 %7, 0
  call void @set_i32(i32 %10, i32 %9)
  %11 = add i32 %0, 132
  %12 = add i32 %1, 20
  %13 = call i32 @get_i32(i32 %12)
  %14 = add i32 %11, 0
  call void @set_i32(i32 %14, i32 %13)
  %15 = add i32 %0, 128
  %16 = add i32 %1, 16
  %17 = call i32 @get_i32(i32 %16)
  %18 = add i32 %15, 0
  call void @set_i32(i32 %18, i32 %17)
  %19 = add i32 %0, 124
  %20 = add i32 %1, 12
  %21 = call i32 @get_i32(i32 %20)
  %22 = add i32 %19, 0
  call void @set_i32(i32 %22, i32 %21)
  %23 = add i32 %0, 120
  %24 = add i32 %1, 8
  %25 = call i32 @get_i32(i32 %24)
  %26 = add i32 %23, 0
  call void @set_i32(i32 %26, i32 %25)
  %27 = add i32 %0, 116
  %28 = add i32 %1, 4
  %29 = call i32 @get_i32(i32 %28)
  %30 = add i32 %27, 0
  call void @set_i32(i32 %30, i32 %29)
  %31 = add i32 %1, 0
  %32 = call i32 @get_i32(i32 %31)
  %33 = add i32 %0, 112
  call void @set_i32(i32 %33, i32 %32)
  %34 = add i32 %0, 36
  %35 = add i32 %34, 0
  call void @set_i32(i32 %35, i32 %5)
  %36 = add i32 %0, 32
  %37 = add i32 %36, 0
  call void @set_i32(i32 %37, i32 %9)
  %38 = add i32 %0, 28
  %39 = add i32 %38, 0
  call void @set_i32(i32 %39, i32 %13)
  %40 = add i32 %0, 24
  %41 = add i32 %40, 0
  call void @set_i32(i32 %41, i32 %17)
  %42 = add i32 %0, 20
  %43 = add i32 %42, 0
  call void @set_i32(i32 %43, i32 %21)
  %44 = add i32 %0, 16
  %45 = add i32 %44, 0
  call void @set_i32(i32 %45, i32 %25)
  %46 = add i32 %0, 12
  %47 = add i32 %46, 0
  call void @set_i32(i32 %47, i32 %29)
  %48 = add i32 %0, 8
  call void @set_i32(i32 %48, i32 %32)
  %49 = add i32 %0, 40
  %50 = call i32 @wasmf_internal_59(i32 %49, i32 66)
  %51 = add i32 %0, 1904
  %52 = add i32 %51, 0
  call void @set_i8(i32 %52, i8 0)
  %53 = add i32 %0, 106
  call void @set_i8(i32 %53, i8 16)
  br label %exit

exit:                                             ; preds = %entry
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_29(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = add i32 %2, -64
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %1, 4
  %5 = add i32 %1, 4
  %6 = call i32 @get_i32(i32 %5)
  %7 = icmp eq i32 0, %6
  %8 = zext i1 %7 to i32
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %b_0, label %b_1

exit:                                             ; preds = %b_2
  ret void

b_0:                                              ; preds = %entry
  %10 = add i32 %1, 0
  %11 = call i32 @get_i32(i32 %10)
  %12 = add i32 %3, 32
  call void @set_i32(i32 %12, i32 0)
  %13 = add i32 %3, 24
  call void @set_i64(i32 %13, i64 1)
  %14 = add i32 %3, 24
  %15 = add i32 %3, 36
  call void @set_i32(i32 %15, i32 %14)
  %16 = add i32 %3, 56
  %17 = add i32 %11, 16
  %18 = add i32 %17, 0
  %19 = call i64 @get_i64(i32 %18)
  %20 = add i32 %16, 0
  call void @set_i64(i32 %20, i64 %19)
  %21 = add i32 %3, 48
  %22 = add i32 %11, 8
  %23 = add i32 %22, 0
  %24 = call i64 @get_i64(i32 %23)
  %25 = add i32 %21, 0
  call void @set_i64(i32 %25, i64 %24)
  %26 = add i32 %11, 0
  %27 = call i64 @get_i64(i32 %26)
  %28 = add i32 %3, 40
  call void @set_i64(i32 %28, i64 %27)
  %29 = add i32 %3, 36
  %30 = add i32 %3, 40
  %31 = call i32 @wasmf_internal_13(i32 %29, i32 1049660, i32 %30)
  %32 = add i32 %3, 16
  %33 = add i32 %3, 32
  %34 = call i32 @get_i32(i32 %33)
  %35 = add i32 %32, 0
  call void @set_i32(i32 %35, i32 %34)
  %36 = add i32 %3, 24
  %37 = call i64 @get_i64(i32 %36)
  %38 = add i32 %3, 8
  call void @set_i64(i32 %38, i64 %37)
  br label %b_3

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_4, %b_1
  %39 = phi i32 [ %53, %b_4 ], [ %0, %b_1 ]
  %40 = phi i32 [ %54, %b_4 ], [ %1, %b_1 ]
  %41 = phi i32 [ %55, %b_4 ], [ %3, %b_1 ]
  %42 = phi i32 [ %56, %b_4 ], [ 0, %b_1 ]
  %43 = phi i32 [ %57, %b_4 ], [ %4, %b_1 ]
  %44 = phi i32 [ %58, %b_4 ], [ 0, %b_1 ]
  %45 = add i32 %39, 4
  call void @set_i32(i32 %45, i32 1049824)
  %46 = add i32 %39, 0
  call void @set_i32(i32 %46, i32 %43)
  %47 = sub i32 %41, -64
  store i32 %47, i32* @wasmg_internal_0, align 4
  br label %exit

b_3:                                              ; preds = %b_0
  %48 = add i32 %1, 4
  %49 = call i32 @get_i32(i32 %48)
  %50 = icmp eq i32 0, %49
  %51 = zext i1 %50 to i32
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %b_4, label %b_5

b_4:                                              ; preds = %b_6, %b_5, %b_3
  %53 = phi i32 [ %0, %b_3 ], [ %0, %b_5 ], [ %0, %b_6 ]
  %54 = phi i32 [ %1, %b_3 ], [ %1, %b_5 ], [ %1, %b_6 ]
  %55 = phi i32 [ %3, %b_3 ], [ %3, %b_5 ], [ %3, %b_6 ]
  %56 = phi i32 [ %32, %b_3 ], [ %32, %b_5 ], [ %32, %b_6 ]
  %57 = phi i32 [ %4, %b_3 ], [ %4, %b_5 ], [ %4, %b_6 ]
  %58 = phi i32 [ %49, %b_3 ], [ %49, %b_5 ], [ %49, %b_6 ]
  %59 = add i32 %55, 8
  %60 = call i64 @get_i64(i32 %59)
  %61 = add i32 %57, 0
  call void @set_i64(i32 %61, i64 %60)
  %62 = add i32 %57, 8
  %63 = add i32 %56, 0
  %64 = call i32 @get_i32(i32 %63)
  %65 = add i32 %62, 0
  call void @set_i32(i32 %65, i32 %64)
  br label %b_2

b_5:                                              ; preds = %b_3
  %66 = add i32 %1, 8
  %67 = add i32 %66, 0
  %68 = call i32 @get_i32(i32 %67)
  %69 = icmp eq i32 0, %68
  %70 = zext i1 %69 to i32
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %b_4, label %b_6

b_6:                                              ; preds = %b_5
  call void @wasmf_internal_6(i32 %49)
  br label %b_4
}

; Function Attrs: nounwind
define void @wasmf_internal_30(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = load i32, i32* @wasmg_internal_0, align 4
  %4 = sub i32 %3, 32
  store i32 %4, i32* @wasmg_internal_0, align 4
  %5 = call i32 @get_i32(i32 1050504)
  %6 = add i32 %5, 1
  call void @set_i32(i32 1050504, i32 %6)
  br label %b_0

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_13
  %7 = load i32, i32* @wasmg_internal_0, align 4
  %8 = sub i32 %7, 16
  store i32 %8, i32* @wasmg_internal_0, align 4
  %9 = add i32 %8, 12
  call void @set_i32(i32 %9, i32 1049804)
  %10 = add i32 %8, 8
  call void @set_i32(i32 %10, i32 %55)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  br label %b_4

b_3:                                              ; preds = %b_14, %b_8, %b_5
  %11 = phi i32 [ %0, %b_8 ], [ %20, %b_5 ], [ %55, %b_14 ]
  %12 = phi i32 [ %1, %b_8 ], [ %29, %b_5 ], [ %56, %b_14 ]
  %13 = phi i32 [ %2, %b_8 ], [ %22, %b_5 ], [ %57, %b_14 ]
  %14 = phi i32 [ %4, %b_8 ], [ %23, %b_5 ], [ %58, %b_14 ]
  %15 = phi i32 [ %34, %b_8 ], [ %24, %b_5 ], [ %59, %b_14 ]
  call void @awsm_abi__trap_unreachable()
  unreachable

b_4:                                              ; preds = %b_2
  %16 = call i32 @get_i32(i32 1050960)
  %17 = icmp ne i32 %16, 1
  %18 = zext i1 %17 to i32
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %b_6, label %b_7

b_5:                                              ; preds = %b_9, %b_6
  %20 = phi i32 [ %0, %b_6 ], [ %0, %b_9 ]
  %21 = phi i32 [ %1, %b_6 ], [ %1, %b_9 ]
  %22 = phi i32 [ %2, %b_6 ], [ %2, %b_9 ]
  %23 = phi i32 [ %4, %b_6 ], [ %4, %b_9 ]
  %24 = phi i32 [ 1, %b_6 ], [ %34, %b_9 ]
  %25 = add i32 %23, 28
  call void @set_i32(i32 %25, i32 %22)
  %26 = add i32 %23, 24
  call void @set_i32(i32 %26, i32 %21)
  %27 = add i32 %23, 20
  call void @set_i32(i32 %27, i32 1049684)
  %28 = add i32 %23, 16
  call void @set_i32(i32 %28, i32 1049684)
  %29 = call i32 @get_i32(i32 1050492)
  %30 = icmp sle i32 %29, -1
  %31 = zext i1 %30 to i32
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %b_3, label %b_10

b_6:                                              ; preds = %b_4
  call void @set_i64(i32 1050960, i64 4294967297)
  br label %b_5

b_7:                                              ; preds = %b_4
  br label %b_8

b_8:                                              ; preds = %b_7
  %33 = call i32 @get_i32(i32 1050964)
  %34 = add i32 %33, 1
  call void @set_i32(i32 1050964, i32 %34)
  %35 = icmp ugt i32 %34, 2
  %36 = zext i1 %35 to i32
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %b_3, label %b_9

b_9:                                              ; preds = %b_8
  br label %b_5

b_10:                                             ; preds = %b_5
  %38 = add i32 %29, 1
  call void @set_i32(i32 1050492, i32 %38)
  %39 = call i32 @get_i32(i32 1050500)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %b_11, label %b_12

b_11:                                             ; preds = %b_10
  %41 = call i32 @get_i32(i32 1050496)
  %42 = add i32 %23, 8
  %43 = call i32 @get_i32(i32 1049820)
  %44 = call i8* @get_function_from_table(i32 %43, i32 2)
  %45 = bitcast i8* %44 to void (i32, i32)*
  call void %45(i32 %42, i32 %20)
  %46 = add i32 %23, 8
  %47 = call i64 @get_i64(i32 %46)
  %48 = add i32 %23, 16
  call void @set_i64(i32 %48, i64 %47)
  %49 = add i32 %23, 16
  %50 = add i32 %39, 12
  %51 = call i32 @get_i32(i32 %50)
  %52 = call i8* @get_function_from_table(i32 %51, i32 2)
  %53 = bitcast i8* %52 to void (i32, i32)*
  call void %53(i32 %41, i32 %49)
  %54 = call i32 @get_i32(i32 1050492)
  br label %b_13

b_12:                                             ; preds = %b_10
  br label %b_13

b_13:                                             ; preds = %b_12, %b_11
  %55 = phi i32 [ %20, %b_11 ], [ %20, %b_12 ]
  %56 = phi i32 [ %38, %b_11 ], [ %38, %b_12 ]
  %57 = phi i32 [ %39, %b_11 ], [ %39, %b_12 ]
  %58 = phi i32 [ %23, %b_11 ], [ %23, %b_12 ]
  %59 = phi i32 [ %24, %b_11 ], [ %24, %b_12 ]
  %60 = phi i32 [ %54, %b_11 ], [ %38, %b_12 ]
  %61 = add i32 %60, -1
  call void @set_i32(i32 1050492, i32 %61)
  %62 = icmp ule i32 %59, 1
  %63 = zext i1 %62 to i32
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %b_1, label %b_14

b_14:                                             ; preds = %b_13
  br label %b_3
}

; Function Attrs: nounwind
define void @wasmf_internal_31(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = load i32, i32* @wasmg_internal_0, align 4
  %4 = add i32 %3, -64
  store i32 %4, i32* @wasmg_internal_0, align 4
  br label %b_0

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  %5 = icmp ne i32 %2, 0
  br i1 %5, label %b_2, label %b_3

b_1:                                              ; preds = %b_5
  call void @wasmf_internal_38(i32 %36, i32 64, i32 1049176)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  %6 = add i32 %0, 40
  %7 = add i32 %0, 8
  br label %b_5

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_6, %b_3
  %8 = phi i32 [ %63, %b_6 ], [ %0, %b_3 ]
  %9 = phi i32 [ %71, %b_6 ], [ %1, %b_3 ]
  %10 = phi i32 [ %65, %b_6 ], [ %2, %b_3 ]
  %11 = phi i32 [ %66, %b_6 ], [ 0, %b_3 ]
  %12 = phi i32 [ %67, %b_6 ], [ %4, %b_3 ]
  %13 = phi i32 [ %68, %b_6 ], [ 0, %b_3 ]
  %14 = phi i32 [ %69, %b_6 ], [ 0, %b_3 ]
  %15 = phi i32 [ %70, %b_6 ], [ 0, %b_3 ]
  %16 = sub i32 %12, -64
  store i32 %16, i32* @wasmg_internal_0, align 4
  ret void

b_5:                                              ; preds = %b_10, %b_2
  %17 = phi i32 [ %0, %b_2 ], [ %63, %b_10 ]
  %18 = phi i32 [ %1, %b_2 ], [ %71, %b_10 ]
  %19 = phi i32 [ %2, %b_2 ], [ %65, %b_10 ]
  %20 = phi i32 [ 0, %b_2 ], [ %66, %b_10 ]
  %21 = phi i32 [ %4, %b_2 ], [ %67, %b_10 ]
  %22 = phi i32 [ %6, %b_2 ], [ %68, %b_10 ]
  %23 = phi i32 [ %7, %b_2 ], [ %69, %b_10 ]
  %24 = phi i32 [ 0, %b_2 ], [ %70, %b_10 ]
  %25 = add i32 %17, 104
  %26 = call i8 @get_i8(i32 %25)
  %27 = zext i8 %26 to i32
  %28 = add i32 %17, 0
  %29 = call i64 @get_i64(i32 %28)
  %30 = add i32 %17, 105
  %31 = call i8 @get_i8(i32 %30)
  %32 = zext i8 %31 to i32
  %33 = or i32 %32, 8
  call void @wasmf_internal_2(i32 %21, i32 %23, i32 %22, i32 %27, i64 %29, i32 %33)
  %34 = add i32 %17, 112
  %35 = call i8 @get_i8(i32 %34)
  %36 = zext i8 %35 to i32
  %37 = icmp uge i32 %36, 65
  %38 = zext i1 %37 to i32
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %b_1, label %b_7

b_6:                                              ; preds = %b_11
  br label %b_4

b_7:                                              ; preds = %b_5
  %40 = add i32 %36, %21
  %41 = sub i32 64, %36
  %42 = icmp ugt i32 %19, %41
  %43 = zext i1 %42 to i32
  %44 = icmp ne i32 %43, 0
  %45 = select i1 %44, i32 %41, i32 %19
  %46 = call i32 @wasmf_internal_53(i32 %18, i32 %40, i32 %45)
  %47 = add i32 %17, 112
  %48 = call i8 @get_i8(i32 %47)
  %49 = zext i8 %48 to i32
  %50 = add i32 %49, %45
  %51 = trunc i32 %50 to i8
  %52 = add i32 %17, 112
  call void @set_i8(i32 %52, i8 %51)
  %53 = sub i32 %19, %45
  %54 = and i32 %50, 255
  %55 = icmp eq i32 %54, 64
  %56 = zext i1 %55 to i32
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %b_8, label %b_9

b_8:                                              ; preds = %b_7
  %58 = add i32 %17, 112
  call void @set_i8(i32 %58, i8 0)
  %59 = add i32 %17, 0
  %60 = call i64 @get_i64(i32 %59)
  %61 = add i64 %60, 1
  %62 = add i32 %17, 0
  call void @set_i64(i32 %62, i64 %61)
  br label %b_10

b_9:                                              ; preds = %b_7
  br label %b_10

b_10:                                             ; preds = %b_9, %b_8
  %63 = phi i32 [ %17, %b_8 ], [ %17, %b_9 ]
  %64 = phi i32 [ %45, %b_8 ], [ %45, %b_9 ]
  %65 = phi i32 [ %53, %b_8 ], [ %53, %b_9 ]
  %66 = phi i32 [ %46, %b_8 ], [ %46, %b_9 ]
  %67 = phi i32 [ %21, %b_8 ], [ %21, %b_9 ]
  %68 = phi i32 [ %22, %b_8 ], [ %22, %b_9 ]
  %69 = phi i32 [ %23, %b_8 ], [ %23, %b_9 ]
  %70 = phi i32 [ %50, %b_8 ], [ %50, %b_9 ]
  %71 = add i32 %64, %66
  %72 = icmp ne i32 %65, 0
  br i1 %72, label %b_5, label %b_11

b_11:                                             ; preds = %b_10
  br label %b_6
}

; Function Attrs: nounwind
define i32 @wasmf_blake3hash_reader(i32 %0) #1 {
entry:
  %1 = load i32, i32* @wasmg_internal_0, align 4
  %2 = sub i32 %1, 256
  store i32 %2, i32* @wasmg_internal_0, align 4
  br label %b_0

exit:                                             ; No predecessors!
  ret i32 0

b_0:                                              ; preds = %entry
  br label %b_2

b_1:                                              ; preds = %b_7
  call void @wasmf_internal_76(i32 128, i32 8)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  %3 = icmp ne i32 %0, 0
  br i1 %3, label %b_4, label %b_5

b_3:                                              ; preds = %b_4
  call void @wasmf_internal_74()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_4:                                              ; preds = %b_2
  %4 = add i32 %0, 0
  %5 = call i32 @get_i32(i32 %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %b_3, label %b_7

b_5:                                              ; preds = %b_2
  br label %b_6

b_6:                                              ; preds = %b_5
  call void @wasmf_internal_73()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_7:                                              ; preds = %b_4
  %7 = add i32 %0, 0
  call void @set_i32(i32 %7, i32 -1)
  %8 = add i32 %2, 8
  %9 = add i32 %0, 8
  call void @wasmf_internal_68(i32 %8, i32 %9)
  %10 = add i32 %0, 0
  call void @set_i32(i32 %10, i32 0)
  %11 = add i32 %2, 136
  %12 = add i32 %2, 8
  %13 = call i32 @wasmf_internal_53(i32 %11, i32 %12, i32 120)
  %14 = call i32 @wasmf_internal_67(i32 128, i32 8)
  %15 = icmp eq i32 0, %14
  %16 = zext i1 %15 to i32
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %b_1, label %b_8

b_8:                                              ; preds = %b_7
  %18 = add i32 %14, 0
  call void @set_i32(i32 %18, i32 0)
  %19 = add i32 %14, 4
  %20 = add i32 %2, 132
  %21 = call i32 @wasmf_internal_53(i32 %19, i32 %20, i32 124)
  %22 = add i32 %2, 256
  store i32 %22, i32* @wasmg_internal_0, align 4
  ret i32 %14
}

; Function Attrs: nounwind
define void @wasmf_internal_33(i32 %0) #1 {
entry:
  %1 = add i32 %0, 0
  call void @set_i64(i32 %1, i64 0)
  %2 = add i32 %0, 136
  %3 = call i64 @get_i64(i32 1049072)
  %4 = add i32 %2, 0
  call void @set_i64(i32 %4, i64 %3)
  %5 = add i32 %0, 128
  %6 = call i64 @get_i64(i32 1049064)
  %7 = add i32 %5, 0
  call void @set_i64(i32 %7, i64 %6)
  %8 = add i32 %0, 120
  %9 = call i64 @get_i64(i32 1049056)
  %10 = add i32 %8, 0
  call void @set_i64(i32 %10, i64 %9)
  %11 = call i64 @get_i64(i32 1049048)
  %12 = add i32 %0, 112
  call void @set_i64(i32 %12, i64 %11)
  %13 = add i32 %0, 8
  call void @set_i64(i32 %13, i64 %11)
  %14 = add i32 %0, 16
  %15 = add i32 %14, 0
  call void @set_i64(i32 %15, i64 %9)
  %16 = add i32 %0, 24
  %17 = add i32 %16, 0
  call void @set_i64(i32 %17, i64 %6)
  %18 = add i32 %0, 32
  %19 = add i32 %18, 0
  call void @set_i64(i32 %19, i64 %3)
  %20 = add i32 %0, 40
  %21 = call i32 @wasmf_internal_59(i32 %20, i32 67)
  %22 = add i32 %0, 1904
  %23 = add i32 %22, 0
  call void @set_i8(i32 %23, i8 0)
  br label %exit

exit:                                             ; preds = %entry
  ret void
}

; Function Attrs: nounwind
define i32 @wasmf_create_derive(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 3840
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %3, 8
  call void @wasmf_internal_8(i32 %4, i32 %0, i32 %1)
  %5 = icmp ne i32 %1, 0
  br i1 %5, label %b_0, label %b_1

exit:                                             ; preds = %b_5
  ret i32 %12

b_0:                                              ; preds = %entry
  call void @wasmf_internal_6(i32 %0)
  br label %b_2

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_1, %b_0
  %6 = phi i32 [ %0, %b_0 ], [ %0, %b_1 ]
  %7 = phi i32 [ %1, %b_0 ], [ %1, %b_1 ]
  %8 = phi i32 [ %3, %b_0 ], [ %3, %b_1 ]
  %9 = add i32 %8, 1928
  %10 = add i32 %8, 8
  %11 = call i32 @wasmf_internal_53(i32 %9, i32 %10, i32 1912)
  %12 = call i32 @wasmf_internal_67(i32 1920, i32 8)
  %13 = icmp eq i32 0, %12
  %14 = zext i1 %13 to i32
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %b_3, label %b_4

b_3:                                              ; preds = %b_2
  call void @wasmf_internal_76(i32 1920, i32 8)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_4:                                              ; preds = %b_2
  br label %b_5

b_5:                                              ; preds = %b_4
  %16 = add i32 %12, 0
  call void @set_i32(i32 %16, i32 0)
  %17 = add i32 %12, 4
  %18 = add i32 %8, 1924
  %19 = call i32 @wasmf_internal_53(i32 %17, i32 %18, i32 1916)
  %20 = add i32 %8, 3840
  store i32 %20, i32* @wasmg_internal_0, align 4
  br label %exit
}

; Function Attrs: nounwind
define void @wasmf_internal_35(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = add i32 %2, -64
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %3, 12
  call void @set_i32(i32 %4, i32 43)
  %5 = add i32 %3, 8
  call void @set_i32(i32 %5, i32 1049288)
  %6 = add i32 %3, 20
  call void @set_i32(i32 %6, i32 %1)
  %7 = add i32 %3, 16
  call void @set_i32(i32 %7, i32 %0)
  %8 = add i32 %3, 44
  %9 = add i32 %8, 0
  call void @set_i32(i32 %9, i32 2)
  %10 = add i32 %3, 60
  %11 = add i32 %10, 0
  call void @set_i32(i32 %11, i32 18)
  %12 = add i32 %3, 28
  call void @set_i64(i32 %12, i64 2)
  %13 = add i32 %3, 24
  call void @set_i32(i32 %13, i32 1049908)
  %14 = add i32 %3, 52
  call void @set_i32(i32 %14, i32 19)
  %15 = add i32 %3, 48
  %16 = add i32 %3, 40
  call void @set_i32(i32 %16, i32 %15)
  %17 = add i32 %3, 16
  %18 = add i32 %3, 56
  call void @set_i32(i32 %18, i32 %17)
  %19 = add i32 %3, 8
  %20 = add i32 %3, 48
  call void @set_i32(i32 %20, i32 %19)
  %21 = add i32 %3, 24
  call void @wasmf_internal_58(i32 %21, i32 1049460)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_36(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = load i32, i32* @wasmg_internal_0, align 4
  %4 = sub i32 %3, 48
  store i32 %4, i32* @wasmg_internal_0, align 4
  %5 = add i32 %4, 4
  call void @set_i32(i32 %5, i32 %1)
  %6 = add i32 %4, 0
  call void @set_i32(i32 %6, i32 %0)
  %7 = add i32 %4, 28
  %8 = add i32 %7, 0
  call void @set_i32(i32 %8, i32 2)
  %9 = add i32 %4, 44
  %10 = add i32 %9, 0
  call void @set_i32(i32 %10, i32 16)
  %11 = add i32 %4, 12
  call void @set_i64(i32 %11, i64 2)
  %12 = add i32 %4, 8
  call void @set_i32(i32 %12, i32 1049992)
  %13 = add i32 %4, 36
  call void @set_i32(i32 %13, i32 16)
  %14 = add i32 %4, 32
  %15 = add i32 %4, 24
  call void @set_i32(i32 %15, i32 %14)
  %16 = add i32 %4, 40
  call void @set_i32(i32 %16, i32 %4)
  %17 = add i32 %4, 4
  %18 = add i32 %4, 32
  call void @set_i32(i32 %18, i32 %17)
  %19 = add i32 %4, 8
  call void @wasmf_internal_58(i32 %19, i32 %2)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_37(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = load i32, i32* @wasmg_internal_0, align 4
  %4 = sub i32 %3, 48
  store i32 %4, i32* @wasmg_internal_0, align 4
  %5 = add i32 %4, 4
  call void @set_i32(i32 %5, i32 %1)
  %6 = add i32 %4, 0
  call void @set_i32(i32 %6, i32 %0)
  %7 = add i32 %4, 28
  %8 = add i32 %7, 0
  call void @set_i32(i32 %8, i32 2)
  %9 = add i32 %4, 44
  %10 = add i32 %9, 0
  call void @set_i32(i32 %10, i32 16)
  %11 = add i32 %4, 12
  call void @set_i64(i32 %11, i64 2)
  %12 = add i32 %4, 8
  call void @set_i32(i32 %12, i32 1050352)
  %13 = add i32 %4, 36
  call void @set_i32(i32 %13, i32 16)
  %14 = add i32 %4, 32
  %15 = add i32 %4, 24
  call void @set_i32(i32 %15, i32 %14)
  %16 = add i32 %4, 4
  %17 = add i32 %4, 40
  call void @set_i32(i32 %17, i32 %16)
  %18 = add i32 %4, 32
  call void @set_i32(i32 %18, i32 %4)
  %19 = add i32 %4, 8
  call void @wasmf_internal_58(i32 %19, i32 %2)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_38(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = load i32, i32* @wasmg_internal_0, align 4
  %4 = sub i32 %3, 48
  store i32 %4, i32* @wasmg_internal_0, align 4
  %5 = add i32 %4, 4
  call void @set_i32(i32 %5, i32 %1)
  %6 = add i32 %4, 0
  call void @set_i32(i32 %6, i32 %0)
  %7 = add i32 %4, 28
  %8 = add i32 %7, 0
  call void @set_i32(i32 %8, i32 2)
  %9 = add i32 %4, 44
  %10 = add i32 %9, 0
  call void @set_i32(i32 %10, i32 16)
  %11 = add i32 %4, 12
  call void @set_i64(i32 %11, i64 2)
  %12 = add i32 %4, 8
  call void @set_i32(i32 %12, i32 1050320)
  %13 = add i32 %4, 36
  call void @set_i32(i32 %13, i32 16)
  %14 = add i32 %4, 32
  %15 = add i32 %4, 24
  call void @set_i32(i32 %15, i32 %14)
  %16 = add i32 %4, 4
  %17 = add i32 %4, 40
  call void @set_i32(i32 %17, i32 %16)
  %18 = add i32 %4, 32
  call void @set_i32(i32 %18, i32 %4)
  %19 = add i32 %4, 8
  call void @wasmf_internal_58(i32 %19, i32 %2)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define i32 @wasmf_internal_39(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 32
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %0, 28
  %5 = add i32 %4, 0
  %6 = call i32 @get_i32(i32 %5)
  %7 = add i32 %0, 24
  %8 = call i32 @get_i32(i32 %7)
  %9 = add i32 %3, 24
  %10 = add i32 %1, 16
  %11 = add i32 %10, 0
  %12 = call i64 @get_i64(i32 %11)
  %13 = add i32 %9, 0
  call void @set_i64(i32 %13, i64 %12)
  %14 = add i32 %3, 16
  %15 = add i32 %1, 8
  %16 = add i32 %15, 0
  %17 = call i64 @get_i64(i32 %16)
  %18 = add i32 %14, 0
  call void @set_i64(i32 %18, i64 %17)
  %19 = add i32 %1, 0
  %20 = call i64 @get_i64(i32 %19)
  %21 = add i32 %3, 8
  call void @set_i64(i32 %21, i64 %20)
  %22 = add i32 %3, 8
  %23 = call i32 @wasmf_internal_13(i32 %8, i32 %6, i32 %22)
  %24 = add i32 %3, 32
  store i32 %24, i32* @wasmg_internal_0, align 4
  br label %exit

exit:                                             ; preds = %entry
  ret i32 %23
}

; Function Attrs: nounwind
define void @wasmf_internal_40(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 48
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %3, 4
  call void @set_i32(i32 %4, i32 %0)
  %5 = add i32 %3, 0
  call void @set_i32(i32 %5, i32 32)
  %6 = add i32 %3, 28
  %7 = add i32 %6, 0
  call void @set_i32(i32 %7, i32 2)
  %8 = add i32 %3, 44
  %9 = add i32 %8, 0
  call void @set_i32(i32 %9, i32 16)
  %10 = add i32 %3, 12
  call void @set_i64(i32 %10, i64 3)
  %11 = add i32 %3, 8
  call void @set_i32(i32 %11, i32 1050432)
  %12 = add i32 %3, 36
  call void @set_i32(i32 %12, i32 16)
  %13 = add i32 %3, 32
  %14 = add i32 %3, 24
  call void @set_i32(i32 %14, i32 %13)
  %15 = add i32 %3, 40
  call void @set_i32(i32 %15, i32 %3)
  %16 = add i32 %3, 4
  %17 = add i32 %3, 32
  call void @set_i32(i32 %17, i32 %16)
  %18 = add i32 %3, 8
  call void @wasmf_internal_58(i32 %18, i32 %1)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define i32 @wasmf_create_hasher() #1 {
entry:
  %0 = load i32, i32* @wasmg_internal_0, align 4
  %1 = sub i32 %0, 3840
  store i32 %1, i32* @wasmg_internal_0, align 4
  %2 = add i32 %1, 8
  call void @wasmf_internal_33(i32 %2)
  %3 = add i32 %1, 1928
  %4 = add i32 %1, 8
  %5 = call i32 @wasmf_internal_53(i32 %3, i32 %4, i32 1912)
  %6 = call i32 @wasmf_internal_67(i32 1920, i32 8)
  %7 = icmp eq i32 0, %6
  %8 = zext i1 %7 to i32
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %b_0, label %b_1

exit:                                             ; preds = %b_2
  ret i32 %6

b_0:                                              ; preds = %entry
  call void @wasmf_internal_76(i32 1920, i32 8)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_1
  %10 = add i32 %6, 0
  call void @set_i32(i32 %10, i32 0)
  %11 = add i32 %6, 4
  %12 = add i32 %1, 1924
  %13 = call i32 @wasmf_internal_53(i32 %11, i32 %12, i32 1916)
  %14 = add i32 %1, 3840
  store i32 %14, i32* @wasmg_internal_0, align 4
  br label %exit
}

; Function Attrs: nounwind
define i32 @wasmf_internal_42(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 32
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %0, 0
  %5 = call i32 @get_i32(i32 %4)
  %6 = add i32 %3, 4
  call void @set_i32(i32 %6, i32 %5)
  %7 = add i32 %3, 24
  %8 = add i32 %1, 16
  %9 = add i32 %8, 0
  %10 = call i64 @get_i64(i32 %9)
  %11 = add i32 %7, 0
  call void @set_i64(i32 %11, i64 %10)
  %12 = add i32 %3, 16
  %13 = add i32 %1, 8
  %14 = add i32 %13, 0
  %15 = call i64 @get_i64(i32 %14)
  %16 = add i32 %12, 0
  call void @set_i64(i32 %16, i64 %15)
  %17 = add i32 %1, 0
  %18 = call i64 @get_i64(i32 %17)
  %19 = add i32 %3, 8
  call void @set_i64(i32 %19, i64 %18)
  %20 = add i32 %3, 4
  %21 = add i32 %3, 8
  %22 = call i32 @wasmf_internal_13(i32 %20, i32 1049660, i32 %21)
  %23 = add i32 %3, 32
  store i32 %23, i32* @wasmg_internal_0, align 4
  br label %exit

exit:                                             ; preds = %entry
  ret i32 %22
}

; Function Attrs: nounwind
define i32 @wasmf_internal_43(i32 %0, i32 %1, i32 %2, i32 %3) #1 {
entry:
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 %11

b_0:                                              ; preds = %entry
  %4 = icmp ult i32 8, %2
  %5 = zext i1 %4 to i32
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %b_2, label %b_3

b_1:                                              ; preds = %b_6
  %7 = icmp ugt i32 %17, %19
  %8 = zext i1 %7 to i32
  %9 = icmp ne i32 %8, 0
  %10 = select i1 %9, i32 %19, i32 %17
  %11 = call i32 @wasmf_internal_53(i32 %20, i32 %16, i32 %10)
  call void @wasmf_internal_6(i32 %16)
  br label %exit

b_2:                                              ; preds = %b_0
  br label %b_5

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  %12 = call i32 @wasmf_internal_14(i32 %0, i32 %3)
  ret i32 %12

b_5:                                              ; preds = %b_2
  %13 = icmp ult i32 8, %2
  %14 = zext i1 %13 to i32
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %b_7, label %b_8

b_6:                                              ; preds = %b_9, %b_7
  %16 = phi i32 [ %0, %b_7 ], [ %0, %b_9 ]
  %17 = phi i32 [ %1, %b_7 ], [ %1, %b_9 ]
  %18 = phi i32 [ %2, %b_7 ], [ %2, %b_9 ]
  %19 = phi i32 [ %3, %b_7 ], [ %3, %b_9 ]
  %20 = phi i32 [ %22, %b_7 ], [ %23, %b_9 ]
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %b_1, label %b_10

b_7:                                              ; preds = %b_5
  %22 = call i32 @wasmf_internal_18(i32 %2, i32 %3)
  br label %b_6

b_8:                                              ; preds = %b_5
  br label %b_9

b_9:                                              ; preds = %b_8
  %23 = call i32 @wasmf_internal_1(i32 %3)
  br label %b_6

b_10:                                             ; preds = %b_6
  ret i32 0
}

; Function Attrs: nounwind
define i32 @wasmf_internal_44(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 48
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %3, 44
  %5 = add i32 %4, 0
  call void @set_i32(i32 %5, i32 4)
  %6 = add i32 %3, 28
  %7 = add i32 %6, 0
  call void @set_i32(i32 %7, i32 2)
  %8 = add i32 %3, 12
  call void @set_i64(i32 %8, i64 2)
  %9 = add i32 %3, 8
  call void @set_i32(i32 %9, i32 1049480)
  %10 = add i32 %3, 40
  call void @set_i32(i32 %10, i32 1049544)
  %11 = add i32 %3, 36
  call void @set_i32(i32 %11, i32 4)
  %12 = add i32 %3, 32
  call void @set_i32(i32 %12, i32 1049512)
  %13 = add i32 %3, 32
  %14 = add i32 %3, 24
  call void @set_i32(i32 %14, i32 %13)
  %15 = add i32 %3, 8
  %16 = call i32 @wasmf_internal_39(i32 %1, i32 %15)
  %17 = add i32 %3, 48
  store i32 %17, i32* @wasmg_internal_0, align 4
  br label %exit

exit:                                             ; preds = %entry
  ret i32 %16
}

; Function Attrs: nounwind
define void @wasmf_hash(i32 %0, i32 %1, i32 %2, i32 %3) #1 {
entry:
  %4 = load i32, i32* @wasmg_internal_0, align 4
  %5 = sub i32 %4, 2032
  store i32 %5, i32* @wasmg_internal_0, align 4
  call void @wasmf_internal_33(i32 %5)
  call void @wasmf_internal_4(i32 %5, i32 %0, i32 %1)
  %6 = add i32 %5, 1912
  call void @wasmf_internal_68(i32 %6, i32 %5)
  %7 = add i32 %5, 1912
  call void @wasmf_internal_31(i32 %7, i32 %2, i32 %3)
  %8 = add i32 %5, 1904
  %9 = add i32 %8, 0
  %10 = call i8 @get_i8(i32 %9)
  %11 = zext i8 %10 to i32
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %b_0, label %b_1

exit:                                             ; preds = %b_5
  ret void

b_0:                                              ; preds = %entry
  %13 = add i32 %5, 1904
  call void @set_i8(i32 %13, i8 0)
  br label %b_2

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_1, %b_0
  %14 = phi i32 [ %0, %b_0 ], [ %0, %b_1 ]
  %15 = phi i32 [ %1, %b_0 ], [ %1, %b_1 ]
  %16 = phi i32 [ %2, %b_0 ], [ %2, %b_1 ]
  %17 = phi i32 [ %3, %b_0 ], [ %3, %b_1 ]
  %18 = phi i32 [ %5, %b_0 ], [ %5, %b_1 ]
  %19 = icmp ne i32 %15, 0
  br i1 %19, label %b_3, label %b_4

b_3:                                              ; preds = %b_2
  call void @wasmf_internal_6(i32 %14)
  br label %b_5

b_4:                                              ; preds = %b_2
  br label %b_5

b_5:                                              ; preds = %b_4, %b_3
  %20 = phi i32 [ %14, %b_3 ], [ %14, %b_4 ]
  %21 = phi i32 [ %15, %b_3 ], [ %15, %b_4 ]
  %22 = phi i32 [ %16, %b_3 ], [ %16, %b_4 ]
  %23 = phi i32 [ %17, %b_3 ], [ %17, %b_4 ]
  %24 = phi i32 [ %18, %b_3 ], [ %18, %b_4 ]
  %25 = add i32 %24, 2032
  store i32 %25, i32* @wasmg_internal_0, align 4
  br label %exit
}

; Function Attrs: nounwind
define void @wasmf_blake3hash_digest(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = load i32, i32* @wasmg_internal_0, align 4
  %4 = sub i32 %3, 128
  store i32 %4, i32* @wasmg_internal_0, align 4
  br label %b_0

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  %5 = icmp ne i32 %0, 0
  br i1 %5, label %b_2, label %b_3

b_1:                                              ; preds = %b_2
  call void @wasmf_internal_74()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  %6 = add i32 %0, 0
  %7 = call i32 @get_i32(i32 %6)
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %b_1, label %b_5

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  call void @wasmf_internal_73()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_5:                                              ; preds = %b_2
  %9 = add i32 %0, 0
  call void @set_i32(i32 %9, i32 -1)
  %10 = add i32 %4, 8
  %11 = add i32 %0, 8
  call void @wasmf_internal_68(i32 %10, i32 %11)
  %12 = add i32 %4, 8
  call void @wasmf_internal_31(i32 %12, i32 %1, i32 %2)
  %13 = add i32 %0, 0
  call void @set_i32(i32 %13, i32 0)
  %14 = add i32 %4, 128
  store i32 %14, i32* @wasmg_internal_0, align 4
  ret void
}

; Function Attrs: nounwind
define i32 @wasmf_internal_47(i32 %0, i32 %1, i32 %2) #1 {
entry:
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 %9

b_0:                                              ; preds = %entry
  %3 = icmp ne i32 %1, 1114112
  %4 = zext i1 %3 to i32
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %b_2, label %b_3

b_1:                                              ; preds = %b_8, %b_2
  %6 = phi i32 [ %0, %b_2 ], [ %21, %b_8 ]
  %7 = phi i32 [ %1, %b_2 ], [ %22, %b_8 ]
  %8 = phi i32 [ %2, %b_2 ], [ %23, %b_8 ]
  %9 = phi i32 [ 1, %b_2 ], [ %36, %b_8 ]
  br label %exit

b_2:                                              ; preds = %b_0
  %10 = add i32 %0, 24
  %11 = call i32 @get_i32(i32 %10)
  %12 = add i32 %0, 28
  %13 = add i32 %12, 0
  %14 = call i32 @get_i32(i32 %13)
  %15 = add i32 %14, 16
  %16 = call i32 @get_i32(i32 %15)
  %17 = call i8* @get_function_from_table(i32 %16, i32 0)
  %18 = bitcast i8* %17 to i32 (i32, i32)*
  %19 = call i32 %18(i32 %11, i32 %1)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %b_1, label %b_5

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_5, %b_3
  %21 = phi i32 [ %0, %b_5 ], [ %0, %b_3 ]
  %22 = phi i32 [ %1, %b_5 ], [ %1, %b_3 ]
  %23 = phi i32 [ %2, %b_5 ], [ %2, %b_3 ]
  %24 = icmp eq i32 0, %23
  %25 = zext i1 %24 to i32
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %b_6, label %b_7

b_5:                                              ; preds = %b_2
  br label %b_4

b_6:                                              ; preds = %b_4
  ret i32 0

b_7:                                              ; preds = %b_4
  br label %b_8

b_8:                                              ; preds = %b_7
  %27 = add i32 %21, 24
  %28 = call i32 @get_i32(i32 %27)
  %29 = add i32 %21, 28
  %30 = add i32 %29, 0
  %31 = call i32 @get_i32(i32 %30)
  %32 = add i32 %31, 12
  %33 = call i32 @get_i32(i32 %32)
  %34 = call i8* @get_function_from_table(i32 %33, i32 1)
  %35 = bitcast i8* %34 to i32 (i32, i32, i32)*
  %36 = call i32 %35(i32 %28, i32 %23, i32 0)
  br label %b_1
}

; Function Attrs: nounwind
define void @wasmf_blake3hash_update(i32 %0, i32 %1, i32 %2) #1 {
entry:
  br label %b_0

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  %3 = icmp ne i32 %0, 0
  br i1 %3, label %b_2, label %b_3

b_1:                                              ; preds = %b_2
  call void @wasmf_internal_74()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  %4 = add i32 %0, 0
  %5 = call i32 @get_i32(i32 %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %b_1, label %b_5

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  call void @wasmf_internal_73()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_5:                                              ; preds = %b_2
  %7 = add i32 %0, 0
  call void @set_i32(i32 %7, i32 -1)
  %8 = add i32 %0, 8
  call void @wasmf_internal_4(i32 %8, i32 %1, i32 %2)
  %9 = icmp ne i32 %2, 0
  br i1 %9, label %b_6, label %b_7

b_6:                                              ; preds = %b_5
  call void @wasmf_internal_6(i32 %1)
  br label %b_8

b_7:                                              ; preds = %b_5
  br label %b_8

b_8:                                              ; preds = %b_7, %b_6
  %10 = phi i32 [ %0, %b_6 ], [ %0, %b_7 ]
  %11 = phi i32 [ %1, %b_6 ], [ %1, %b_7 ]
  %12 = phi i32 [ %2, %b_6 ], [ %2, %b_7 ]
  %13 = add i32 %10, 0
  call void @set_i32(i32 %13, i32 0)
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_49(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = load i32, i32* @wasmg_internal_0, align 4
  %4 = sub i32 %3, 32
  store i32 %4, i32* @wasmg_internal_0, align 4
  %5 = add i32 %4, 20
  %6 = add i32 %5, 0
  call void @set_i32(i32 %6, i32 0)
  %7 = add i32 %4, 16
  call void @set_i32(i32 %7, i32 1049904)
  %8 = add i32 %4, 4
  call void @set_i64(i32 %8, i64 1)
  %9 = add i32 %4, 28
  call void @set_i32(i32 %9, i32 %1)
  %10 = add i32 %4, 24
  call void @set_i32(i32 %10, i32 %0)
  %11 = add i32 %4, 24
  %12 = add i32 %4, 0
  call void @set_i32(i32 %12, i32 %11)
  call void @wasmf_internal_58(i32 %4, i32 %2)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define void @wasmf_hashreader_set_position(i32 %0, i32 %1, i32 %2) #1 {
entry:
  br label %b_0

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  %3 = icmp ne i32 %0, 0
  br i1 %3, label %b_2, label %b_3

b_1:                                              ; preds = %b_2
  call void @wasmf_internal_74()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  %4 = add i32 %0, 0
  %5 = call i32 @get_i32(i32 %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %b_1, label %b_5

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  call void @wasmf_internal_73()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_5:                                              ; preds = %b_2
  %7 = add i32 %0, 0
  call void @set_i32(i32 %7, i32 -1)
  %8 = add i32 %0, 8
  %9 = zext i32 %1 to i64
  %10 = zext i32 %2 to i64
  %11 = shl i64 %10, 32
  %12 = or i64 %9, %11
  %13 = lshr i64 %12, 6
  %14 = add i32 %8, 0
  call void @set_i64(i32 %14, i64 %13)
  %15 = trunc i64 %12 to i32
  %16 = and i32 %15, 63
  %17 = trunc i32 %16 to i8
  %18 = add i32 %8, 112
  call void @set_i8(i32 %18, i8 %17)
  %19 = add i32 %0, 0
  call void @set_i32(i32 %19, i32 0)
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_51(i32 %0) #1 {
entry:
  %1 = load i32, i32* @wasmg_internal_0, align 4
  %2 = sub i32 %1, 16
  store i32 %2, i32* @wasmg_internal_0, align 4
  %3 = add i32 %0, 12
  %4 = call i32 @get_i32(i32 %3)
  %5 = icmp eq i32 0, %4
  %6 = zext i1 %5 to i32
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %b_0, label %b_1

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  call void @wasmf_internal_49(i32 1049700, i32 43, i32 1049772)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_1
  %8 = add i32 %0, 8
  %9 = call i32 @get_i32(i32 %8)
  %10 = icmp eq i32 0, %9
  %11 = zext i1 %10 to i32
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %b_3, label %b_4

b_3:                                              ; preds = %b_2
  call void @wasmf_internal_49(i32 1049700, i32 43, i32 1049788)
  call void @awsm_abi__trap_unreachable()
  unreachable

b_4:                                              ; preds = %b_2
  br label %b_5

b_5:                                              ; preds = %b_4
  %13 = add i32 %2, 8
  call void @set_i32(i32 %13, i32 %4)
  %14 = add i32 %2, 4
  call void @set_i32(i32 %14, i32 %0)
  %15 = add i32 %2, 0
  call void @set_i32(i32 %15, i32 %9)
  call void @wasmf_internal_57(i32 %2)
  call void @awsm_abi__trap_unreachable()
  unreachable
}

; Function Attrs: nounwind
define void @wasmf_hashreader_fill(i32 %0, i32 %1, i32 %2) #1 {
entry:
  br label %b_0

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  %3 = icmp ne i32 %0, 0
  br i1 %3, label %b_2, label %b_3

b_1:                                              ; preds = %b_2
  call void @wasmf_internal_74()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  %4 = add i32 %0, 0
  %5 = call i32 @get_i32(i32 %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %b_1, label %b_5

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  call void @wasmf_internal_73()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_5:                                              ; preds = %b_2
  %7 = add i32 %0, 0
  call void @set_i32(i32 %7, i32 -1)
  %8 = add i32 %0, 8
  call void @wasmf_internal_31(i32 %8, i32 %1, i32 %2)
  %9 = add i32 %0, 0
  call void @set_i32(i32 %9, i32 0)
  ret void
}

; Function Attrs: nounwind
define i32 @wasmf_internal_53(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %b_0, label %b_1

exit:                                             ; preds = %b_2
  ret i32 %4

b_0:                                              ; preds = %entry
  br label %b_3

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_4, %b_1
  %4 = phi i32 [ %8, %b_4 ], [ %0, %b_1 ]
  %5 = phi i32 [ %17, %b_4 ], [ %1, %b_1 ]
  %6 = phi i32 [ %19, %b_4 ], [ %2, %b_1 ]
  %7 = phi i32 [ %18, %b_4 ], [ 0, %b_1 ]
  br label %exit

b_3:                                              ; preds = %b_3, %b_0
  %8 = phi i32 [ %0, %b_0 ], [ %8, %b_3 ]
  %9 = phi i32 [ %1, %b_0 ], [ %17, %b_3 ]
  %10 = phi i32 [ %2, %b_0 ], [ %19, %b_3 ]
  %11 = phi i32 [ %0, %b_0 ], [ %18, %b_3 ]
  %12 = add i32 %9, 0
  %13 = call i8 @get_i8(i32 %12)
  %14 = zext i8 %13 to i32
  %15 = trunc i32 %14 to i8
  %16 = add i32 %11, 0
  call void @set_i8(i32 %16, i8 %15)
  %17 = add i32 %9, 1
  %18 = add i32 %11, 1
  %19 = add i32 %10, -1
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %b_3, label %b_5

b_4:                                              ; preds = %b_5
  br label %b_2

b_5:                                              ; preds = %b_3
  br label %b_4
}

; Function Attrs: nounwind
define i32 @wasmf___wbindgen_malloc(i32 %0) #1 {
entry:
  br label %b_0

exit:                                             ; No predecessors!
  ret i32 0

b_0:                                              ; preds = %entry
  %1 = icmp ugt i32 %0, -4
  %2 = zext i1 %1 to i32
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %b_1, label %b_2

b_1:                                              ; preds = %b_5, %b_0
  %4 = phi i32 [ %0, %b_0 ], [ %11, %b_5 ]
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  %5 = icmp eq i32 0, %0
  %6 = zext i1 %5 to i32
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %b_3, label %b_4

b_3:                                              ; preds = %b_2
  ret i32 4

b_4:                                              ; preds = %b_2
  br label %b_5

b_5:                                              ; preds = %b_4
  %8 = icmp ult i32 %0, -3
  %9 = zext i1 %8 to i32
  %10 = shl i32 %9, 2
  %11 = call i32 @wasmf_internal_67(i32 %0, i32 %10)
  %12 = icmp eq i32 0, %11
  %13 = zext i1 %12 to i32
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %b_1, label %b_6

b_6:                                              ; preds = %b_5
  ret i32 %11
}

; Function Attrs: nounwind
define void @wasmf_internal_55(i32 %0) #1 {
entry:
  %1 = load i32, i32* @wasmg_internal_0, align 4
  %2 = sub i32 %1, 16
  store i32 %2, i32* @wasmg_internal_0, align 4
  %3 = add i32 %2, 4
  call void @set_i32(i32 %3, i32 0)
  %4 = add i32 %0, 0
  %5 = call i32 @get_i32(i32 %4)
  %6 = add i32 %2, 0
  call void @set_i32(i32 %6, i32 %5)
  %7 = add i32 %0, 4
  %8 = call i32 @get_i32(i32 %7)
  %9 = add i32 %8, 8
  %10 = call i32 @get_i32(i32 %9)
  %11 = add i32 %0, 8
  %12 = call i32 @get_i32(i32 %11)
  call void @wasmf_internal_30(i32 %2, i32 %10, i32 %12)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define void @wasmf___wbg_hashreader_free(i32 %0) #1 {
entry:
  br label %b_0

exit:                                             ; No predecessors!
  ret void

b_0:                                              ; preds = %entry
  %1 = icmp ne i32 %0, 0
  br i1 %1, label %b_2, label %b_3

b_1:                                              ; preds = %b_2
  call void @wasmf_internal_74()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  %2 = add i32 %0, 0
  %3 = call i32 @get_i32(i32 %2)
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %b_1, label %b_5

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  call void @wasmf_internal_73()
  call void @awsm_abi__trap_unreachable()
  unreachable

b_5:                                              ; preds = %b_2
  %5 = add i32 %0, 0
  call void @set_i32(i32 %5, i32 0)
  call void @wasmf_internal_6(i32 %0)
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_57(i32 %0) #1 {
entry:
  %1 = load i32, i32* @wasmg_internal_0, align 4
  %2 = sub i32 %1, 16
  store i32 %2, i32* @wasmg_internal_0, align 4
  %3 = add i32 %2, 8
  %4 = add i32 %0, 8
  %5 = add i32 %4, 0
  %6 = call i32 @get_i32(i32 %5)
  %7 = add i32 %3, 0
  call void @set_i32(i32 %7, i32 %6)
  %8 = add i32 %0, 0
  %9 = call i64 @get_i64(i32 %8)
  %10 = add i32 %2, 0
  call void @set_i64(i32 %10, i64 %9)
  call void @wasmf_internal_55(i32 %2)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_58(i32 %0, i32 %1) #1 {
entry:
  %2 = load i32, i32* @wasmg_internal_0, align 4
  %3 = sub i32 %2, 16
  store i32 %3, i32* @wasmg_internal_0, align 4
  %4 = add i32 %3, 12
  call void @set_i32(i32 %4, i32 %1)
  %5 = add i32 %3, 8
  call void @set_i32(i32 %5, i32 %0)
  %6 = add i32 %3, 4
  call void @set_i32(i32 %6, i32 1049924)
  %7 = add i32 %3, 0
  call void @set_i32(i32 %7, i32 1049904)
  call void @wasmf_internal_51(i32 %3)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define i32 @wasmf_internal_59(i32 %0, i32 %1) #1 {
entry:
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %b_0, label %b_1

exit:                                             ; preds = %b_2
  ret i32 %3

b_0:                                              ; preds = %entry
  br label %b_3

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_4, %b_1
  %3 = phi i32 [ %6, %b_4 ], [ %0, %b_1 ]
  %4 = phi i32 [ %11, %b_4 ], [ %1, %b_1 ]
  %5 = phi i32 [ %10, %b_4 ], [ 0, %b_1 ]
  br label %exit

b_3:                                              ; preds = %b_3, %b_0
  %6 = phi i32 [ %0, %b_0 ], [ %6, %b_3 ]
  %7 = phi i32 [ %1, %b_0 ], [ %11, %b_3 ]
  %8 = phi i32 [ %0, %b_0 ], [ %10, %b_3 ]
  %9 = add i32 %8, 0
  call void @set_i8(i32 %9, i8 0)
  %10 = add i32 %8, 1
  %11 = add i32 %7, -1
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %b_3, label %b_5

b_4:                                              ; preds = %b_5
  br label %b_2

b_5:                                              ; preds = %b_3
  br label %b_4
}

; Function Attrs: nounwind
define i32 @wasmf___wbindgen_realloc(i32 %0, i32 %1, i32 %2) #1 {
entry:
  br label %b_0

exit:                                             ; No predecessors!
  ret i32 0

b_0:                                              ; preds = %entry
  %3 = icmp ugt i32 %1, -4
  %4 = zext i1 %3 to i32
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %b_1, label %b_2

b_1:                                              ; preds = %b_2, %b_0
  %6 = phi i32 [ %0, %b_0 ], [ %9, %b_2 ]
  %7 = phi i32 [ %1, %b_0 ], [ %1, %b_2 ]
  %8 = phi i32 [ %2, %b_0 ], [ %2, %b_2 ]
  call void @awsm_abi__trap_unreachable()
  unreachable

b_2:                                              ; preds = %b_0
  %9 = call i32 @wasmf_internal_63(i32 %0, i32 %1, i32 4, i32 %2)
  %10 = icmp eq i32 0, %9
  %11 = zext i1 %10 to i32
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %b_1, label %b_3

b_3:                                              ; preds = %b_2
  ret i32 %9
}

; Function Attrs: nounwind
define void @wasmf_internal_61(i32 %0) #1 {
entry:
  br label %b_0

exit:                                             ; preds = %b_1
  ret void

b_0:                                              ; preds = %entry
  %1 = add i32 %0, 0
  %2 = call i32 @get_i32(i32 %1)
  %3 = icmp eq i32 0, %2
  %4 = zext i1 %3 to i32
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %b_1, label %b_2

b_1:                                              ; preds = %b_3, %b_2, %b_0
  %6 = phi i32 [ %0, %b_0 ], [ %0, %b_2 ], [ %0, %b_3 ]
  %7 = phi i32 [ %2, %b_0 ], [ %2, %b_2 ], [ %2, %b_3 ]
  br label %exit

b_2:                                              ; preds = %b_0
  %8 = add i32 %0, 4
  %9 = add i32 %8, 0
  %10 = call i32 @get_i32(i32 %9)
  %11 = icmp eq i32 0, %10
  %12 = zext i1 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %b_1, label %b_3

b_3:                                              ; preds = %b_2
  call void @wasmf_internal_6(i32 %2)
  br label %b_1
}

; Function Attrs: nounwind
define void @wasmf_internal_62(i32 %0) #1 {
entry:
  br label %b_0

exit:                                             ; preds = %b_1
  ret void

b_0:                                              ; preds = %entry
  %1 = add i32 %0, 4
  %2 = call i32 @get_i32(i32 %1)
  %3 = icmp eq i32 0, %2
  %4 = zext i1 %3 to i32
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %b_1, label %b_2

b_1:                                              ; preds = %b_3, %b_2, %b_0
  %6 = phi i32 [ %0, %b_0 ], [ %0, %b_2 ], [ %0, %b_3 ]
  %7 = phi i32 [ %2, %b_0 ], [ %2, %b_2 ], [ %2, %b_3 ]
  br label %exit

b_2:                                              ; preds = %b_0
  %8 = add i32 %0, 8
  %9 = add i32 %8, 0
  %10 = call i32 @get_i32(i32 %9)
  %11 = icmp eq i32 0, %10
  %12 = zext i1 %11 to i32
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %b_1, label %b_3

b_3:                                              ; preds = %b_2
  call void @wasmf_internal_6(i32 %2)
  br label %b_1
}

; Function Attrs: nounwind
define i32 @wasmf_internal_63(i32 %0, i32 %1, i32 %2, i32 %3) #1 {
entry:
  %4 = call i32 @wasmf_internal_43(i32 %0, i32 %1, i32 %2, i32 %3)
  br label %exit

exit:                                             ; preds = %entry
  ret i32 %4
}

; Function Attrs: nounwind
define void @wasmf___wbindgen_free(i32 %0, i32 %1) #1 {
entry:
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %b_0, label %b_1

exit:                                             ; preds = %b_2
  ret void

b_0:                                              ; preds = %entry
  call void @wasmf_internal_6(i32 %0)
  br label %b_2

b_1:                                              ; preds = %entry
  br label %b_2

b_2:                                              ; preds = %b_1, %b_0
  %3 = phi i32 [ %0, %b_0 ], [ %0, %b_1 ]
  %4 = phi i32 [ %1, %b_0 ], [ %1, %b_1 ]
  br label %exit
}

; Function Attrs: nounwind
define i32 @wasmf_internal_65(i32 %0, i32 %1, i32 %2) #1 {
entry:
  %3 = add i32 %0, 0
  %4 = call i32 @get_i32(i32 %3)
  %5 = add i32 %1, %2
  call void @wasmf_internal_26(i32 %4, i32 %1, i32 %5)
  br label %exit

exit:                                             ; preds = %entry
  ret i32 0
}

; Function Attrs: nounwind
define i32 @wasmf_internal_66(i32 %0, i32 %1) #1 {
entry:
  %2 = add i32 %0, 0
  %3 = call i32 @get_i32(i32 %2)
  %4 = add i32 %0, 4
  %5 = call i32 @get_i32(i32 %4)
  %6 = add i32 %5, 12
  %7 = call i32 @get_i32(i32 %6)
  %8 = call i8* @get_function_from_table(i32 %7, i32 0)
  %9 = bitcast i8* %8 to i32 (i32, i32)*
  %10 = call i32 %9(i32 %3, i32 %1)
  br label %exit

exit:                                             ; preds = %entry
  ret i32 %10
}

; Function Attrs: nounwind
define i32 @wasmf_internal_67(i32 %0, i32 %1) #1 {
entry:
  br label %b_0

exit:                                             ; preds = %b_1
  ret i32 %7

b_0:                                              ; preds = %entry
  %2 = icmp ult i32 8, %1
  %3 = zext i1 %2 to i32
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %b_2, label %b_3

b_1:                                              ; preds = %b_4, %b_2
  %5 = phi i32 [ %0, %b_2 ], [ %0, %b_4 ]
  %6 = phi i32 [ %1, %b_2 ], [ %1, %b_4 ]
  %7 = phi i32 [ %8, %b_2 ], [ %9, %b_4 ]
  br label %exit

b_2:                                              ; preds = %b_0
  %8 = call i32 @wasmf_internal_18(i32 %1, i32 %0)
  br label %b_1

b_3:                                              ; preds = %b_0
  br label %b_4

b_4:                                              ; preds = %b_3
  %9 = call i32 @wasmf_internal_1(i32 %0)
  br label %b_1
}

; Function Attrs: nounwind
define void @wasmf_internal_68(i32 %0, i32 %1) #1 {
entry:
  call void @wasmf_internal_5(i32 %0, i32 %1)
  %2 = add i32 %0, 112
  call void @set_i8(i32 %2, i8 0)
  br label %exit

exit:                                             ; preds = %entry
  ret void
}

; Function Attrs: nounwind
define i32 @wasmf_internal_69(i32 %0, i32 %1) #1 {
entry:
  %2 = add i32 %0, 0
  %3 = call i32 @get_i32(i32 %2)
  %4 = add i32 %0, 4
  %5 = call i32 @get_i32(i32 %4)
  %6 = call i32 @wasmf_internal_7(i32 %1, i32 %3, i32 %5)
  br label %exit

exit:                                             ; preds = %entry
  ret i32 %6
}

; Function Attrs: nounwind
define void @wasmf_internal_70() #1 {
entry:
  call void @wasmf_internal_49(i32 1049868, i32 17, i32 1049888)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define i32 @wasmf_internal_71(i32 %0, i32 %1) #1 {
entry:
  %2 = add i32 %0, 0
  %3 = call i32 @get_i32(i32 %2)
  br label %b_0

exit:                                             ; No predecessors!
  ret i32 0

b_0:                                              ; preds = %b_0, %entry
  %4 = phi i32 [ %0, %entry ], [ %4, %b_0 ]
  %5 = phi i32 [ %1, %entry ], [ %5, %b_0 ]
  br label %b_0

b_1:                                              ; No predecessors!
  call void @awsm_abi__trap_unreachable()
  unreachable
}

; Function Attrs: nounwind
define i32 @wasmf_internal_72(i32 %0, i32 %1) #1 {
entry:
  %2 = add i32 %0, 0
  %3 = call i32 @get_i32(i32 %2)
  %4 = zext i32 %3 to i64
  %5 = call i32 @wasmf_internal_23(i64 %4, i32 %1)
  br label %exit

exit:                                             ; preds = %entry
  ret i32 %5
}

; Function Attrs: nounwind
define void @wasmf_internal_73() #1 {
entry:
  call void @wasmf_internal_75(i32 1049552, i32 27)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_74() #1 {
entry:
  call void @wasmf_internal_75(i32 1049579, i32 79)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_75(i32 %0, i32 %1) #1 {
entry:
  call void @__wbindgen_placeholder_____wbindgen_throw(i32 %0, i32 %1)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_76(i32 %0, i32 %1) #1 {
entry:
  %2 = call i32 @get_i32(i32 1050488)
  %3 = icmp ne i32 %2, 0
  %4 = select i1 %3, i32 %2, i32 5
  %5 = call i8* @get_function_from_table(i32 %4, i32 2)
  %6 = bitcast i8* %5 to void (i32, i32)*
  call void %6(i32 %0, i32 %1)
  call void @awsm_abi__trap_unreachable()
  unreachable

exit:                                             ; No predecessors!
  ret void
}

; Function Attrs: nounwind
define i64 @wasmf_internal_77(i32 %0) #1 {
entry:
  br label %exit

exit:                                             ; preds = %entry
  ret i64 -6438272686846998974
}

; Function Attrs: nounwind
define i64 @wasmf_internal_78(i32 %0) #1 {
entry:
  br label %exit

exit:                                             ; preds = %entry
  ret i64 5078313853150524003
}

; Function Attrs: nounwind
define void @wasmf_internal_79(i32 %0) #1 {
entry:
  br label %exit

exit:                                             ; preds = %entry
  ret void
}

; Function Attrs: nounwind
define void @wasmf_internal_80(i32 %0, i32 %1) #1 {
entry:
  br label %exit

exit:                                             ; preds = %entry
  ret void
}

; Function Attrs: nounwind
define i32 @init_memory_offset_0() #1 {
entry:
  br label %exit

exit:                                             ; preds = %entry
  ret i32 1048576
}

define void @populate_memory() {
entry:
  %0 = call i32 @init_memory_offset_0()
  call void @initialize_region(i32 %0, i32 1877, i8* getelementptr inbounds (<1877 x i8>, <1877 x i8>* @init_vector_0, i32 0, i32 0))
  ret void
}

define void @awsm_abi__start_fn() {
entry:
  ret void
}

; Function Attrs: nounwind
define i32 @init_table_offset_0() #1 {
entry:
  br label %exit

exit:                                             ; preds = %entry
  ret i32 1
}

define void @populate_table() {
entry:
  %0 = call i32 @init_table_offset_0()
  %1 = add i32 %0, 0
  call void @add_function_to_table(i32 %1, i32 4, i8* bitcast (void (i32)* @wasmf_internal_79 to i8*))
  %2 = add i32 %0, 1
  call void @add_function_to_table(i32 %2, i32 0, i8* bitcast (i32 (i32, i32)* @wasmf_internal_44 to i8*))
  %3 = add i32 %0, 2
  call void @add_function_to_table(i32 %3, i32 0, i8* bitcast (i32 (i32, i32)* @wasmf_internal_44 to i8*))
  %4 = add i32 %0, 3
  call void @add_function_to_table(i32 %4, i32 0, i8* bitcast (i32 (i32, i32)* @wasmf_internal_69 to i8*))
  %5 = add i32 %0, 4
  call void @add_function_to_table(i32 %5, i32 2, i8* bitcast (void (i32, i32)* @wasmf_internal_80 to i8*))
  %6 = add i32 %0, 5
  call void @add_function_to_table(i32 %6, i32 4, i8* bitcast (void (i32)* @wasmf_internal_79 to i8*))
  %7 = add i32 %0, 6
  call void @add_function_to_table(i32 %7, i32 1, i8* bitcast (i32 (i32, i32, i32)* @wasmf_internal_65 to i8*))
  %8 = add i32 %0, 7
  call void @add_function_to_table(i32 %8, i32 0, i8* bitcast (i32 (i32, i32)* @wasmf_internal_17 to i8*))
  %9 = add i32 %0, 8
  call void @add_function_to_table(i32 %9, i32 0, i8* bitcast (i32 (i32, i32)* @wasmf_internal_42 to i8*))
  %10 = add i32 %0, 9
  call void @add_function_to_table(i32 %10, i32 10, i8* bitcast (i64 (i32)* @wasmf_internal_77 to i8*))
  %11 = add i32 %0, 10
  call void @add_function_to_table(i32 %11, i32 4, i8* bitcast (void (i32)* @wasmf_internal_62 to i8*))
  %12 = add i32 %0, 11
  call void @add_function_to_table(i32 %12, i32 2, i8* bitcast (void (i32, i32)* @wasmf_internal_24 to i8*))
  %13 = add i32 %0, 12
  call void @add_function_to_table(i32 %13, i32 2, i8* bitcast (void (i32, i32)* @wasmf_internal_29 to i8*))
  %14 = add i32 %0, 13
  call void @add_function_to_table(i32 %14, i32 4, i8* bitcast (void (i32)* @wasmf_internal_61 to i8*))
  %15 = add i32 %0, 14
  call void @add_function_to_table(i32 %15, i32 10, i8* bitcast (i64 (i32)* @wasmf_internal_78 to i8*))
  %16 = add i32 %0, 15
  call void @add_function_to_table(i32 %16, i32 0, i8* bitcast (i32 (i32, i32)* @wasmf_internal_72 to i8*))
  %17 = add i32 %0, 16
  call void @add_function_to_table(i32 %17, i32 0, i8* bitcast (i32 (i32, i32)* @wasmf_internal_71 to i8*))
  %18 = add i32 %0, 17
  call void @add_function_to_table(i32 %18, i32 0, i8* bitcast (i32 (i32, i32)* @wasmf_internal_66 to i8*))
  %19 = add i32 %0, 18
  call void @add_function_to_table(i32 %19, i32 0, i8* bitcast (i32 (i32, i32)* @wasmf_internal_69 to i8*))
  %20 = add i32 %0, 19
  call void @add_function_to_table(i32 %20, i32 4, i8* bitcast (void (i32)* @wasmf_internal_79 to i8*))
  %21 = add i32 %0, 20
  call void @add_function_to_table(i32 %21, i32 10, i8* bitcast (i64 (i32)* @wasmf_internal_77 to i8*))
  ret void
}

attributes #0 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #1 = { nounwind }
